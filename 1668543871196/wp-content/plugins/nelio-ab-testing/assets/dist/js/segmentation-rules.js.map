{"version":3,"file":"js/segmentation-rules.js","mappings":"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","sources":["webpack://nab/./packages/segmentation-rules/api/factory.ts","webpack://nab/./packages/segmentation-rules/api/registration.ts","webpack://nab/./packages/segmentation-rules/index.ts","webpack://nab/./packages/segmentation-rules/store/actions.ts","webpack://nab/./packages/segmentation-rules/store/config.ts","webpack://nab/./packages/segmentation-rules/store/index.ts","webpack://nab/./packages/segmentation-rules/store/reducer.ts","webpack://nab/./packages/segmentation-rules/store/selectors.ts","webpack://nab/./node_modules/uuid/dist/esm-browser/regex.js","webpack://nab/./node_modules/uuid/dist/esm-browser/rng.js","webpack://nab/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://nab/./node_modules/uuid/dist/esm-browser/v4.js","webpack://nab/./node_modules/uuid/dist/esm-browser/validate.js","webpack://nab/external window \"lodash\"","webpack://nab/external window [\"nab\",\"utils\"]","webpack://nab/external window [\"wp\",\"data\"]","webpack://nab/webpack/bootstrap","webpack://nab/webpack/runtime/compat get default export","webpack://nab/webpack/runtime/define property getters","webpack://nab/webpack/runtime/hasOwnProperty shorthand","webpack://nab/webpack/runtime/make namespace object","webpack://nab/./packages/segmentation-rules/export.ts"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n\n/**\n * External dependencies\n */\nimport { v4 as uuid } from 'uuid';\nimport type {\n\tDict,\n\tMaybe,\n\tSegmentationRule,\n\tSegmentationRuleTypeName,\n} from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME as NAB_SEGMENTS } from '../store/config';\n\n/**\n * Creates a new segmentation rule of the given type using the given attributes.\n *\n * @param {string} typeName   the type of the new segmentation rule.\n * @param {Object} attributes the attributes of the new segmentation rule.\n *\n * @return {Object} an instance of the given segmentation rule.\n */\nexport function createSegmentationRule< T extends Dict = Dict >(\n\ttypeName: SegmentationRuleTypeName,\n\tattributes?: Partial< T >\n): Maybe< SegmentationRule< T > > {\n\tconst { getSegmentationRuleType } = select( NAB_SEGMENTS );\n\tconst segmentationRuleType = getSegmentationRuleType< T >( typeName );\n\n\tif ( ! segmentationRuleType ) {\n\t\treturn;\n\t} //end if\n\n\treturn {\n\t\tid: uuid(),\n\t\ttype: typeName,\n\t\tattributes: {\n\t\t\t...segmentationRuleType.attributes,\n\t\t\t...( attributes || {} ),\n\t\t},\n\t};\n} //end createSegmentationRule()\n","/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\n\n/**\n * External dependencies\n */\nimport { isFunction } from 'lodash';\nimport { isValidIcon } from '@nab/utils';\nimport type {\n\tDict,\n\tMaybe,\n\tSegmentationRuleCategory,\n\tSegmentationRuleCategoryName,\n\tSegmentationRuleType,\n\tSegmentationRuleTypeName,\n} from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME as NAB_SEGMENTS } from '../store/config';\n\n/**\n * Registers a new segmentation rule provided a unique name and an object defining\n * its behavior. Once registered, the rule is made available as an option to any\n * interface where segmentation rules are implemented.\n *\n * @param {string} name     SegmentationRule name.\n * @param {Object} settings SegmentationRule settings.\n *\n * @return {?Object} The segmentation rule, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nexport function registerSegmentationRuleType< T extends Dict = Dict >(\n\tname: SegmentationRuleTypeName,\n\tsettings: Partial< Omit< SegmentationRuleType< T >, 'name' > >\n): Maybe< SegmentationRuleType< T > > {\n\tconst srt = {\n\t\tname,\n\t\t...settings,\n\t};\n\n\tif ( typeof name !== 'string' ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error( 'Segmentation rule names must be strings.' );\n\t\treturn;\n\t} //end if\n\n\tif ( ! /^[a-z][a-z0-9-]*\\/[a-z][a-z0-9-]*$/.test( name ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error(\n\t\t\t'Segmentation rule names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: my-plugin/my-custom-segmentation-rule'\n\t\t);\n\t\treturn;\n\t} //end if\n\n\tif ( select( NAB_SEGMENTS ).getSegmentationRuleType( name ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error( `Segmentation rule “${ name }” is already registered.` );\n\t\treturn;\n\t} //end if\n\n\tif ( ! hasAttributes( srt ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error(\n\t\t\t`Segmentation rule “${ name }” should specify its default attributes.`\n\t\t);\n\t\treturn;\n\t} //end if\n\n\tif ( ! hasIcon( srt ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error( `Segmentation rule “${ name }” must have an icon.` );\n\t\treturn;\n\t} //end if\n\n\tif ( ! isValidIcon( srt.icon ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error(\n\t\t\t'The icon passed is invalid. The icon should be an element or a function.'\n\t\t);\n\t\treturn;\n\t} //end if\n\n\tif ( ! hasView( srt ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error( 'The “view” property must be a valid function.' );\n\t\treturn;\n\t} //end if\n\n\tif ( ! hasEdit( srt ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error( 'The “edit” property must be a valid function.' );\n\t\treturn;\n\t} //end if\n\n\tif ( ! hasTitle( srt ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error( `Segmentation rule “${ name }” must have a title.` );\n\t\treturn;\n\t} //end if\n\n\tif ( ! hasCategory( srt ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error( `Segmentation rule “${ name }” must have a category.` );\n\t\treturn;\n\t} //end if\n\n\tdispatch( NAB_SEGMENTS ).addSegmentationRuleTypes( srt );\n\n\treturn srt;\n} //end registerSegmentationRuleType()\n\n/**\n * Registers a new segmentation rule category provided a unique name and an object defining\n * its settings. Once registered, the category is made available as an option to any\n * interface where segmentation rules are implemented.\n *\n * @param {string} name     SegmentationRuleCategory name.\n * @param {Object} settings SegmentationRuleCategory settings.\n *\n * @return {?Object} The segmentation rule category, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nexport function registerSegmentationRuleTypeCategory(\n\tname: SegmentationRuleCategoryName,\n\tsettings: Omit< SegmentationRuleCategory, 'name' >\n): Maybe< SegmentationRuleCategory > {\n\tconst src = { name, ...settings };\n\n\tif ( typeof name !== 'string' ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error( 'Segmentation rule category names must be strings.' );\n\t\treturn;\n\t} //end if\n\n\tif ( ! /^[a-z][a-z0-9-]*\\/[a-z][a-z0-9-]*$/.test( name ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error(\n\t\t\t'Segmentation rule category names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: my-plugin/my-custom-segmentation-rule-category'\n\t\t);\n\t\treturn;\n\t} //end if\n\n\tif ( select( NAB_SEGMENTS ).getSegmentationRuleTypeCategory( name ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error(\n\t\t\t`Segmentation rule category “${ name }” is already registered.`\n\t\t);\n\t\treturn;\n\t} //end if\n\n\tif ( ! hasIcon( src ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error(\n\t\t\t`Segmentation rule category “${ name }” must have an icon.`\n\t\t);\n\t\treturn;\n\t} //end if\n\n\tif ( ! isValidIcon( src.icon ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error(\n\t\t\t'The icon passed is invalid. The icon should be an element or a function.'\n\t\t);\n\t\treturn;\n\t} //end if\n\n\tif ( ! hasTitle( src ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error(\n\t\t\t`Segmentation rule category “${ name }” must have a title.`\n\t\t);\n\t\treturn;\n\t} //end if\n\n\tdispatch( NAB_SEGMENTS ).addSegmentationRuleTypeCategories( src );\n\n\treturn src;\n} //end registerSegmentationRuleTypeCategory()\n\n// =======\n// HELPERS\n// =======\n\nconst hasAttributes = < T extends Dict >(\n\tx: Partial< SegmentationRuleType< T > >\n): x is { attributes: SegmentationRuleType< T >[ 'attributes' ] } =>\n\t!! x.attributes;\n\nconst hasIcon = (\n\tx: Partial< SegmentationRuleType >\n): x is { icon: SegmentationRuleType[ 'icon' ] } => 'icon' in x;\n\nconst hasView = (\n\tx: Partial< SegmentationRuleType >\n): x is { view: SegmentationRuleType[ 'view' ] } => isFunction( x.view );\n\nconst hasEdit = (\n\tx: Partial< SegmentationRuleType >\n): x is { edit: SegmentationRuleType[ 'edit' ] } => isFunction( x.edit );\n\nconst hasCategory = (\n\tx: Partial< SegmentationRuleType >\n): x is { category: SegmentationRuleType[ 'category' ] } => !! x.category;\n\nconst hasTitle = (\n\tx: Dict\n): x is { title: SegmentationRuleCategory[ 'title' ] } => !! x.title;\n","export * from './store';\nexport * from './api/factory';\nexport * from './api/registration';\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\nimport type {\n\tSegmentationRuleCategory,\n\tSegmentationRuleCategoryName,\n\tSegmentationRuleType,\n\tSegmentationRuleTypeName,\n} from '@nab/types';\n\nexport type Action =\n\t| AddSegmentationRuleTypes\n\t| RemoveSegmentationRuleTypes\n\t| AddSegmentationRuleTypeCategories\n\t| RemoveSegmentationRuleTypeCategories;\n\nexport function addSegmentationRuleTypes(\n\tsegmentationRuleTypes:\n\t\t| SegmentationRuleType\n\t\t| ReadonlyArray< SegmentationRuleType >\n): AddSegmentationRuleTypes {\n\treturn {\n\t\ttype: 'ADD_SEGMENTATION_RULE_TYPES',\n\t\tsegmentationRuleTypes: castArray( segmentationRuleTypes ),\n\t};\n} //end addSegmentationRuleTypes()\n\nexport function removeSegmentationRuleTypes(\n\tnames: SegmentationRuleTypeName | ReadonlyArray< SegmentationRuleTypeName >\n): RemoveSegmentationRuleTypes {\n\treturn {\n\t\ttype: 'REMOVE_SEGMENTATION_RULE_TYPES',\n\t\tnames: castArray( names ),\n\t};\n} //end removeSegmentationRuleTypes()\n\nexport function addSegmentationRuleTypeCategories(\n\tcategories:\n\t\t| SegmentationRuleCategory\n\t\t| ReadonlyArray< SegmentationRuleCategory >\n): AddSegmentationRuleTypeCategories {\n\treturn {\n\t\ttype: 'ADD_SEGMENTATION_RULE_TYPE_CATEGORIES',\n\t\tcategories: castArray( categories ),\n\t};\n} //end addSegmentationRuleTypeCategories()\n\nexport function removeSegmentationRuleTypeCategories(\n\tnames:\n\t\t| SegmentationRuleCategoryName\n\t\t| ReadonlyArray< SegmentationRuleCategoryName >\n): RemoveSegmentationRuleTypeCategories {\n\treturn {\n\t\ttype: 'REMOVE_SEGMENTATION_RULE_TYPE_CATEGORIES',\n\t\tnames: castArray( names ),\n\t};\n} //end removeSegmentationRuleTypeCategories()\n\n// ============\n// HELPER TYPES\n// ============\n\ntype AddSegmentationRuleTypes = {\n\treadonly type: 'ADD_SEGMENTATION_RULE_TYPES';\n\treadonly segmentationRuleTypes: ReadonlyArray< SegmentationRuleType >;\n};\n\ntype RemoveSegmentationRuleTypes = {\n\treadonly type: 'REMOVE_SEGMENTATION_RULE_TYPES';\n\treadonly names: ReadonlyArray< SegmentationRuleTypeName >;\n};\n\ntype AddSegmentationRuleTypeCategories = {\n\treadonly type: 'ADD_SEGMENTATION_RULE_TYPE_CATEGORIES';\n\treadonly categories: ReadonlyArray< SegmentationRuleCategory >;\n};\n\ntype RemoveSegmentationRuleTypeCategories = {\n\treadonly type: 'REMOVE_SEGMENTATION_RULE_TYPE_CATEGORIES';\n\treadonly names: ReadonlyArray< SegmentationRuleCategoryName >;\n};\n","/**\n * Internal dependencies\n */\nimport type { State } from './types';\n\nexport const STORE_NAME = 'nab/segmentation-rules';\n\nexport const INIT_STATE: State = {\n\tsegmentationRuleTypes: {},\n\tcategories: {},\n};\n","/**\n * WordPress dependencies\n */\nimport { registerStore } from '@wordpress/data';\n\n/**\n * External dependencies\n */\nimport type {\n\tDict,\n\tMaybe,\n\tSegmentationRuleType,\n\tSegmentationRuleTypeName,\n\tRemoveReturnTypes,\n\tOmitFirstArgs,\n} from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport { reducer } from './reducer';\nimport { STORE_NAME } from './config';\n\nexport { STORE_NAME } from './config';\n\nregisterStore( STORE_NAME, { reducer, selectors, actions } );\n\n// ==========\n// TYPESCRIPT\n// ==========\n\ntype Actions = RemoveReturnTypes< typeof actions >;\n\ntype Selectors = OmitFirstArgs<\n\tOmit< typeof selectors, 'getSegmentationRuleType' >\n> & {\n\treadonly getSegmentationRuleType: < T extends Dict = Dict >(\n\t\tname: SegmentationRuleTypeName\n\t) => Maybe< SegmentationRuleType< T > >;\n};\n\ndeclare module '@wordpress/data' {\n\tfunction dispatch( key: typeof STORE_NAME ): Actions;\n\tfunction select( key: typeof STORE_NAME ): Selectors;\n}\n","/**\n * External dependencies\n */\nimport { keyBy, omit } from 'lodash';\nimport type { AnyAction } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { INIT_STATE } from './config';\nimport type { Action } from './actions';\nimport type { State } from './types';\n\nexport function reducer( state = INIT_STATE, action: AnyAction ): State {\n\treturn actualReducer( state, action as Action ) ?? state;\n} //end reducer()\n\nfunction actualReducer( state: State, action: Action ): State {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_SEGMENTATION_RULE_TYPES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsegmentationRuleTypes: {\n\t\t\t\t\t...state.segmentationRuleTypes,\n\t\t\t\t\t...keyBy( action.segmentationRuleTypes, 'name' ),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase 'REMOVE_SEGMENTATION_RULE_TYPES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsegmentationRuleTypes: omit(\n\t\t\t\t\tstate.segmentationRuleTypes,\n\t\t\t\t\taction.names\n\t\t\t\t),\n\t\t\t};\n\n\t\tcase 'ADD_SEGMENTATION_RULE_TYPE_CATEGORIES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: {\n\t\t\t\t\t...state.categories,\n\t\t\t\t\t...keyBy( action.categories, 'name' ),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase 'REMOVE_SEGMENTATION_RULE_TYPE_CATEGORIES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: omit( state.categories, action.names ),\n\t\t\t};\n\t} //end switch\n} //end actualReducer()\n","/**\n * External dependencies\n */\nimport { values } from 'lodash';\nimport type {\n\tDict,\n\tMaybe,\n\tSegmentationRuleType,\n\tSegmentationRuleTypeName,\n\tSegmentationRuleCategory,\n\tSegmentationRuleCategoryName,\n} from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport type { State } from './types';\n\nexport function getSegmentationRuleTypes(\n\tstate: State\n): ReadonlyArray< SegmentationRuleType > {\n\treturn values( state.segmentationRuleTypes );\n} //end getSegmentationRuleTypes()\n\nexport function getSegmentationRuleType< T extends Dict = Dict >(\n\tstate: State,\n\tname: SegmentationRuleTypeName\n): Maybe< SegmentationRuleType< T > > {\n\treturn state.segmentationRuleTypes[ name ] as SegmentationRuleType< T >;\n} //end getSegmentationRuleType()\n\nexport function getSegmentationRuleTypeCategories(\n\tstate: State\n): ReadonlyArray< SegmentationRuleCategory > {\n\treturn values( state.categories );\n} //end getSegmentationRuleTypeCategories()\n\nexport function getSegmentationRuleTypeCategory(\n\tstate: State,\n\tname: SegmentationRuleCategoryName\n): Maybe< SegmentationRuleCategory > {\n\treturn state.categories[ name ];\n} //end getSegmentationRuleTypeCategory()\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","module.exports = window[\"lodash\"];","module.exports = window[\"nab\"][\"utils\"];","module.exports = window[\"wp\"][\"data\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * as segmentationRules from './index';\n"],"names":[],"sourceRoot":""}