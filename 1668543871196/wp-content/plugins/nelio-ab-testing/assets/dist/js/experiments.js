!function(){var e={d:function(n,r){for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},o:function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r:function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},n={};!function(){"use strict";e.r(n),e.d(n,{experiments:function(){return i}});var r={};e.r(r),e.d(r,{getExperimentSupport:function(){return h},getExperimentType:function(){return E},getExperimentTypes:function(){return v},getExperimentView:function(){return x},getHelpString:function(){return g},hasExperimentSupport:function(){return T}});var t={};e.r(t),e.d(t,{addExperimentTypes:function(){return w},removeExperimentTypes:function(){return O}});var i={};e.r(i),e.d(i,{STORE_NAME:function(){return p},registerExperimentType:function(){return l}});var o=window.wp.data,a=window.lodash,s=window.nab.utils,p="nab/experiments",u={experimentTypes:{}},c=function(){return c=Object.assign||function(e){for(var n,r=1,t=arguments.length;r<t;r++)for(var i in n=arguments[r])Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i]);return e},c.apply(this,arguments)};function l(e,n){var r=c({name:e,description:"",supports:{}},n);if("nab/heatmap"===e)return(0,o.dispatch)(p).addExperimentTypes(r),r;if("string"==typeof e)if(/^[a-z][a-z0-9-]*\/[a-z][a-z0-9-]*$/.test(e))if((0,o.select)(p).getExperimentType(e))console.error("Experiment type “".concat(e,"” is already registered."));else if(f(r))if(m(r))if(y(r))if((0,s.isValidIcon)(n.icon)){if(d(r))return(0,o.dispatch)(p).addExperimentTypes(r),r;console.error("The experiment “".concat(e,"” must specify original and alternative edit views."))}else console.error("The icon passed is invalid. The icon should be an element or a function.");else console.error("The experiment “".concat(e,"” must have an icon."));else console.error("The experiment “".concat(e,"” must have a title."));else console.error("The experiment “".concat(e,"” must provide help strings explaining the control version and its variants."));else console.error("Experiment type names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: my-plugin/my-custom-experiment");else console.error("Experiment type names must be strings.")}var f=function(e){return!!e.help&&"string"==typeof e.help.original&&!!e.help.original&&"string"==typeof e.help.alternative&&!!e.help.alternative},m=function(e){return"string"==typeof e.title&&!!e.title},y=function(e){return"icon"in e},d=function(e){var n,r;return(0,a.isFunction)(null===(n=e.views)||void 0===n?void 0:n.original)&&(0,a.isFunction)(null===(r=e.views)||void 0===r?void 0:r.alternative)};function v(e){return e.experimentTypes}function E(e,n){return e.experimentTypes[n]}function h(e,n,r){var t=b(e,n);return null==t?void 0:t.supports[r]}function T(e,n,r){return!!h(e,n,r)}function x(e,n,r){var t=b(e,n);if(t)return t.views[r]}function g(e,n,r){var t=b(e,n);return(null==t?void 0:t.help[r])||""}var b=function(e,n){return"string"==typeof n?E(e,n):n};function w(e){return{type:"ADD_EXPERIMENT_TYPES",experimentTypes:(0,a.castArray)(e)}}function O(e){return{type:"REMOVE_EXPERIMENT_TYPES",names:(0,a.castArray)(e)}}var P=function(){return P=Object.assign||function(e){for(var n,r=1,t=arguments.length;r<t;r++)for(var i in n=arguments[r])Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i]);return e},P.apply(this,arguments)};(0,o.registerStore)(p,{reducer:function(e,n){var r;return void 0===e&&(e=u),null!==(r=function(e,n){switch(n.type){case"ADD_EXPERIMENT_TYPES":return P(P({},e),{experimentTypes:P(P({},e.experimentTypes),(0,a.keyBy)(n.experimentTypes,"name"))});case"REMOVE_EXPERIMENT_TYPES":return P(P({},e),{experimentTypes:(0,a.omit)(e.experimentTypes,n.names)})}}(e,n))&&void 0!==r?r:e},selectors:r,actions:t})}();var r=nab="undefined"==typeof nab?{}:nab;for(var t in n)r[t]=n[t];n.__esModule&&Object.defineProperty(r,"__esModule",{value:!0})}();