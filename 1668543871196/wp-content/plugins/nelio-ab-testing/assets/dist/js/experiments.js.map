{"version":3,"file":"js/experiments.js","mappings":"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","sources":["webpack://nab/./packages/experiments/api/index.ts","webpack://nab/./packages/experiments/api/registration.ts","webpack://nab/./packages/experiments/index.ts","webpack://nab/./packages/experiments/store/actions.ts","webpack://nab/./packages/experiments/store/config.ts","webpack://nab/./packages/experiments/store/index.ts","webpack://nab/./packages/experiments/store/reducer.ts","webpack://nab/./packages/experiments/store/selectors.ts","webpack://nab/external window \"lodash\"","webpack://nab/external window [\"nab\",\"utils\"]","webpack://nab/external window [\"wp\",\"data\"]","webpack://nab/webpack/bootstrap","webpack://nab/webpack/runtime/compat get default export","webpack://nab/webpack/runtime/define property getters","webpack://nab/webpack/runtime/hasOwnProperty shorthand","webpack://nab/webpack/runtime/make namespace object","webpack://nab/./packages/experiments/export.ts"],"sourcesContent":["export * from './registration';\n","/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\n\n/**\n * External dependencies\n */\nimport { isFunction } from 'lodash';\nimport { isValidIcon } from '@nab/utils';\nimport type { ExperimentType, ExperimentTypeName, Maybe } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME as NAB_EXPERIMENTS } from '../store/config';\n\n/**\n * Registers a new experiment provided a unique name and an object defining its\n * behavior. Once registered, the experiment is made available as an option to\n * any interface where experiments are implemented.\n *\n * @param {string} name     Experiment name.\n * @param {Object} settings Experiment settings.\n *\n * @return {?Object} The experiment, if it has been successfully registered;\n *                       otherwise `undefined`.\n */\nexport function registerExperimentType(\n\tname: ExperimentTypeName,\n\tsettings: Partial< ExperimentType >\n): Maybe< ExperimentType > {\n\tconst et = {\n\t\tname,\n\t\tdescription: '',\n\t\tsupports: {},\n\t\t...settings,\n\t};\n\n\tif ( 'nab/heatmap' === name ) {\n\t\tdispatch( NAB_EXPERIMENTS ).addExperimentTypes( et as ExperimentType );\n\t\treturn et as ExperimentType;\n\t} //end if\n\n\tif ( typeof name !== 'string' ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error( 'Experiment type names must be strings.' );\n\t\treturn;\n\t} //end if\n\n\tif ( ! /^[a-z][a-z0-9-]*\\/[a-z][a-z0-9-]*$/.test( name ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error(\n\t\t\t'Experiment type names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: my-plugin/my-custom-experiment'\n\t\t);\n\t\treturn;\n\t} //end if\n\n\tif ( select( NAB_EXPERIMENTS ).getExperimentType( name ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error( `Experiment type “${ name }” is already registered.` );\n\t\treturn;\n\t} //end if\n\n\tif ( ! hasHelp( et ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error(\n\t\t\t`The experiment “${ name }” must provide help strings explaining the control version and its variants.`\n\t\t);\n\t\treturn;\n\t} //end if\n\n\tif ( ! hasTitle( et ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error( `The experiment “${ name }” must have a title.` );\n\t\treturn;\n\t} //end if\n\n\tif ( ! hasIcon( et ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error( `The experiment “${ name }” must have an icon.` );\n\t\treturn;\n\t} //end if\n\n\tif ( ! isValidIcon( settings.icon ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error(\n\t\t\t'The icon passed is invalid. The icon should be an element or a function.'\n\t\t);\n\t\treturn;\n\t} //end if\n\n\tif ( ! hasViews( et ) ) {\n\t\t// eslint-disable-next-line\n\t\tconsole.error(\n\t\t\t`The experiment “${ name }” must specify original and alternative edit views.`\n\t\t);\n\t\treturn;\n\t} //end if\n\n\tdispatch( NAB_EXPERIMENTS ).addExperimentTypes( et );\n\n\treturn et;\n} //end registerExperimentType()\n\n// =======\n// HELPERS\n// =======\n\nconst hasHelp = (\n\tx: Partial< ExperimentType >\n): x is { help: ExperimentType[ 'help' ] } =>\n\t!! x.help &&\n\t'string' === typeof x.help.original &&\n\t!! x.help.original &&\n\t'string' === typeof x.help.alternative &&\n\t!! x.help.alternative;\n\nconst hasTitle = (\n\tx: Partial< ExperimentType >\n): x is { title: ExperimentType[ 'title' ] } =>\n\t'string' === typeof x.title && !! x.title;\n\nconst hasIcon = (\n\tx: Partial< ExperimentType >\n): x is { icon: ExperimentType[ 'icon' ] } => 'icon' in x;\n\nconst hasViews = (\n\tx: Partial< ExperimentType >\n): x is { views: ExperimentType[ 'views' ] } =>\n\tisFunction( x.views?.original ) && isFunction( x.views?.alternative );\n","export * from './api';\nexport * from './store';\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\nimport type { ExperimentType, ExperimentTypeName } from '@nab/types';\n\nexport type Action = AddExperimentTypes | RemoveExperimentTypes;\n\nexport function addExperimentTypes(\n\texperimentTypes: ExperimentType | ReadonlyArray< ExperimentType >\n): AddExperimentTypes {\n\treturn {\n\t\ttype: 'ADD_EXPERIMENT_TYPES',\n\t\texperimentTypes: castArray( experimentTypes ),\n\t};\n} //end addExperimentTypes()\n\nexport function removeExperimentTypes(\n\tnames: ExperimentTypeName | ReadonlyArray< ExperimentTypeName >\n): RemoveExperimentTypes {\n\treturn {\n\t\ttype: 'REMOVE_EXPERIMENT_TYPES',\n\t\tnames: castArray( names ),\n\t};\n} //end removeExperimentTypes()\n\n// ============\n// HELPER TYPES\n// ============\n\ntype AddExperimentTypes = {\n\treadonly type: 'ADD_EXPERIMENT_TYPES';\n\treadonly experimentTypes: ReadonlyArray< ExperimentType >;\n};\n\ntype RemoveExperimentTypes = {\n\treadonly type: 'REMOVE_EXPERIMENT_TYPES';\n\treadonly names: ReadonlyArray< ExperimentTypeName >;\n};\n","/**\n * Internal dependencies\n */\nimport type { State } from './types';\n\nexport const STORE_NAME = 'nab/experiments';\n\nexport const INIT_STATE: State = {\n\texperimentTypes: {},\n};\n","/**\n * WordPress dependencies\n */\nimport { registerStore } from '@wordpress/data';\n\n/**\n * External dependencies\n */\nimport type {\n\tExperimentType,\n\tExperimentTypeName,\n\tMaybe,\n\tRemoveReturnTypes,\n\tOmitFirstArgs,\n} from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport { reducer } from './reducer';\nimport { STORE_NAME } from './config';\n\nexport { STORE_NAME } from './config';\n\nregisterStore( STORE_NAME, { reducer, selectors, actions } );\n\n// ==========\n// TYPESCRIPT\n// ==========\n\ntype Actions = RemoveReturnTypes< typeof actions >;\n\ntype Selectors = OmitFirstArgs<\n\tOmit< typeof selectors, 'getExperimentSupport' >\n> & {\n\treadonly getExperimentSupport: <\n\t\tF extends keyof ExperimentType[ 'supports' ]\n\t>(\n\t\tnameOrType: ExperimentTypeName | ExperimentType,\n\t\tfeature: F\n\t) => Maybe< ExperimentType[ 'supports' ][ F ] >;\n};\n\ndeclare module '@wordpress/data' {\n\tfunction dispatch( key: typeof STORE_NAME ): Actions;\n\tfunction select( key: typeof STORE_NAME ): Selectors;\n}\n","/**\n * External dependencies\n */\nimport { keyBy, omit } from 'lodash';\nimport type { AnyAction } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { INIT_STATE } from './config';\nimport type { Action } from './actions';\nimport type { State } from './types';\n\nexport function reducer( state = INIT_STATE, action: AnyAction ): State {\n\treturn actualReducer( state, action as Action ) ?? state;\n} //end reducer()\n\nfunction actualReducer( state: State, action: Action ): State {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_EXPERIMENT_TYPES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\texperimentTypes: {\n\t\t\t\t\t...state.experimentTypes,\n\t\t\t\t\t...keyBy( action.experimentTypes, 'name' ),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase 'REMOVE_EXPERIMENT_TYPES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\texperimentTypes: omit( state.experimentTypes, action.names ),\n\t\t\t};\n\t} //end switch\n} //end actualReducer()\n","/**\n * External dependencies\n */\nimport type {\n\tDict,\n\tExperimentEditProps,\n\tExperimentType,\n\tExperimentTypeName,\n\tMaybe,\n} from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport type { State } from './types';\n\nexport function getExperimentTypes(\n\tstate: State\n): Record< ExperimentTypeName, ExperimentType > {\n\treturn state.experimentTypes;\n} //end getExperimentTypes()\n\nexport function getExperimentType(\n\tstate: State,\n\tname: ExperimentTypeName\n): Maybe< ExperimentType > {\n\treturn state.experimentTypes[ name ];\n} //end getExperimentType()\n\nexport function getExperimentSupport<\n\tF extends keyof ExperimentType[ 'supports' ]\n>(\n\tstate: State,\n\tnameOrType: ExperimentTypeName | ExperimentType,\n\tfeature: F\n): Maybe< ExperimentType[ 'supports' ][ F ] > {\n\tconst experimentType = getNormalizedExperimentType( state, nameOrType );\n\treturn experimentType?.supports[ feature ];\n} //end getExperimentSupport()\n\nexport function hasExperimentSupport(\n\tstate: State,\n\tnameOrType: ExperimentTypeName | ExperimentType,\n\tfeature: keyof ExperimentType[ 'supports' ]\n): boolean {\n\treturn !! getExperimentSupport( state, nameOrType, feature );\n} //end hasExperimentSupport()\n\nexport function getExperimentView(\n\tstate: State,\n\tnameOrType: ExperimentTypeName | ExperimentType,\n\tview: keyof ExperimentType[ 'views' ]\n): Maybe< ( props: ExperimentEditProps< Dict > ) => JSX.Element > {\n\tconst experimentType = getNormalizedExperimentType( state, nameOrType );\n\tif ( ! experimentType ) {\n\t\treturn;\n\t} //end if\n\n\treturn experimentType.views[ view ];\n} //end getExperimentView()\n\nexport function getHelpString(\n\tstate: State,\n\tnameOrType: ExperimentTypeName | ExperimentType,\n\thelp: keyof ExperimentType[ 'help' ]\n): string {\n\tconst experimentType = getNormalizedExperimentType( state, nameOrType );\n\treturn experimentType?.help[ help ] || '';\n} //end getHelpString()\n\n// =======\n// HELPERS\n// =======\n\nconst getNormalizedExperimentType = (\n\tstate: State,\n\tnameOrType: ExperimentTypeName | ExperimentType\n): Maybe< ExperimentType > =>\n\t'string' === typeof nameOrType\n\t\t? getExperimentType( state, nameOrType )\n\t\t: nameOrType;\n","module.exports = window[\"lodash\"];","module.exports = window[\"nab\"][\"utils\"];","module.exports = window[\"wp\"][\"data\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * as experiments from './index';\n"],"names":[],"sourceRoot":""}