{"version":3,"file":"js/editor.js","mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,uBAAuB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;;AAEA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,oBAAoB,WAAW;AAC/B;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;;;;;;;UCvSA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNkC","sources":["webpack://nab/./node_modules/@automattic/interpolate-components/dist/esm/index.js","webpack://nab/./node_modules/@automattic/interpolate-components/dist/esm/tokenize.js","webpack://nab/./node_modules/classnames/index.js","webpack://nab/./packages/editor/components/alternative-previewer/style.scss?a989","webpack://nab/./packages/editor/components/alternative-section/style.scss?3929","webpack://nab/./packages/editor/components/editor/style.scss?1d58","webpack://nab/./packages/editor/components/experiment-name/style.scss?5cff","webpack://nab/./packages/editor/components/goal-list/style.scss?93e4","webpack://nab/./packages/editor/components/goal-section/style.scss?ea59","webpack://nab/./packages/editor/components/goal/conversion-action-list/style.scss?5f6f","webpack://nab/./packages/editor/components/goal/conversion-action-type-list/style.scss?a0d2","webpack://nab/./packages/editor/components/goal/conversion-action/style.scss?407e","webpack://nab/./packages/editor/components/goal/style.scss?103d","webpack://nab/./packages/editor/components/goal/woocommerce-goal-settings/style.scss?3733","webpack://nab/./packages/editor/components/header/style.scss?3bdc","webpack://nab/./packages/editor/components/layout/style.scss?0183","webpack://nab/./packages/editor/components/segment-list/style.scss?e5ff","webpack://nab/./packages/editor/components/segment/segmentation-rule-list/style.scss?55f4","webpack://nab/./packages/editor/components/segment/segmentation-rule-type-category-list/style.scss?89ba","webpack://nab/./packages/editor/components/segment/segmentation-rule-type-category/style.scss?3756","webpack://nab/./packages/editor/components/segment/segmentation-rule/style.scss?3e37","webpack://nab/./packages/editor/components/segment/style.scss?68d1","webpack://nab/./packages/editor/components/segmentation-section/style.scss?99a2","webpack://nab/./packages/editor/components/sidebar/experiment-management/experiment-end-schedule/style.scss?2474","webpack://nab/./packages/editor/components/sidebar/experiment-management/status/style.scss?b84e","webpack://nab/./packages/editor/components/sidebar/experiment-management/style.scss?2ed2","webpack://nab/./packages/editor/components/sidebar/scope/style.scss?3307","webpack://nab/./packages/editor/components/sidebar/style.scss?3b7e","webpack://nab/./packages/editor/components/alternative-previewer/index.tsx","webpack://nab/./packages/editor/components/alternative-section/alternative-container.tsx","webpack://nab/./packages/editor/components/alternative-section/index.tsx","webpack://nab/./packages/editor/components/alternative-section/utils.ts","webpack://nab/./packages/editor/components/editor/index.tsx","webpack://nab/./packages/editor/components/experiment-name/index.tsx","webpack://nab/./packages/editor/components/goal-list/index.tsx","webpack://nab/./packages/editor/components/goal-section/index.tsx","webpack://nab/./packages/editor/components/goal/conversion-action-list/automatic.tsx","webpack://nab/./packages/editor/components/goal/conversion-action-list/index.ts","webpack://nab/./packages/editor/components/goal/conversion-action-list/regular.tsx","webpack://nab/./packages/editor/components/goal/conversion-action-type-list/index.tsx","webpack://nab/./packages/editor/components/goal/conversion-action/index.tsx","webpack://nab/./packages/editor/components/goal/index.tsx","webpack://nab/./packages/editor/components/goal/woocommerce-goal-settings/index.tsx","webpack://nab/./packages/editor/components/header/index.tsx","webpack://nab/./packages/editor/components/hooks.ts","webpack://nab/./packages/editor/components/layout/index.tsx","webpack://nab/./packages/editor/components/provider/index.tsx","webpack://nab/./packages/editor/components/segment-list/index.tsx","webpack://nab/./packages/editor/components/segment/index.tsx","webpack://nab/./packages/editor/components/segment/segmentation-rule-list/index.tsx","webpack://nab/./packages/editor/components/segment/segmentation-rule-type-category-list/index.tsx","webpack://nab/./packages/editor/components/segment/segmentation-rule-type-category/index.tsx","webpack://nab/./packages/editor/components/segment/segmentation-rule/index.tsx","webpack://nab/./packages/editor/components/segmentation-section/index.tsx","webpack://nab/./packages/editor/components/sidebar/description/index.tsx","webpack://nab/./packages/editor/components/sidebar/experiment-management/experiment-end-schedule/index.tsx","webpack://nab/./packages/editor/components/sidebar/experiment-management/experiment-start-schedule/index.tsx","webpack://nab/./packages/editor/components/sidebar/experiment-management/index.tsx","webpack://nab/./packages/editor/components/sidebar/experiment-management/status/index.tsx","webpack://nab/./packages/editor/components/sidebar/index.tsx","webpack://nab/./packages/editor/components/sidebar/scope/consistency-scope.tsx","webpack://nab/./packages/editor/components/sidebar/scope/index.tsx","webpack://nab/./packages/editor/components/sidebar/scope/new-rule-form.tsx","webpack://nab/./packages/editor/components/sidebar/scope/rule-list.tsx","webpack://nab/./packages/editor/components/status-manager/index.ts","webpack://nab/./packages/editor/components/status-manager/utils.ts","webpack://nab/./packages/editor/help.ts","webpack://nab/./packages/editor/index.tsx","webpack://nab/./packages/editor/store/actions/alternatives.ts","webpack://nab/./packages/editor/store/actions/conversion-actions.ts","webpack://nab/./packages/editor/store/actions/editor.ts","webpack://nab/./packages/editor/store/actions/experiment-data.ts","webpack://nab/./packages/editor/store/actions/goals.ts","webpack://nab/./packages/editor/store/actions/index.ts","webpack://nab/./packages/editor/store/actions/scope.ts","webpack://nab/./packages/editor/store/actions/segmentation-rules.ts","webpack://nab/./packages/editor/store/actions/segments.ts","webpack://nab/./packages/editor/store/config.ts","webpack://nab/./packages/editor/store/index.ts","webpack://nab/./packages/editor/store/reducer/alternatives.ts","webpack://nab/./packages/editor/store/reducer/conversion-actions.ts","webpack://nab/./packages/editor/store/reducer/editor.ts","webpack://nab/./packages/editor/store/reducer/experiment-data.ts","webpack://nab/./packages/editor/store/reducer/goals.ts","webpack://nab/./packages/editor/store/reducer/index.ts","webpack://nab/./packages/editor/store/reducer/scope.ts","webpack://nab/./packages/editor/store/reducer/segmentation-rules.ts","webpack://nab/./packages/editor/store/reducer/segments.ts","webpack://nab/./packages/editor/store/selectors/alternatives.ts","webpack://nab/./packages/editor/store/selectors/conversion-actions.ts","webpack://nab/./packages/editor/store/selectors/editor.ts","webpack://nab/./packages/editor/store/selectors/experiment-data.ts","webpack://nab/./packages/editor/store/selectors/goals.ts","webpack://nab/./packages/editor/store/selectors/index.ts","webpack://nab/./packages/editor/store/selectors/scope.ts","webpack://nab/./packages/editor/store/selectors/segmentation-rules.ts","webpack://nab/./packages/editor/store/selectors/segments.ts","webpack://nab/./packages/editor/store/side-effects/actions/editor.ts","webpack://nab/./packages/editor/store/side-effects/actions/index.ts","webpack://nab/external window \"React\"","webpack://nab/external window \"lodash\"","webpack://nab/external window [\"nab\",\"components\"]","webpack://nab/external window [\"nab\",\"conversionActionLibrary\"]","webpack://nab/external window [\"nab\",\"conversionActions\"]","webpack://nab/external window [\"nab\",\"data\"]","webpack://nab/external window [\"nab\",\"date\"]","webpack://nab/external window [\"nab\",\"experimentLibrary\"]","webpack://nab/external window [\"nab\",\"experiments\"]","webpack://nab/external window [\"nab\",\"i18n\"]","webpack://nab/external window [\"nab\",\"segmentationRuleLibrary\"]","webpack://nab/external window [\"nab\",\"segmentationRules\"]","webpack://nab/external window [\"nab\",\"utils\"]","webpack://nab/external window [\"wp\",\"apiFetch\"]","webpack://nab/external window [\"wp\",\"blockEditor\"]","webpack://nab/external window [\"wp\",\"components\"]","webpack://nab/external window [\"wp\",\"compose\"]","webpack://nab/external window [\"wp\",\"coreData\"]","webpack://nab/external window [\"wp\",\"data\"]","webpack://nab/external window [\"wp\",\"domReady\"]","webpack://nab/external window [\"wp\",\"element\"]","webpack://nab/external window [\"wp\",\"hooks\"]","webpack://nab/external window [\"wp\",\"i18n\"]","webpack://nab/external window [\"wp\",\"notices\"]","webpack://nab/external window [\"wp\",\"url\"]","webpack://nab/./node_modules/rememo/es/rememo.js","webpack://nab/webpack/bootstrap","webpack://nab/webpack/runtime/compat get default export","webpack://nab/webpack/runtime/define property getters","webpack://nab/webpack/runtime/hasOwnProperty shorthand","webpack://nab/webpack/runtime/make namespace object","webpack://nab/./packages/editor/export.ts"],"sourcesContent":["import { cloneElement, createElement, Fragment } from 'react';\nimport tokenize from './tokenize';\n\nfunction getCloseIndex(openIndex, tokens) {\n  const openToken = tokens[openIndex];\n  let nestLevel = 0;\n\n  for (let i = openIndex + 1; i < tokens.length; i++) {\n    const token = tokens[i];\n\n    if (token.value === openToken.value) {\n      if (token.type === 'componentOpen') {\n        nestLevel++;\n        continue;\n      }\n\n      if (token.type === 'componentClose') {\n        if (nestLevel === 0) {\n          return i;\n        }\n\n        nestLevel--;\n      }\n    }\n  } // if we get this far, there was no matching close token\n\n\n  throw new Error('Missing closing component token `' + openToken.value + '`');\n}\n\nfunction buildChildren(tokens, components) {\n  let children = [];\n  let openComponent;\n  let openIndex;\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n\n    if (token.type === 'string') {\n      children.push(token.value);\n      continue;\n    } // component node should at least be set\n\n\n    if (components[token.value] === undefined) {\n      throw new Error(`Invalid interpolation, missing component node: \\`${token.value}\\``);\n    } // should be either ReactElement or null (both type \"object\"), all other types deprecated\n\n\n    if (typeof components[token.value] !== 'object') {\n      throw new Error(`Invalid interpolation, component node must be a ReactElement or null: \\`${token.value}\\``);\n    } // we should never see a componentClose token in this loop\n\n\n    if (token.type === 'componentClose') {\n      throw new Error(`Missing opening component token: \\`${token.value}\\``);\n    }\n\n    if (token.type === 'componentOpen') {\n      openComponent = components[token.value];\n      openIndex = i;\n      break;\n    } // componentSelfClosing token\n\n\n    children.push(components[token.value]);\n    continue;\n  }\n\n  if (openComponent) {\n    const closeIndex = getCloseIndex(openIndex, tokens);\n    const grandChildTokens = tokens.slice(openIndex + 1, closeIndex);\n    const grandChildren = buildChildren(grandChildTokens, components);\n    const clonedOpenComponent = /*#__PURE__*/cloneElement(openComponent, {}, grandChildren);\n    children.push(clonedOpenComponent);\n\n    if (closeIndex < tokens.length - 1) {\n      const siblingTokens = tokens.slice(closeIndex + 1);\n      const siblings = buildChildren(siblingTokens, components);\n      children = children.concat(siblings);\n    }\n  }\n\n  children = children.filter(Boolean);\n\n  if (children.length === 0) {\n    return null;\n  }\n\n  if (children.length === 1) {\n    return children[0];\n  }\n\n  return /*#__PURE__*/createElement(Fragment, null, ...children);\n}\n\nexport default function interpolate(options) {\n  const {\n    mixedString,\n    components,\n    throwErrors\n  } = options;\n\n  if (!components) {\n    return mixedString;\n  }\n\n  if (typeof components !== 'object') {\n    if (throwErrors) {\n      throw new Error(`Interpolation Error: unable to process \\`${mixedString}\\` because components is not an object`);\n    }\n\n    return mixedString;\n  }\n\n  const tokens = tokenize(mixedString);\n\n  try {\n    return buildChildren(tokens, components);\n  } catch (error) {\n    if (throwErrors) {\n      throw new Error(`Interpolation Error: unable to process \\`${mixedString}\\` because of error \\`${error.message}\\``);\n    }\n\n    return mixedString;\n  }\n}","function identifyToken(item) {\n  // {{/example}}\n  if (item.startsWith('{{/')) {\n    return {\n      type: 'componentClose',\n      value: item.replace(/\\W/g, '')\n    };\n  } // {{example /}}\n\n\n  if (item.endsWith('/}}')) {\n    return {\n      type: 'componentSelfClosing',\n      value: item.replace(/\\W/g, '')\n    };\n  } // {{example}}\n\n\n  if (item.startsWith('{{')) {\n    return {\n      type: 'componentOpen',\n      value: item.replace(/\\W/g, '')\n    };\n  }\n\n  return {\n    type: 'string',\n    value: item\n  };\n}\n\nexport default function tokenize(mixedString) {\n  const tokenStrings = mixedString.split(/(\\{\\{\\/?\\s*\\w+\\s*\\/?\\}\\})/g); // split to components and strings\n\n  return tokenStrings.map(identifyToken);\n}","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Modal } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { STORE_NAME as NAB_EDITOR } from '../../store/config';\n\nexport const AlternativePreviewer = (): JSX.Element | null => {\n\tconst { closeAlternativePreviewer: close } = useDispatch( NAB_EDITOR );\n\tconst url = useSelect( ( select ) =>\n\t\tselect( NAB_EDITOR ).getAlternativePreviewerUrl()\n\t);\n\n\tif ( ! url ) {\n\t\treturn null;\n\t} //end if\n\n\treturn (\n\t\t<Modal\n\t\t\tclassName=\"nab-alternative-previewer\"\n\t\t\ttitle={ 'Alternative Previewer' }\n\t\t\tisDismissable={ true }\n\t\t\tisDismissible={ true }\n\t\t\tonRequestClose={ close }\n\t\t>\n\t\t\t<iframe\n\t\t\t\tclassName=\"nab-alternative-previewer__iframe\"\n\t\t\t\ttitle={ _x(\n\t\t\t\t\t'Alternative Preview Frame',\n\t\t\t\t\t'text',\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t) }\n\t\t\t\tsrc={ url }\n\t\t\t></iframe>\n\t\t</Modal>\n\t);\n};\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Button } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { HelpIcon } from '@nab/components';\nimport { STORE_NAME as NAB_EXPERIMENTS } from '@nab/experiments';\nimport { omitUndefineds } from '@nab/utils';\nimport type { AlternativeId, Dict, ExperimentEditProps } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { getLetter } from './utils';\nimport { useExperimentAttribute } from '../hooks';\nimport { STORE_NAME as NAB_EDITOR } from '../../store/config';\n\nexport type AlternativeContainerProps = {\n\treadonly alternativeId: AlternativeId;\n\treadonly disabled?: boolean;\n\treadonly index: number;\n};\n\nexport const AlternativeContainer = ( {\n\talternativeId,\n\tdisabled,\n\tindex,\n}: AlternativeContainerProps ): JSX.Element | null => {\n\tconst alternative = useAlternative( alternativeId );\n\tconst AlternativeView = useView( index );\n\tconst canBeRemoved = useCanBeRemoved();\n\tconst experimentType = useExperimentType();\n\tconst help = useHelp( index );\n\tconst isBeingSaved = useIsBeingSaved();\n\tconst isExternalEdit = useIsExternalEdit();\n\n\tconst {\n\t\tsaveExperimentAndEditAlternative,\n\t\tsaveExperimentAndPreviewAlternative,\n\t\tremoveAlternatives,\n\t\tsetAlternative,\n\t} = useDispatch( NAB_EDITOR );\n\n\tif ( ! alternative ) {\n\t\treturn null;\n\t} //end if\n\n\treturn (\n\t\t<div\n\t\t\tclassName={ classnames( [\n\t\t\t\t'nab-alternative-list__alternative',\n\t\t\t\t{ 'nab-alternative-list__alternative--original': ! index },\n\t\t\t] ) }\n\t\t>\n\t\t\t<p\n\t\t\t\tclassName={ classnames( [\n\t\t\t\t\t'nab-alternative-list__alternative-letter',\n\t\t\t\t\t{\n\t\t\t\t\t\t'nab-alternative-list__alternative-letter--disabled':\n\t\t\t\t\t\t\t0 < index && disabled,\n\t\t\t\t\t},\n\t\t\t\t] ) }\n\t\t\t>\n\t\t\t\t{ getLetter( index ) }\n\t\t\t</p>\n\n\t\t\t<div className=\"nab-alternative-list__alternative-edit\">\n\t\t\t\t<AlternativeView\n\t\t\t\t\tattributes={ alternative.attributes }\n\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\texperimentType={ experimentType }\n\t\t\t\t\tsetAttributes={ ( attributes ) =>\n\t\t\t\t\t\tsetAlternative( alternative.id, {\n\t\t\t\t\t\t\t...alternative,\n\t\t\t\t\t\t\tattributes: omitUndefineds( {\n\t\t\t\t\t\t\t\t...alternative.attributes,\n\t\t\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\t\t} ),\n\t\t\t\t\t\t} )\n\t\t\t\t\t}\n\t\t\t\t/>\n\n\t\t\t\t{ 0 !== index && (\n\t\t\t\t\t<ul className=\"nab-alternative-list__alternative-actions\">\n\t\t\t\t\t\t{ isExternalEdit && (\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\tdisabled={ disabled || isBeingSaved }\n\t\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\t\tsaveExperimentAndEditAlternative(\n\t\t\t\t\t\t\t\t\t\t\talternativeId\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t\t\t\t'Edit',\n\t\t\t\t\t\t\t\t\t\t'command',\n\t\t\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\tdisabled={ disabled || isBeingSaved }\n\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\tsaveExperimentAndPreviewAlternative(\n\t\t\t\t\t\t\t\t\t\talternativeId\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t\t\t'Preview',\n\t\t\t\t\t\t\t\t\t'command',\n\t\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{ canBeRemoved && (\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\t\t\tdisabled={ disabled || isBeingSaved }\n\t\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\t\tremoveAlternatives( alternative.id )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t\t\t\t'Delete',\n\t\t\t\t\t\t\t\t\t\t'command',\n\t\t\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</ul>\n\t\t\t\t) }\n\t\t\t</div>\n\n\t\t\t<div className=\"nab-alternative-list__alternative-help\">\n\t\t\t\t{ !! help && <HelpIcon text={ help } /> }\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useExperimentType = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getExperimentType() );\n\nconst useAlternative = ( alternativeId: AlternativeId ) =>\n\tuseSelect( ( select ) =>\n\t\tselect( NAB_EDITOR ).getAlternative( alternativeId )\n\t);\n\nconst useCanBeRemoved = () => {\n\tconst [ status ] = useExperimentAttribute( 'status' );\n\treturn useSelect( ( select ) => {\n\t\tconst { getAlternativeIds } = select( NAB_EDITOR );\n\t\tconst isPaused = ( status || '' ).includes( 'paused' );\n\t\treturn getAlternativeIds().length > 2 && ! isPaused;\n\t} );\n};\n\nconst useIsBeingSaved = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).isExperimentBeingSaved() );\n\ntype View = ( props: ExperimentEditProps< Dict > ) => JSX.Element;\nconst useView = ( index: number ): View =>\n\tuseSelect( ( select ) => {\n\t\tconst { getExperimentView } = select( NAB_EXPERIMENTS );\n\t\tconst { getExperimentType } = select( NAB_EDITOR );\n\t\tconst view = ! index\n\t\t\t? getExperimentView( getExperimentType(), 'original' )\n\t\t\t: getExperimentView( getExperimentType(), 'alternative' );\n\t\treturn view ?? ( () => <></> );\n\t} );\n\nconst useHelp = ( index: number ) =>\n\tuseSelect( ( select ) => {\n\t\tconst { getExperimentType } = select( NAB_EDITOR );\n\t\tconst { getHelpString } = select( NAB_EXPERIMENTS );\n\n\t\tif ( 0 === index ) {\n\t\t\treturn getHelpString( getExperimentType(), 'original' );\n\t\t} //end if\n\n\t\tif ( 1 === index ) {\n\t\t\treturn getHelpString( getExperimentType(), 'alternative' );\n\t\t} //end if\n\n\t\treturn '';\n\t} );\n\nconst useIsExternalEdit = () => {\n\tconst type = useExperimentType();\n\treturn useSelect( ( select ) => {\n\t\tconst { getExperimentSupport } = select( NAB_EXPERIMENTS );\n\t\treturn (\n\t\t\t'external' === getExperimentSupport( type, 'alternativeEdition' )\n\t\t);\n\t} );\n};\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect, useState } from '@wordpress/element';\nimport { Button, Dashicon, ExternalLink } from '@wordpress/components';\nimport { _x, sprintf } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { difference } from 'lodash';\nimport interpolateComponents from '@automattic/interpolate-components';\nimport { AnimatedList } from '@nab/components';\nimport { STORE_NAME as NAB_DATA } from '@nab/data';\nimport { addFreeTracker, createAlternative } from '@nab/utils';\nimport type { AlternativeId } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { AlternativeContainer } from './alternative-container';\nimport { AlternativePreviewer } from '../alternative-previewer';\nimport { useExperimentAttribute } from '../hooks';\nimport { STORE_NAME as NAB_EDITOR } from '../../store/config';\n\nexport const AlternativeSection = (): JSX.Element => {\n\tconst [ control, ...alternativeIds ] = useAlternativeIds();\n\tconst addAlternative = useAddAlternative();\n\tconst isExperimentPaused = useIsExperimentPaused();\n\tconst subscription = useSubscription();\n\tconst isTestedElementInvalid = useIsTestedElementInvalid();\n\tconst isReplacingAlternatives = useIsReplacingAlternatives();\n\n\treturn (\n\t\t<div className=\"nab-edit-experiment__alternative-section\">\n\t\t\t<h2>\n\t\t\t\t{ interpolateComponents( {\n\t\t\t\t\tmixedString: sprintf(\n\t\t\t\t\t\t/* translators: dashicon */\n\t\t\t\t\t\t_x(\n\t\t\t\t\t\t\t'%s Control Version and Variants',\n\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'{{icon}}{{/icon}}'\n\t\t\t\t\t),\n\t\t\t\t\tcomponents: {\n\t\t\t\t\t\ticon: (\n\t\t\t\t\t\t\t<Dashicon\n\t\t\t\t\t\t\t\tclassName=\"nab-alternative-section__title-icon\"\n\t\t\t\t\t\t\t\ticon=\"randomize\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t} ) }\n\t\t\t</h2>\n\n\t\t\t<div className=\"nab-alternative-list\">\n\t\t\t\t{ !! control && (\n\t\t\t\t\t<AlternativeContainer\n\t\t\t\t\t\tkey=\"control\"\n\t\t\t\t\t\tindex={ 0 }\n\t\t\t\t\t\talternativeId=\"control\"\n\t\t\t\t\t\tdisabled={ isTestedElementInvalid }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\n\t\t\t\t<AnimatedList\n\t\t\t\t\tdisableAnimations={ isReplacingAlternatives }\n\t\t\t\t\texit={ 500 }\n\t\t\t\t>\n\t\t\t\t\t{ alternativeIds.map( ( alternativeId, index ) => (\n\t\t\t\t\t\t<AlternativeContainer\n\t\t\t\t\t\t\tkey={ alternativeId }\n\t\t\t\t\t\t\tindex={ index + 1 }\n\t\t\t\t\t\t\talternativeId={ alternativeId }\n\t\t\t\t\t\t\tdisabled={ isTestedElementInvalid }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) ) }\n\t\t\t\t</AnimatedList>\n\t\t\t</div>\n\n\t\t\t<div className=\"nab-edit-experiment-alternative-section__new-variant-container\">\n\t\t\t\t{ ! isExperimentPaused && !! subscription && (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tisSecondary\n\t\t\t\t\t\tkey=\"new-variant\"\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t8 <= alternativeIds.length || isTestedElementInvalid\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={ () => addAlternative() }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ _x( 'New Variant', 'command', 'nelio-ab-testing' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t\t{ ! isExperimentPaused && ! subscription && (\n\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\tclassName=\"components-button is-secondary\"\n\t\t\t\t\t\thref={ addFreeTracker(\n\t\t\t\t\t\t\t_x(\n\t\t\t\t\t\t\t\t'https://neliosoftware.com/testing/pricing/',\n\t\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t'Subscribe to Add More Variants',\n\t\t\t\t\t\t\t'user',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t) }\n\t\t\t\t\t</ExternalLink>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t\t<AlternativePreviewer />\n\t\t</div>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useAlternativeIds = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getAlternativeIds() );\n\nconst useAddAlternative = () => {\n\tconst { addAlternatives } = useDispatch( NAB_EDITOR );\n\treturn () => addAlternatives( createAlternative() );\n};\n\nconst useIsExperimentPaused = () => {\n\tconst [ status ] = useExperimentAttribute( 'status' );\n\treturn status.includes( 'paused' );\n};\n\nconst useSubscription = () =>\n\tuseSelect(\n\t\t( select ) =>\n\t\t\tselect( NAB_DATA ).getPluginSetting( 'subscription' ) || false\n\t);\n\nconst useIsTestedElementInvalid = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).isTestedElementInvalid() );\n\nconst useIsReplacingAlternatives = () => {\n\tconst [ prevAltIds, setPrevAltIds ] = useState<\n\t\tReadonlyArray< AlternativeId >\n\t>( [] );\n\tconst prevStr = prevAltIds.join( ';' );\n\n\tconst altIds = useAlternativeIds();\n\tconst currStr = altIds.join( ';' );\n\n\t// Keep track of the previous alt IDs.\n\tuseEffect( () => {\n\t\tif ( prevStr !== currStr ) {\n\t\t\tsetPrevAltIds( altIds );\n\t\t} //end if\n\t}, [ prevStr, currStr ] );\n\n\t// Disable animations if several changes at once.\n\tif ( prevStr === currStr ) {\n\t\treturn false;\n\t} //end if\n\n\t// This works under the assumption that, usually, there’s only one change\n\t// at a time (i.e. adding or removing a single alternative).\n\tconst severalChanges = ( x: string, y: string ) => {\n\t\tconst xs = x.split( ';' );\n\t\tconst ys = y.split( ';' );\n\t\tconst d1 = difference( xs, ys );\n\t\tconst d2 = difference( ys, xs );\n\t\treturn !! d1.length && !! d2.length;\n\t};\n\n\treturn severalChanges( prevStr, currStr );\n};\n","export function getLetter( index: number ): string {\n\tconst letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\tif ( index >= letters.length ) {\n\t\treturn `${ index - letters.length + 1 }`;\n\t} //end if\n\n\treturn letters.charAt( index );\n} //end getLetter()\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { StrictMode, useEffect } from '@wordpress/element';\n\n/**\n * External dependencies\n */\nimport { STORE_NAME as NAB_DATA } from '@nab/data';\nimport type { ExperimentId } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { EditorProvider } from '../provider';\nimport { Layout } from '../layout';\n\nimport { renderHelp } from '../../help';\n\nexport type EditorProps = {\n\treadonly experimentId: ExperimentId;\n};\n\nexport const Editor = ( { experimentId }: EditorProps ): JSX.Element => {\n\tconst experiment = useSelect( ( select ) =>\n\t\tselect( NAB_DATA ).getExperiment( experimentId )\n\t);\n\n\tuseEffect( () => {\n\t\tif ( experiment ) {\n\t\t\trenderHelp();\n\t\t} //end if\n\t}, [ !! experiment ] );\n\n\treturn (\n\t\t<StrictMode>\n\t\t\t<EditorProvider experiment={ experiment }>\n\t\t\t\t<Layout />\n\t\t\t</EditorProvider>\n\t\t</StrictMode>\n\t);\n};\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { PlainText } from '@wordpress/block-editor';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { useExperimentAttribute } from '../hooks';\n\nexport const ExperimentName = (): JSX.Element => {\n\tconst [ name, setName ] = useExperimentAttribute( 'name' );\n\treturn (\n\t\t<div className=\"nab-experiment-title\">\n\t\t\t<PlainText\n\t\t\t\tvalue={ name }\n\t\t\t\tclassName=\"nab-experiment-title__edit\"\n\t\t\t\tplaceholder={ _x(\n\t\t\t\t\t'Name your test…',\n\t\t\t\t\t'user',\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t) }\n\t\t\t\tonChange={ setName }\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Button, Dashicon } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { _x, sprintf } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { trim } from 'lodash';\nimport { createGoal } from '@nab/utils';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { useExperimentAttribute, usePluginSetting } from '../hooks';\nimport { STORE_NAME as NAB_EDITOR } from '../../store/config';\n\nexport type GoalListProps = {\n\treadonly single?: boolean;\n};\n\nexport const GoalList = ( { single }: GoalListProps ): JSX.Element => {\n\tconst activeGoalId = useActiveGoalId();\n\tconst goals = useGoals();\n\tconst isExperimentPaused = useIsExperimentPaused();\n\tconst isSubscribed = !! usePluginSetting( 'subscription' );\n\n\tconst { setActiveGoal, addGoals } = useDispatch( NAB_EDITOR );\n\n\treturn (\n\t\t<ul className=\"nab-goal-list\">\n\t\t\t{ goals.map( ( goal, index ) => (\n\t\t\t\t<li\n\t\t\t\t\tkey={ goal.id }\n\t\t\t\t\tclassName={ classnames( 'nab-goal-list__item', {\n\t\t\t\t\t\t'nab-goal-list__item--is-active':\n\t\t\t\t\t\t\tgoal.id === activeGoalId,\n\t\t\t\t\t} ) }\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdisabled={ goal.id === activeGoalId }\n\t\t\t\t\t\tonClick={ () => setActiveGoal( goal.id ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ trim( goal.attributes.name ) ||\n\t\t\t\t\t\t\tgetDefaultGoalNameForIndex( index ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</li>\n\t\t\t) ) }\n\n\t\t\t{ ! single && ! isExperimentPaused && isSubscribed && (\n\t\t\t\t<li className=\"nab-goal-list__add-new-goal\" key=\"add-new-goal\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"nab-goal-list__add-new-goal-button\"\n\t\t\t\t\t\tisLink\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tconst goal = createGoal();\n\t\t\t\t\t\t\taddGoals( goal );\n\t\t\t\t\t\t\tsetActiveGoal( goal.id );\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t<Dashicon icon=\"plus\" />\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t\t'New',\n\t\t\t\t\t\t\t\t'command (goal)',\n\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Button>\n\t\t\t\t</li>\n\t\t\t) }\n\t\t</ul>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useActiveGoalId = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getActiveGoal()?.id );\n\nconst useGoals = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getGoals() );\n\nconst useIsExperimentPaused = () => {\n\tconst [ status ] = useExperimentAttribute( 'status' );\n\treturn ( status || '' ).includes( 'paused' );\n};\n\n// =======\n// HELPERS\n// =======\n\nfunction getDefaultGoalNameForIndex( index: number ) {\n\treturn index\n\t\t? sprintf(\n\t\t\t\t/* translators: a number */\n\t\t\t\t_x( 'Goal %d', 'text', 'nelio-ab-testing' ),\n\t\t\t\tindex + 1\n\t\t  )\n\t\t: _x( 'Default Goal', 'text', 'nelio-ab-testing' );\n} //end getDefaultGoalNameForIndex()\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Dashicon } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { _x, sprintf } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { findIndex } from 'lodash';\nimport interpolateComponents from '@automattic/interpolate-components';\nimport { STORE_NAME as NAB_EXPERIMENTS } from '@nab/experiments';\nimport type { Goal as RealGoal, GoalId } from '@nab/types';\ntype Goal = Omit< RealGoal, 'conversionActions' >;\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { Goal as GoalView } from '../goal';\nimport { GoalList } from '../goal-list';\nimport { useExperimentAttribute } from '../hooks';\nimport { STORE_NAME as NAB_EDITOR } from '../../store/config';\n\nexport const GoalSection = (): JSX.Element => {\n\tconst goal = useActiveGoal() || {};\n\tconst goals = useGoals();\n\tconst isExperimentPaused = useIsExperimentPaused();\n\tconst numberOfGoals = goals.length;\n\tconst supportsAutomaticGoal = useSupportsAutomaticGoal();\n\tconst { removeGoals, setActiveGoal, updateGoal } = useDispatch(\n\t\tNAB_EDITOR\n\t);\n\n\tconst canGoalBeRemoved = 1 < numberOfGoals && ! isExperimentPaused;\n\n\tconst removeActiveGoal = () => {\n\t\tconst nextGoal = getAdjacentGoal( goals, goal.id );\n\t\tsetActiveGoal( nextGoal.id );\n\t\tremoveGoals( goal.id );\n\t};\n\n\tconst updateActiveGoal = ( attributes ) =>\n\t\tgoal.id && updateGoal( goal.id, attributes );\n\n\treturn (\n\t\t<div className=\"nab-edit-experiment__goal-section\">\n\t\t\t<h2>\n\t\t\t\t{ interpolateComponents( {\n\t\t\t\t\tmixedString: sprintf(\n\t\t\t\t\t\t/* translators: dashicon */\n\t\t\t\t\t\t_x(\n\t\t\t\t\t\t\t'%s Conversion Goals and Actions',\n\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'{{icon}}{{/icon}}'\n\t\t\t\t\t),\n\t\t\t\t\tcomponents: {\n\t\t\t\t\t\ticon: (\n\t\t\t\t\t\t\t<Dashicon\n\t\t\t\t\t\t\t\tclassName=\"nab-goal-section__title-icon\"\n\t\t\t\t\t\t\t\ticon=\"flag\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t} ) }\n\t\t\t</h2>\n\n\t\t\t<div className=\"nab-edit-experiment-goal-section__content\">\n\t\t\t\t<GoalList single={ supportsAutomaticGoal } />\n\t\t\t\t<GoalView\n\t\t\t\t\tname={ goal.attributes.name }\n\t\t\t\t\tsetName={ ( name ) =>\n\t\t\t\t\t\tupdateActiveGoal( { ...goal.attributes, name } )\n\t\t\t\t\t}\n\t\t\t\t\tremoveGoal={\n\t\t\t\t\t\tcanGoalBeRemoved ? removeActiveGoal : undefined\n\t\t\t\t\t}\n\t\t\t\t\tisAutomatic={ supportsAutomaticGoal }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useActiveGoal = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getActiveGoal() );\n\nconst useGoals = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getGoals() );\n\nconst useIsExperimentPaused = () => {\n\tconst [ status ] = useExperimentAttribute( 'status' );\n\treturn ( status || '' ).includes( 'paused' );\n};\n\nconst useSupportsAutomaticGoal = () =>\n\tuseSelect( ( select ) => {\n\t\tconst { getExperimentType } = select( NAB_EDITOR );\n\t\tconst { hasExperimentSupport } = select( NAB_EXPERIMENTS );\n\t\treturn hasExperimentSupport(\n\t\t\tgetExperimentType(),\n\t\t\t'automaticGoalSetup'\n\t\t);\n\t} );\n\n// =======\n// HELPERS\n// =======\n\nfunction getAdjacentGoal( goals: ReadonlyArray< Goal >, goalId: GoalId ): Goal {\n\tconst index = findIndex( goals, { id: goalId } );\n\tif ( index === goals.length - 1 ) {\n\t\treturn goals[ index - 1 ];\n\t} //end if\n\treturn goals[ index + 1 ];\n} //end getAdjacentGoal()\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useEffect } from '@wordpress/element';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { STORE_NAME as NAB_EXPERIMENTS } from '@nab/experiments';\nimport type { ConversionAction as CA, GoalId } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { ConversionAction } from '../conversion-action';\nimport { STORE_NAME as NAB_EDITOR } from '../../../store/config';\n\nexport const AutomaticConversionActionList = (): JSX.Element => {\n\tconst goalId = useActiveGoalId();\n\tconst conversionActions = useConversionActions( goalId );\n\n\tuseAutoConversionActionsEffect();\n\n\treturn (\n\t\t<div className=\"nab-conversion-action-list nab-conversion-action-list--automatic\">\n\t\t\t{ 1 === conversionActions.length ? (\n\t\t\t\t<p\n\t\t\t\t\tkey=\"conversion-action-explanation\"\n\t\t\t\t\tclassName=\"nab-conversion-action-list__help\"\n\t\t\t\t>\n\t\t\t\t\t{ _x(\n\t\t\t\t\t\t'Split tests are usually run with some specific goals in mind. In this type of test, there’s a new conversion when the following conversion action occurs after the visitor has seen the tested element:',\n\t\t\t\t\t\t'text',\n\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t) }\n\t\t\t\t</p>\n\t\t\t) : (\n\t\t\t\t<p\n\t\t\t\t\tkey=\"conversion-action-explanation\"\n\t\t\t\t\tclassName=\"nab-conversion-action-list__help\"\n\t\t\t\t>\n\t\t\t\t\t{ _x(\n\t\t\t\t\t\t'Split tests are usually run with some specific goals in mind. In this type of test, there’s a new conversion when at least one of the following conversion actions occurs after the visitor has seen the tested element:',\n\t\t\t\t\t\t'text',\n\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t) }\n\t\t\t\t</p>\n\t\t\t) }\n\t\t\t{ conversionActions.map( ( action ) => (\n\t\t\t\t<ConversionAction\n\t\t\t\t\tkey={ action.id }\n\t\t\t\t\tgoalId={ goalId }\n\t\t\t\t\taction={ action }\n\t\t\t\t\treadOnly={ true }\n\t\t\t\t/>\n\t\t\t) ) }\n\t\t</div>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useActiveGoalId = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getActiveGoal()?.id );\n\nconst useConversionActions = ( goalId: GoalId ): ReadonlyArray< CA > =>\n\tuseSelect( ( select ) => {\n\t\tif ( ! goalId ) {\n\t\t\treturn [];\n\t\t} //end if\n\t\tconst { getConversionActions } = select( NAB_EDITOR );\n\t\treturn getConversionActions( goalId ) || [];\n\t} );\n\nconst useAutoConversionActionsEffect = () => {\n\tconst { replaceConversionActionsInGoal } = useDispatch( NAB_EDITOR );\n\n\tconst goalId = useActiveGoalId();\n\tconst control = useSelect( ( select ) =>\n\t\tselect( NAB_EDITOR ).getAlternative( 'control' )\n\t);\n\tconst automaticGoalSetup = useSelect( ( select ) => {\n\t\tconst { getExperimentType } = select( NAB_EDITOR );\n\t\tconst { getExperimentSupport } = select( NAB_EXPERIMENTS );\n\t\treturn getExperimentSupport(\n\t\t\tgetExperimentType(),\n\t\t\t'automaticGoalSetup'\n\t\t);\n\t} );\n\n\tuseEffect( () => {\n\t\tif ( ! goalId || ! automaticGoalSetup ) {\n\t\t\treturn;\n\t\t} //end if\n\n\t\tconst auto = automaticGoalSetup( control.attributes );\n\t\treplaceConversionActionsInGoal( goalId, auto );\n\t}, [ automaticGoalSetup, goalId, control ] );\n};\n","export * from './automatic';\nexport * from './regular';\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport interpolateComponents from '@automattic/interpolate-components';\nimport type { ConversionAction as CA, GoalId } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { ConversionAction } from '../conversion-action';\nimport { STORE_NAME as NAB_EDITOR } from '../../../store/config';\n\nexport const ConversionActionList = (): JSX.Element => {\n\tconst goalId = useActiveGoalId();\n\tconst conversionActions = useConversionActions( goalId );\n\n\treturn (\n\t\t<div className=\"nab-conversion-action-list\">\n\t\t\t{ !! conversionActions.length && (\n\t\t\t\t<p key=\"conversion-action-explanation-1\">\n\t\t\t\t\t{ _x(\n\t\t\t\t\t\t'After a visitor has seen the tested element, there’s a new conversion every time one of the following conversion actions occurs:',\n\t\t\t\t\t\t'text',\n\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t) }\n\t\t\t\t</p>\n\t\t\t) }\n\t\t\t{ conversionActions.map( ( action ) => (\n\t\t\t\t<ConversionAction\n\t\t\t\t\tkey={ action.id }\n\t\t\t\t\tgoalId={ goalId }\n\t\t\t\t\taction={ action }\n\t\t\t\t/>\n\t\t\t) ) }\n\t\t\t{ ! conversionActions.length && [\n\t\t\t\t<p\n\t\t\t\t\tkey=\"conversion-action-explanation-1\"\n\t\t\t\t\tclassName=\"nab-conversion-action-list__help\"\n\t\t\t\t>\n\t\t\t\t\t{ _x(\n\t\t\t\t\t\t'Split tests are usually run with some specific goals in mind, such as “getting more subscribers” or “showing interest in your products.” Goals are fulfilled when the visitor performs certain actions. For instance, a visitor might be “showing interest in your products” when they visit your pricing page or they submit a certain form in your website.',\n\t\t\t\t\t\t'text',\n\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t) }\n\t\t\t\t</p>,\n\t\t\t\t<p\n\t\t\t\t\tkey=\"conversion-action-explanation-2\"\n\t\t\t\t\tclassName=\"nab-conversion-action-list__help\"\n\t\t\t\t>\n\t\t\t\t\t{ interpolateComponents( {\n\t\t\t\t\t\tmixedString: _x(\n\t\t\t\t\t\t\t'Use the buttons below to {{strong}}add the specific conversion actions{{/strong}} that fulfill this goal.',\n\t\t\t\t\t\t\t'user',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcomponents: {\n\t\t\t\t\t\t\tstrong: <strong />,\n\t\t\t\t\t\t},\n\t\t\t\t\t} ) }\n\t\t\t\t</p>,\n\t\t\t] }\n\t\t</div>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useActiveGoalId = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getActiveGoal()?.id );\n\nconst useConversionActions = ( goalId: GoalId ): ReadonlyArray< CA > =>\n\tuseSelect( ( select ) => {\n\t\tif ( ! goalId ) {\n\t\t\treturn [];\n\t\t} //end if\n\t\tconst { getConversionActions } = select( NAB_EDITOR );\n\t\treturn getConversionActions( goalId ) || [];\n\t} );\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Button, ExternalLink, Tooltip } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { every, filter, find, without } from 'lodash';\nimport {\n\tSTORE_NAME as NAB_ACTIONS,\n\tcreateConversionAction as createConversionActionWithDefaults,\n} from '@nab/conversion-actions';\nimport { addFreeTracker } from '@nab/utils';\nimport type {\n\tConversionAction as CA,\n\tConversionActionTypeName,\n\tGoalId,\n} from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { usePluginSetting } from '../../hooks';\nimport { STORE_NAME as NAB_EDITOR } from '../../../store/config';\n\nexport const ConversionActionTypeList = (): JSX.Element => {\n\tconst isSubscribed = !! usePluginSetting( 'subscription' );\n\tconst goalId = useActiveGoalId();\n\tconst hasConversionActions = !! useConversionActions( goalId ).length;\n\tconst conversionActionTypes = useConversionActionTypes();\n\tconst { addConversionActionsIntoGoal } = useDispatch( NAB_EDITOR );\n\n\tif ( ! isSubscribed && hasConversionActions ) {\n\t\treturn (\n\t\t\t<div className=\"nab-conversion-action-type-list\">\n\t\t\t\t<ExternalLink\n\t\t\t\t\tclassName=\"components-button is-secondary\"\n\t\t\t\t\thref={ addFreeTracker(\n\t\t\t\t\t\t_x(\n\t\t\t\t\t\t\t'https://neliosoftware.com/testing/pricing/',\n\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t)\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ _x(\n\t\t\t\t\t\t'Subscribe to Track More Actions',\n\t\t\t\t\t\t'user',\n\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t) }\n\t\t\t\t</ExternalLink>\n\t\t\t</div>\n\t\t);\n\t} //end if\n\n\tconst createConversionAction = ( type: ConversionActionTypeName ) => {\n\t\tconst act = createConversionActionWithDefaults( type );\n\t\tif ( act ) {\n\t\t\taddConversionActionsIntoGoal( goalId, act );\n\t\t} //end if\n\t};\n\n\treturn (\n\t\t<ul className=\"nab-conversion-action-type-list\">\n\t\t\t{ conversionActionTypes &&\n\t\t\t\tconversionActionTypes.map( ( type ) => {\n\t\t\t\t\tconst Icon = type.icon;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tkey={ type.name }\n\t\t\t\t\t\t\ttext={ type.title }\n\t\t\t\t\t\t\tposition=\"top center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tkey={ type.name }\n\t\t\t\t\t\t\t\tclassName=\"nab-conversion-action-type-list__item\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tisSecondary\n\t\t\t\t\t\t\t\t\tclassName=\"nab-conversion-action-type-list__new-action-button\"\n\t\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\t\tcreateConversionAction( type.name )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Icon />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t</ul>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useActiveGoalId = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getActiveGoal()?.id );\n\nconst useConversionActionTypes = () => {\n\tconst goalId = useActiveGoalId();\n\tconst conversionActions = useConversionActions( goalId );\n\treturn useSelect( ( select ) => {\n\t\tconst { getConversionActionTypes } = select( NAB_ACTIONS );\n\t\tconst conversionActionTypes = filter(\n\t\t\tgetConversionActionTypes(),\n\t\t\t( type ) => ! type.isActive || type.isActive( select )\n\t\t);\n\n\t\t// TODO. This is an adhoc solution, but we probably need something “better.”\n\t\tconst wcOrder = find( conversionActionTypes, { name: 'nab/wc-order' } );\n\t\tif ( wcOrder ) {\n\t\t\tif ( conversionActions.length ) {\n\t\t\t\treturn every( conversionActions, { type: 'nab/wc-order' } )\n\t\t\t\t\t? [ wcOrder ]\n\t\t\t\t\t: without( conversionActionTypes, wcOrder );\n\t\t\t} //end if\n\t\t} //end if\n\n\t\treturn conversionActionTypes;\n\t} );\n};\n\nconst useConversionActions = ( goalId: GoalId ): ReadonlyArray< CA > =>\n\tuseSelect( ( select ) => {\n\t\tif ( ! goalId ) {\n\t\t\treturn [];\n\t\t} //end if\n\t\treturn select( NAB_EDITOR ).getConversionActions( goalId ) || [];\n\t} );\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Button, Dashicon, PanelBody } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { noop } from 'lodash';\nimport { STORE_NAME as NAB_ACTIONS } from '@nab/conversion-actions';\nimport { isEmpty } from '@nab/utils';\nimport type { ConversionAction as CA, GoalId } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { STORE_NAME as NAB_EDITOR } from '../../../store/config';\n\nexport type ConversionActionProps = {\n\treadonly readOnly?: boolean;\n\treadonly action: CA;\n\treadonly goalId: GoalId;\n};\n\nexport const ConversionAction = ( {\n\treadOnly,\n\taction,\n\tgoalId,\n}: ConversionActionProps ): JSX.Element => {\n\tconst experimentId = useExperimentId();\n\tconst goal = useActiveGoal();\n\tconst goalIndex = useActiveGoalIndex();\n\tconst actionType = useConversionActionType( action.type );\n\n\tconst View = actionType?.view;\n\tconst Edit = actionType?.edit;\n\tconst Icon = actionType?.icon;\n\tconst attributes = action?.attributes || {};\n\tconst validate = actionType?.validate ?? ( () => ( {} ) );\n\n\tconst errors = validate( attributes );\n\tconst [ initialOpen ] = useState( ! isEmpty( errors ) );\n\n\tconst setAttributes = useSetAttributes( goalId, action.id );\n\tconst remove = useRemove( goalId, action.id );\n\n\tif ( readOnly ) {\n\t\treturn (\n\t\t\t<div className=\"nab-conversion-action\">\n\t\t\t\t<div className=\"nab-conversion-action__view\">\n\t\t\t\t\t{ !! Icon ? (\n\t\t\t\t\t\t<Icon className=\"nab-conversion-action__icon\" />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Dashicon\n\t\t\t\t\t\t\tclassName=\"nab-conversion-action__icon nab-conversion-action__icon--invalid\"\n\t\t\t\t\t\t\ticon=\"warning\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<div className=\"nab-conversion-action__actual-view\">\n\t\t\t\t\t\t{ !! View ? (\n\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\t\t\t\texperimentId={ experimentId }\n\t\t\t\t\t\t\t\tgoal={ goal.attributes }\n\t\t\t\t\t\t\t\tgoalId={ goalId }\n\t\t\t\t\t\t\t\tgoalIndex={ goalIndex }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t\t\t'Invalid conversion action.',\n\t\t\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} //end if\n\n\treturn (\n\t\t<PanelBody\n\t\t\tclassName=\"nab-conversion-action\"\n\t\t\tinitialOpen={ initialOpen }\n\t\t\ttitle={\n\t\t\t\t( (\n\t\t\t\t\t<div className=\"nab-conversion-action__view\">\n\t\t\t\t\t\t{ !! Icon ? (\n\t\t\t\t\t\t\t<Icon className=\"nab-conversion-action__icon\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Dashicon\n\t\t\t\t\t\t\t\tclassName=\"nab-conversion-action__icon nab-conversion-action__icon--invalid\"\n\t\t\t\t\t\t\t\ticon=\"warning\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<div className=\"nab-conversion-action__actual-view\">\n\t\t\t\t\t\t\t{ !! View ? (\n\t\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\t\t\t\t\texperimentId={ experimentId }\n\t\t\t\t\t\t\t\t\tgoal={ goal.attributes }\n\t\t\t\t\t\t\t\t\tgoalId={ goalId }\n\t\t\t\t\t\t\t\t\tgoalIndex={ goalIndex }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t\t\t\t'Invalid conversion action.',\n\t\t\t\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t ) as unknown ) as string\n\t\t\t}\n\t\t>\n\t\t\t<div className=\"nab-conversion-action__edit\">\n\t\t\t\t{ !! Edit ? (\n\t\t\t\t\t<Edit\n\t\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\t\texperimentId={ experimentId }\n\t\t\t\t\t\tgoal={ goal.attributes }\n\t\t\t\t\t\tgoalId={ goalId }\n\t\t\t\t\t\tgoalIndex={ goalIndex }\n\t\t\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\t\t\terrors={ errors }\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t'This conversion action can’t be properly loaded. Please consider removing it.',\n\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t) }\n\t\t\t\t\t</span>\n\t\t\t\t) }\n\t\t\t</div>\n\n\t\t\t<Button\n\t\t\t\tisLink\n\t\t\t\tisDestructive\n\t\t\t\tonClick={ remove }\n\t\t\t\tclassName=\"nab-conversion-action__delete-button\"\n\t\t\t>\n\t\t\t\t{ _x( 'Delete', 'command', 'neli-ab-testing' ) }\n\t\t\t</Button>\n\t\t</PanelBody>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useExperimentId = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getExperimentId() );\n\nconst useActiveGoal = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getActiveGoal() );\n\nconst useActiveGoalIndex = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getActiveGoalIndex() );\n\nconst useConversionActionType = ( type ) =>\n\tuseSelect( ( select ) =>\n\t\tselect( NAB_ACTIONS ).getConversionActionType( type )\n\t);\n\nconst useSetAttributes = ( goalId, actionId ) => {\n\tconst { updateConversionAction } = useDispatch( NAB_EDITOR );\n\treturn goalId && actionId\n\t\t? ( attrs ) => updateConversionAction( goalId, actionId, attrs )\n\t\t: noop;\n};\n\nconst useRemove = ( segmentId, ruleId ) => {\n\tconst { removeConversionActionsFromGoal } = useDispatch( NAB_EDITOR );\n\treturn segmentId && ruleId\n\t\t? () => removeConversionActionsFromGoal( segmentId, ruleId )\n\t\t: noop;\n};\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Button, TextControl } from '@wordpress/components';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport {\n\tAutomaticConversionActionList,\n\tConversionActionList,\n} from './conversion-action-list';\nimport { ConversionActionTypeList } from './conversion-action-type-list';\nimport { WooCommerceGoalSettings } from './woocommerce-goal-settings';\n\nexport type GoalProps = {\n\treadonly isAutomatic: boolean;\n\treadonly name: string;\n\treadonly removeGoal?: () => void;\n\treadonly setName: ( name: string ) => void;\n};\n\nexport const Goal = ( {\n\tname,\n\tsetName,\n\tremoveGoal,\n\tisAutomatic,\n}: GoalProps ): JSX.Element => (\n\t<div className=\"nab-current-goal-info\">\n\t\t{ ! isAutomatic && (\n\t\t\t<div className=\"nab-current-goal-info__header\">\n\t\t\t\t<TextControl\n\t\t\t\t\tplaceholder={ _x(\n\t\t\t\t\t\t'Name your goal…',\n\t\t\t\t\t\t'user',\n\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t) }\n\t\t\t\t\tvalue={ name }\n\t\t\t\t\tonChange={ ( value ) => setName( value ) }\n\t\t\t\t/>\n\t\t\t\t{ !! removeGoal && (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tisTertiary\n\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\tclassName=\"nab-current-goal-info__delete-button\"\n\t\t\t\t\t\tonClick={ removeGoal }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ _x( 'Delete', 'command (goal)', 'nelio-ab-testing' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t) }\n\n\t\t<WooCommerceGoalSettings />\n\n\t\t{ isAutomatic ? (\n\t\t\t<AutomaticConversionActionList />\n\t\t) : (\n\t\t\t<>\n\t\t\t\t<ConversionActionList />\n\t\t\t\t<ConversionActionTypeList />\n\t\t\t</>\n\t\t) }\n\t</div>\n);\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { CheckboxControl, SelectControl } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { STORE_NAME as NAB_DATA } from '@nab/data';\nimport type { Goal as RealGoal, WooCommerceOrderStatusName } from '@nab/types';\ntype Goal = Omit< RealGoal, 'conversionActions' >;\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { STORE_NAME as NAB_EDITOR } from '../../../store/config';\n\nexport const WooCommerceGoalSettings = (): JSX.Element | null => {\n\tconst isWooCommerceGoal = useIsWooCommerceGoal();\n\tconst [ checked, onToggle ] = useOrderRevenueToggle();\n\tconst statuses = useWooCommerceOrderStatuses();\n\tconst [ orderStatus, setOrderStatus ] = useOrderStatus();\n\n\tif ( ! isWooCommerceGoal ) {\n\t\treturn null;\n\t} //end if\n\n\treturn (\n\t\t<div className=\"nab-woocommerce-goal-settings\">\n\t\t\t<p>\n\t\t\t\t<strong>\n\t\t\t\t\t{ _x(\n\t\t\t\t\t\t'WooCommerce Goal Settings',\n\t\t\t\t\t\t'text',\n\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t) }\n\t\t\t\t</strong>\n\t\t\t</p>\n\t\t\t<SelectControl\n\t\t\t\tlabel={ _x(\n\t\t\t\t\t'Order status required for conversions:',\n\t\t\t\t\t'command',\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t) }\n\t\t\t\toptions={ statuses }\n\t\t\t\tvalue={ orderStatus }\n\t\t\t\tonChange={ setOrderStatus }\n\t\t\t/>\n\t\t\t<CheckboxControl\n\t\t\t\tlabel={ _x(\n\t\t\t\t\t'Track revenue and show in test results',\n\t\t\t\t\t'command',\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t) }\n\t\t\t\tchecked={ checked }\n\t\t\t\tonChange={ onToggle }\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useIsWooCommerceGoal = () =>\n\tuseSelect( ( select ) => {\n\t\tconst { getActiveGoal } = select( NAB_EDITOR );\n\t\tconst { getConversionActions } = select( NAB_EDITOR );\n\t\tconst goalId = getActiveGoal()?.id;\n\t\tconst actions = getConversionActions( goalId );\n\t\treturn (\n\t\t\tactions.length &&\n\t\t\tactions.every( ( { type } ) => 'nab/wc-order' === type )\n\t\t);\n\t} );\n\nconst useOrderRevenueToggle = () => {\n\tconst goal = useGoal();\n\tconst value = goal.attributes.useOrderRevenue ?? true;\n\tconst { updateGoal } = useDispatch( NAB_EDITOR );\n\tconst update = () => updateGoal( goal.id, { useOrderRevenue: ! value } );\n\treturn [ value, update ] as const;\n};\n\nconst useOrderStatus = () => {\n\tconst goal = useGoal();\n\tconst value = goal.attributes.orderStatusForConversion ?? 'wc-completed';\n\tconst { updateGoal } = useDispatch( NAB_EDITOR );\n\tconst update = ( v: WooCommerceOrderStatusName ) =>\n\t\tupdateGoal( goal.id, { orderStatusForConversion: v } );\n\treturn [ value, update ] as const;\n};\n\nconst useWooCommerceOrderStatuses = () =>\n\tuseSelect( ( select ) =>\n\t\tselect( NAB_DATA ).getWooCommerceSetting( 'orderStatuses' )\n\t);\n\nconst useGoal = (): Goal =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getActiveGoal() );\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Button, Dashicon } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useRef } from '@wordpress/element';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { SubscribeWithCouponButton, Tooltip } from '@nab/components';\nimport { isInTheFuture } from '@nab/date';\nimport { STORE_NAME as NAB_EXPERIMENTS } from '@nab/experiments';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { useExperimentAttribute } from '../hooks';\nimport { STORE_NAME as NAB_EDITOR } from '../../store/config';\n\nexport const Header = (): JSX.Element => {\n\tconst ref = useRef< HTMLDivElement >( null );\n\n\tconst Icon = useIcon();\n\tconst startLabel = useStartLabel();\n\n\tconst draftStatusRationale = useDraftStatusRationale();\n\tconst [ status ] = useExperimentAttribute( 'status' );\n\tconst isDraft = ( status || '' ).includes( 'draft' );\n\tconst isPaused = ( status || '' ).includes( 'paused' );\n\n\tconst isExperimentBeingSaved = useIsBeingSaved();\n\tconst hasExperimentBeenRecentlySaved = useHasBeenRecentlySaved();\n\n\tconst start = useStarter();\n\tconst { saveExperiment, setExperimentData } = useDispatch( NAB_EDITOR );\n\tconst saveExperimentAsReady = () => {\n\t\tsetExperimentData( { status: isPaused ? 'paused' : 'ready' } );\n\t\tvoid saveExperiment();\n\t};\n\n\treturn (\n\t\t<div ref={ ref } className=\"nab-edit-experiment-header\">\n\t\t\t<div className=\"nab-edit-experiment-header__info\">\n\t\t\t\t<Icon className=\"nab-edit-experiment-header__experiment-icon\" />\n\t\t\t\t<h1 className=\"nab-edit-experiment-header__title\">\n\t\t\t\t\t{ _x( 'Edit Test', 'text', 'nelio-ab-testing' ) }\n\t\t\t\t</h1>\n\t\t\t\t<SubscribeWithCouponButton\n\t\t\t\t\tclassName={\n\t\t\t\t\t\t'finished' === status\n\t\t\t\t\t\t\t? 'nab-edit-experiment-header__right-promo-button'\n\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"nab-edit-experiment-header__settings\">\n\t\t\t\t{ isExperimentBeingSaved && (\n\t\t\t\t\t<span className=\"nab-edit-experiment-header__save-button nab-edit-experiment-header__save-button--is-saving\">\n\t\t\t\t\t\t<Dashicon icon=\"cloud\" />\n\t\t\t\t\t\t{ _x( 'Saving…', 'text', 'nelio-ab-testing' ) }\n\t\t\t\t\t</span>\n\t\t\t\t) }\n\n\t\t\t\t{ hasExperimentBeenRecentlySaved && 'scheduled' !== status && (\n\t\t\t\t\t<span className=\"nab-edit-experiment-header__save-button nab-edit-experiment-header__save-button--has-been-saved\">\n\t\t\t\t\t\t<Dashicon icon=\"yes\" />\n\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t'Saved',\n\t\t\t\t\t\t\t'text (experiment)',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t) }\n\t\t\t\t\t</span>\n\t\t\t\t) }\n\n\t\t\t\t{ ! isExperimentBeingSaved &&\n\t\t\t\t\t! (\n\t\t\t\t\t\thasExperimentBeenRecentlySaved && 'scheduled' !== status\n\t\t\t\t\t) && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tisTertiary\n\t\t\t\t\t\t\tclassName=\"nab-edit-experiment-header__save-button\"\n\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t'scheduled' === status\n\t\t\t\t\t\t\t\t\t? saveExperimentAsReady\n\t\t\t\t\t\t\t\t\t: saveExperiment\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ 'scheduled' === status\n\t\t\t\t\t\t\t\t? _x(\n\t\t\t\t\t\t\t\t\t\t'Save as Ready',\n\t\t\t\t\t\t\t\t\t\t'command (experiment)',\n\t\t\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t: _x( 'Save', 'command', 'nelio-ab-testing' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) }\n\n\t\t\t\t<div className=\"nab-edit-experiment-header__start-button\">\n\t\t\t\t\t<Tooltip\n\t\t\t\t\t\ttext={ draftStatusRationale }\n\t\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\t\tgetTooltipContainer={\n\t\t\t\t\t\t\t!! ref.current\n\t\t\t\t\t\t\t\t? () => ref.current as HTMLDivElement\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tisPrimary\n\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\tisDraft ||\n\t\t\t\t\t\t\t\t\tisExperimentBeingSaved ||\n\t\t\t\t\t\t\t\t\t( hasExperimentBeenRecentlySaved &&\n\t\t\t\t\t\t\t\t\t\t'scheduled' === status )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={ start }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ startLabel }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useStartLabel = () => {\n\tconst [ startDate ] = useExperimentAttribute( 'startDate' );\n\tconst [ status ] = useExperimentAttribute( 'status' );\n\tconst isPaused = ( status || '' ).includes( 'paused' );\n\n\tif ( isPaused ) {\n\t\treturn _x( 'Resume…', 'command', 'nelio-ab-testing' );\n\t} //end if\n\n\tif ( startDate && isInTheFuture( startDate ) ) {\n\t\treturn 'scheduled' === status\n\t\t\t? _x( 'Schedule', 'command', 'nelio-ab-testing' )\n\t\t\t: _x( 'Schedule…', 'command', 'nelio-ab-testing' );\n\t} //end if\n\n\treturn _x( 'Start…', 'command', 'nelio-ab-testing' );\n};\n\nconst useIcon = () =>\n\tuseSelect( ( select ) => {\n\t\tconst { getExperimentTypes } = select( NAB_EXPERIMENTS );\n\t\tconst { getExperimentType } = select( NAB_EDITOR );\n\n\t\tconst experimentTypes = getExperimentTypes();\n\t\tconst typeName = getExperimentType();\n\t\treturn experimentTypes[ typeName ]?.icon;\n\t} );\n\nconst useDraftStatusRationale = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getDraftStatusRationale() );\n\nconst useIsBeingSaved = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).isExperimentBeingSaved() );\n\nconst useHasBeenRecentlySaved = () =>\n\tuseSelect( ( select ) =>\n\t\tselect( NAB_EDITOR ).hasExperimentBeenRecentlySaved()\n\t);\n\nconst useStarter = () => {\n\tconst [ status ] = useExperimentAttribute( 'status' );\n\tconst [ startDate ] = useExperimentAttribute( 'startDate' );\n\tconst isPaused = ( status || '' ).includes( 'paused' );\n\n\tconst {\n\t\tresumeExperiment,\n\t\tsetExperimentData,\n\t\tsaveExperiment,\n\t\tstartExperiment,\n\t} = useDispatch( NAB_EDITOR );\n\n\treturn () => {\n\t\tif ( isPaused ) {\n\t\t\tvoid resumeExperiment();\n\t\t} else if ( startDate && isInTheFuture( startDate ) ) {\n\t\t\tsetExperimentData( { status: 'scheduled' } );\n\t\t\tvoid saveExperiment();\n\t\t} else {\n\t\t\tvoid startExperiment();\n\t\t} //end if\n\t};\n};\n","/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * External dependencies\n */\nimport { STORE_NAME as NAB_DATA } from '@nab/data';\nimport type { PluginSettings, SubscriptionPlan } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME as NAB_EDITOR } from '../store/config';\nimport type { ExperimentAttributes } from '../store/types';\n\nexport function useExperimentAttribute< K extends keyof ExperimentAttributes >(\n\tattr: K\n): Readonly<\n\t[ ExperimentAttributes[ K ], ( v: ExperimentAttributes[ K ] ) => void ]\n> {\n\tconst value = useSelect( ( select ) =>\n\t\tselect( NAB_EDITOR ).getExperimentAttribute( attr )\n\t);\n\n\tconst { setExperimentData } = useDispatch( NAB_EDITOR );\n\tconst setValue = ( v: ExperimentAttributes[ K ] ): void =>\n\t\tsetExperimentData( { [ attr ]: v } );\n\n\treturn [ value, setValue ] as const;\n}\n\nexport function usePluginSetting< K extends keyof PluginSettings >(\n\tsetting: K\n): PluginSettings[ K ] {\n\treturn useSelect( ( select ) =>\n\t\tselect( NAB_DATA ).getPluginSetting( setting )\n\t);\n}\n\nexport const useIsSubscribedTo = ( plan: SubscriptionPlan ): boolean =>\n\tuseSelect( ( select ) => select( NAB_DATA ).isSubscribedTo( plan ) );\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { NoticeList } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\n\nconst NOTICES = noticesStore?.name ?? 'core/notices';\n\n/**\n * External dependencies\n */\nimport { isEmpty } from '@nab/utils';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { StatusManager } from '../status-manager';\nimport { Header } from '../header';\nimport { ExperimentName } from '../experiment-name';\nimport { GoalSection } from '../goal-section';\nimport { SegmentationSection } from '../segmentation-section';\nimport { Sidebar } from '../sidebar';\n\nimport { AlternativeSection } from '../alternative-section';\n\nexport const Layout = (): JSX.Element => {\n\tconst notices = useNotices();\n\tconst { removeNotice } = useDispatch( NOTICES );\n\n\treturn (\n\t\t<div className=\"nab-edit-experiment-layout\">\n\t\t\t<StatusManager />\n\t\t\t<Header />\n\t\t\t<div className=\"nab-edit-experiment-layout__body\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"nab-edit-experiment-layout__content\"\n\t\t\t\t\trole=\"region\"\n\t\t\t\t\t/* translators: accessibility text for the content landmark region. */\n\t\t\t\t\taria-label={ _x(\n\t\t\t\t\t\t'Editor content',\n\t\t\t\t\t\t'text',\n\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t) }\n\t\t\t\t\ttabIndex={ -1 }\n\t\t\t\t>\n\t\t\t\t\t{ ! isEmpty( notices ) && (\n\t\t\t\t\t\t<NoticeList\n\t\t\t\t\t\t\tclassName=\"nab-edit-experiment-layout__notices\"\n\t\t\t\t\t\t\tnotices={ notices }\n\t\t\t\t\t\t\tonRemove={ removeNotice }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\n\t\t\t\t\t<ExperimentName />\n\t\t\t\t\t<AlternativeSection />\n\t\t\t\t\t<GoalSection />\n\t\t\t\t\t<SegmentationSection />\n\t\t\t\t</div>\n\n\t\t\t\t<Sidebar />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nimport type { Notice } from 'wordpress__notices';\nconst useNotices = (): ReadonlyArray< Notice > =>\n\tuseSelect( ( select ) => select( NOTICES ).getNotices() );\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport { useEffect, useState } from '@wordpress/element';\n\n/**\n * External dependencies\n */\nimport { createGoal } from '@nab/utils';\nimport type { Experiment } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME as NAB_EDITOR } from '../../store/config';\n\nexport type EditorProviderProps = {\n\treadonly experiment?: Experiment;\n\treadonly children: JSX.Element;\n};\n\nexport const EditorProvider = ( {\n\texperiment,\n\tchildren,\n}: EditorProviderProps ): JSX.Element | null => {\n\tconst [ isReady, markAsReady ] = useState( false );\n\tconst { setupEditor, setActiveGoal, setActiveSegment } = useDispatch(\n\t\tNAB_EDITOR\n\t);\n\n\tuseEffect( () => {\n\t\tif ( ! experiment ) {\n\t\t\treturn;\n\t\t} //end if\n\n\t\tconst defaultGoal = experiment.goals[ 0 ] || createGoal();\n\t\tconst activeSegment = experiment.segments[ 0 ] || {};\n\n\t\tsetupEditor( experiment );\n\t\tsetActiveGoal( defaultGoal.id );\n\t\tsetActiveSegment( activeSegment.id );\n\t\tmarkAsReady( true );\n\t}, [ !! experiment ] );\n\n\treturn isReady ? <div>{ children }</div> : null;\n};\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Button, Dashicon } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { _x, sprintf } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { trim } from 'lodash';\nimport { createSegment } from '@nab/utils';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { useExperimentAttribute, usePluginSetting } from '../hooks';\nimport { STORE_NAME as NAB_EDITOR } from '../../store/config';\n\nexport const SegmentList = (): JSX.Element => {\n\tconst activeSegmentId = useActiveSegmentId();\n\tconst segments = useSegments();\n\tconst isExperimentPaused = useIsExperimentPaused();\n\tconst isSubscribed = !! usePluginSetting( 'subscription' );\n\tconst { setActiveSegment, addSegments } = useDispatch( NAB_EDITOR );\n\n\treturn (\n\t\t<ul className=\"nab-segment-list\">\n\t\t\t{ segments.map( ( segment, index ) => (\n\t\t\t\t<li\n\t\t\t\t\tkey={ segment.id }\n\t\t\t\t\tclassName={ classnames( 'nab-segment-list__item', {\n\t\t\t\t\t\t'nab-segment-list__item--is-active':\n\t\t\t\t\t\t\tsegment.id === activeSegmentId,\n\t\t\t\t\t} ) }\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdisabled={ segment.id === activeSegmentId }\n\t\t\t\t\t\tonClick={ () => setActiveSegment( segment.id ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ trim( segment.attributes.name ) ||\n\t\t\t\t\t\t\tgetDefaulSegmentNameForIndex( index ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</li>\n\t\t\t) ) }\n\n\t\t\t{ ! isExperimentPaused && isSubscribed && (\n\t\t\t\t<li\n\t\t\t\t\tclassName=\"nab-segment-list__add-new-segment\"\n\t\t\t\t\tkey=\"add-new-segment\"\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"nab-segment-list__add-new-segment-button\"\n\t\t\t\t\t\tisLink\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tconst segment = createSegment();\n\t\t\t\t\t\t\taddSegments( segment );\n\t\t\t\t\t\t\tsetActiveSegment( segment.id );\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t<Dashicon icon=\"plus\" />\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t\t'New',\n\t\t\t\t\t\t\t\t'command (segment)',\n\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Button>\n\t\t\t\t</li>\n\t\t\t) }\n\t\t</ul>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useActiveSegmentId = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getActiveSegment()?.id );\n\nconst useSegments = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getSegments() || [] );\n\nconst useIsExperimentPaused = () => {\n\tconst [ status ] = useExperimentAttribute( 'status' );\n\treturn status.includes( 'paused' );\n};\n\n// =======\n// HELPERS\n// =======\n\nconst getDefaulSegmentNameForIndex = ( index: number ) =>\n\tsprintf(\n\t\t/* translators: a number */\n\t\t_x( 'Segment %d', 'text', 'nelio-ab-testing' ),\n\t\tindex + 1\n\t);\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Button, TextControl } from '@wordpress/components';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { SegmentationRuleList } from './segmentation-rule-list';\nimport { SegmentationRuleTypeCategoryList } from './segmentation-rule-type-category-list';\n\nexport type SegmentProps = {\n\treadonly name: string;\n\treadonly setName: ( name: string ) => void;\n\treadonly removeSegment?: () => void;\n};\n\nexport const Segment = ( {\n\tname,\n\tsetName,\n\tremoveSegment,\n}: SegmentProps ): JSX.Element => (\n\t<div className=\"nab-current-segment-info\">\n\t\t<div className=\"nab-current-segment-info__header\">\n\t\t\t<TextControl\n\t\t\t\tplaceholder={ _x(\n\t\t\t\t\t'Name your segment…',\n\t\t\t\t\t'user',\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t) }\n\t\t\t\tvalue={ name }\n\t\t\t\tonChange={ ( value ) => setName( value ) }\n\t\t\t/>\n\t\t\t{ !! removeSegment && (\n\t\t\t\t<Button\n\t\t\t\t\tisTertiary\n\t\t\t\t\tisDestructive\n\t\t\t\t\tclassName=\"nab-current-segment-info__delete-button\"\n\t\t\t\t\tonClick={ removeSegment }\n\t\t\t\t>\n\t\t\t\t\t{ _x( 'Delete', 'command (segment)', 'nelio-ab-testing' ) }\n\t\t\t\t</Button>\n\t\t\t) }\n\t\t</div>\n\n\t\t<>\n\t\t\t<SegmentationRuleList />\n\t\t\t<SegmentationRuleTypeCategoryList />\n\t\t</>\n\t</div>\n);\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport interpolateComponents from '@automattic/interpolate-components';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { SegmentationRule } from '../segmentation-rule';\nimport { STORE_NAME as NAB_EDITOR } from '../../../store/config';\n\nexport const SegmentationRuleList = (): JSX.Element | null => {\n\tconst segmentId = useSegmentId();\n\tconst segmentationRules = useSegmentationRules();\n\n\tif ( ! segmentId ) {\n\t\treturn null;\n\t} //end if\n\n\treturn (\n\t\t<div className=\"nab-segmentation-rule-list\">\n\t\t\t{ !! segmentationRules.length && (\n\t\t\t\t<p key=\"segmentation-rule-explanation-1\">\n\t\t\t\t\t{ _x(\n\t\t\t\t\t\t'A visitor participates in the test every time all of the following segmentation rules match:',\n\t\t\t\t\t\t'text',\n\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t) }\n\t\t\t\t</p>\n\t\t\t) }\n\t\t\t{ segmentationRules.map( ( rule ) => (\n\t\t\t\t<SegmentationRule\n\t\t\t\t\tkey={ rule.id }\n\t\t\t\t\tsegmentId={ segmentId }\n\t\t\t\t\trule={ rule }\n\t\t\t\t/>\n\t\t\t) ) }\n\t\t\t{ ! segmentationRules.length && [\n\t\t\t\t<p\n\t\t\t\t\tkey=\"segmentation-rule-explanation-1\"\n\t\t\t\t\tclassName=\"nab-segmentation-rule-list__help\"\n\t\t\t\t>\n\t\t\t\t\t{ _x(\n\t\t\t\t\t\t'Split tests are usually applied to all visitors. But you can narrow your audience using segmentation rules to target only a subset of your visitors.',\n\t\t\t\t\t\t'text',\n\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t) }\n\t\t\t\t</p>,\n\t\t\t\t<p\n\t\t\t\t\tkey=\"segmentation-rule-explanation-2\"\n\t\t\t\t\tclassName=\"nab-segmentation-rule-list__help\"\n\t\t\t\t>\n\t\t\t\t\t{ interpolateComponents( {\n\t\t\t\t\t\tmixedString: _x(\n\t\t\t\t\t\t\t'Use the buttons below to {{strong}}add the specific segmentation rules{{/strong}} for this segment.',\n\t\t\t\t\t\t\t'user',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcomponents: {\n\t\t\t\t\t\t\tstrong: <strong />,\n\t\t\t\t\t\t},\n\t\t\t\t\t} ) }\n\t\t\t\t</p>,\n\t\t\t] }\n\t\t</div>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useSegmentId = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getActiveSegment()?.id );\n\nconst useSegmentationRules = () => {\n\tconst segmentId = useSegmentId();\n\treturn useSelect( ( select ) => {\n\t\tif ( ! segmentId ) {\n\t\t\treturn [];\n\t\t} //end if\n\t\tconst { getSegmentationRules } = select( NAB_EDITOR );\n\t\treturn getSegmentationRules( segmentId ) || [];\n\t} );\n};\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { ExternalLink } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { STORE_NAME as NAB_SEGMENTS } from '@nab/segmentation-rules';\nimport { addFreeTracker } from '@nab/utils';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { SegmentationRuleTypeCategory } from '../segmentation-rule-type-category';\nimport { usePluginSetting } from '../../hooks';\n\nexport const SegmentationRuleTypeCategoryList = (): JSX.Element => {\n\tconst segmentationRuleTypeCategories = useSegmentationRuleTypeCategories();\n\tconst isSubscribed = !! usePluginSetting( 'subscription' );\n\n\tif ( ! isSubscribed ) {\n\t\treturn (\n\t\t\t<div className=\"nab-segmentation-rule-type-list\">\n\t\t\t\t<ExternalLink\n\t\t\t\t\tclassName=\"components-button is-secondary\"\n\t\t\t\t\thref={ addFreeTracker(\n\t\t\t\t\t\t_x(\n\t\t\t\t\t\t\t'https://neliosoftware.com/testing/pricing/',\n\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t)\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ _x(\n\t\t\t\t\t\t'Subscribe to Use Segmentation Rules',\n\t\t\t\t\t\t'user',\n\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t) }\n\t\t\t\t</ExternalLink>\n\t\t\t</div>\n\t\t);\n\t} //end if\n\n\treturn (\n\t\t<ul className=\"nab-segmentation-rule-type-category-list\">\n\t\t\t{ segmentationRuleTypeCategories.map( ( category ) => (\n\t\t\t\t<SegmentationRuleTypeCategory\n\t\t\t\t\tkey={ category.name }\n\t\t\t\t\tcategory={ category }\n\t\t\t\t/>\n\t\t\t) ) }\n\t\t</ul>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useSegmentationRuleTypeCategories = () =>\n\tuseSelect(\n\t\t( select ) =>\n\t\t\tselect( NAB_SEGMENTS ).getSegmentationRuleTypeCategories() || []\n\t);\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { DropdownMenu } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * External dependencies\n */\nimport {\n\tSTORE_NAME as NAB_SEGMENTS,\n\tcreateSegmentationRule as createSegmentationRuleWithDefaults,\n} from '@nab/segmentation-rules';\nimport type {\n\tSegmentationRuleCategory,\n\tSegmentationRuleCategoryName,\n\tSegmentationRuleTypeName,\n} from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { STORE_NAME as NAB_EDITOR } from '../../../store/config';\n\nexport type SegmentationRuleTypeCategoryProps = {\n\treadonly category: SegmentationRuleCategory;\n};\n\nexport const SegmentationRuleTypeCategory = ( {\n\tcategory,\n}: SegmentationRuleTypeCategoryProps ): JSX.Element | null => {\n\tconst segmentationRuleTypes = useSegmentationRuleTypes( category.name );\n\tconst activeSegmentRules = useActiveSegmentRules();\n\tconst createSegmentationRule = useSegmentationRuleCreator();\n\tconst Icon = category.icon;\n\n\tif ( ! segmentationRuleTypes.length ) {\n\t\treturn null;\n\t} //end if\n\n\treturn (\n\t\t<li\n\t\t\tkey={ category.name }\n\t\t\tclassName=\"nab-segmentation-rule-type-category\"\n\t\t>\n\t\t\t<DropdownMenu\n\t\t\t\ticon={ <Icon /> }\n\t\t\t\tclassName=\"nab-segmentation-rule-type-category__item\"\n\t\t\t\tlabel={ category.title }\n\t\t\t\tcontrols={ segmentationRuleTypes.map(\n\t\t\t\t\t( { name, title, icon: TypeIcon } ) => ( {\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\ticon: <TypeIcon />,\n\t\t\t\t\t\tisDisabled: activeSegmentRules.some(\n\t\t\t\t\t\t\t( rule ) => rule.type === name\n\t\t\t\t\t\t),\n\t\t\t\t\t\tonClick: () => createSegmentationRule( name ),\n\t\t\t\t\t} )\n\t\t\t\t) }\n\t\t\t\ttoggleProps={ {\n\t\t\t\t\tclassName: 'nab-segmentation-rule-type-category__toggle',\n\t\t\t\t\tdisabled: segmentationRuleTypes.every( ( ruleType ) =>\n\t\t\t\t\t\tactiveSegmentRules.some(\n\t\t\t\t\t\t\t( rule ) => rule.type === ruleType.name\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t} }\n\t\t\t\tmenuProps={ {\n\t\t\t\t\tclassName: 'nab-segmentation-rule-type-category__menu',\n\t\t\t\t} }\n\t\t\t/>\n\t\t</li>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useSegmentationRuleTypes = ( catName: SegmentationRuleCategoryName ) =>\n\tuseSelect( ( select ) => {\n\t\tconst ruleTypes =\n\t\t\tselect( NAB_SEGMENTS ).getSegmentationRuleTypes() || [];\n\t\treturn ruleTypes.filter( ( { category } ) => category === catName );\n\t} );\n\nconst useActiveSegmentRules = () => {\n\tconst activeSegment = useActiveSegment();\n\treturn useSelect( ( select ) => {\n\t\tconst { getSegmentationRules } = select( NAB_EDITOR );\n\t\treturn activeSegment?.id\n\t\t\t? getSegmentationRules( activeSegment.id ) || []\n\t\t\t: [];\n\t} );\n};\n\nconst useActiveSegment = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getActiveSegment() );\n\nconst useSegmentationRuleCreator = () => {\n\tconst { addSegmentationRulesIntoSegment } = useDispatch( NAB_EDITOR );\n\tconst activeSegment = useActiveSegment();\n\treturn ( type: SegmentationRuleTypeName ) => {\n\t\tif ( ! activeSegment ) {\n\t\t\treturn;\n\t\t} //end if\n\t\tconst rule = createSegmentationRuleWithDefaults( type );\n\t\tif ( rule ) {\n\t\t\taddSegmentationRulesIntoSegment( activeSegment.id, rule );\n\t\t} //end if\n\t};\n};\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Button, Dashicon, PanelBody } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { noop } from 'lodash';\nimport { STORE_NAME as NAB_SEGMENTS } from '@nab/segmentation-rules';\nimport { isEmpty } from '@nab/utils';\nimport type {\n\tSegmentId,\n\tSegmentationRule as SR,\n\tSegmentationRuleId,\n} from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { STORE_NAME as NAB_EDITOR } from '../../../store/config';\n\nexport type SegmentationRuleProps = {\n\treadonly readOnly?: boolean;\n\treadonly rule: SR;\n\treadonly segmentId: SegmentId;\n};\n\nexport const SegmentationRule = ( {\n\treadOnly,\n\trule,\n\tsegmentId,\n}: SegmentationRuleProps ): JSX.Element => {\n\tconst experimentId = useExperimentId();\n\tconst segmentIndex = useActiveSegmentIndex();\n\tconst ruleType = useSegmentationRuleType( rule.type );\n\n\tconst View = ruleType?.view;\n\tconst Edit = ruleType?.edit;\n\tconst Icon = ruleType?.icon;\n\tconst attributes = rule?.attributes || {};\n\tconst validate = ruleType?.validate ?? ( () => ( {} ) );\n\n\tconst errors = validate( attributes );\n\tconst [ initialOpen ] = useState( ! isEmpty( errors ) );\n\n\tconst setAttributes = useSetAttributes( segmentId, rule.id );\n\tconst remove = useRemove( segmentId, rule.id );\n\n\tif ( readOnly ) {\n\t\treturn (\n\t\t\t<div className=\"nab-segmentation-rule\">\n\t\t\t\t<div className=\"nab-segmentation-rule__view\">\n\t\t\t\t\t{ !! Icon ? (\n\t\t\t\t\t\t<Icon className=\"nab-segmentation-rule__icon\" />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Dashicon\n\t\t\t\t\t\t\tclassName=\"nab-segmentation-rule__icon nab-segmentation-rule__icon--invalid\"\n\t\t\t\t\t\t\ticon=\"warning\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<div className=\"nab-segmentation-rule__actual-view\">\n\t\t\t\t\t\t{ !! View ? (\n\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\t\t\t\texperimentId={ experimentId }\n\t\t\t\t\t\t\t\tsegmentId={ segmentId }\n\t\t\t\t\t\t\t\tsegmentIndex={ segmentIndex }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t\t\t'Invalid segmentation rule.',\n\t\t\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} //end if\n\n\treturn (\n\t\t<PanelBody\n\t\t\tclassName=\"nab-segmentation-rule\"\n\t\t\tinitialOpen={ initialOpen }\n\t\t\ttitle={\n\t\t\t\t( (\n\t\t\t\t\t<div className=\"nab-segmentation-rule__view\">\n\t\t\t\t\t\t{ !! Icon ? (\n\t\t\t\t\t\t\t<Icon className=\"nab-segmentation-rule__icon\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Dashicon\n\t\t\t\t\t\t\t\tclassName=\"nab-segmentation-rule__icon nab-segmentation-rule__icon--invalid\"\n\t\t\t\t\t\t\t\ticon=\"warning\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<div className=\"nab-segmentation-rule__actual-view\">\n\t\t\t\t\t\t\t{ !! View ? (\n\t\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\t\t\t\t\texperimentId={ experimentId }\n\t\t\t\t\t\t\t\t\tsegmentId={ segmentId }\n\t\t\t\t\t\t\t\t\tsegmentIndex={ segmentIndex }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t\t\t\t'Invalid segmentation rule.',\n\t\t\t\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t ) as unknown ) as string\n\t\t\t}\n\t\t>\n\t\t\t<div className=\"nab-segmentation-rule__edit\">\n\t\t\t\t{ !! Edit ? (\n\t\t\t\t\t<Edit\n\t\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\t\texperimentId={ experimentId }\n\t\t\t\t\t\tsegmentId={ segmentId }\n\t\t\t\t\t\tsegmentIndex={ segmentIndex }\n\t\t\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\t\t\terrors={ errors }\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t'This segmentation rule can’t be properly loaded. Please consider removing it.',\n\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t) }\n\t\t\t\t\t</span>\n\t\t\t\t) }\n\t\t\t</div>\n\n\t\t\t<Button\n\t\t\t\tisLink\n\t\t\t\tisDestructive\n\t\t\t\tonClick={ remove }\n\t\t\t\tclassName=\"nab-segmentation-rule__delete-button\"\n\t\t\t>\n\t\t\t\t{ _x( 'Delete', 'command', 'neli-ab-testing' ) }\n\t\t\t</Button>\n\t\t</PanelBody>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useExperimentId = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getExperimentId() );\n\nconst useActiveSegmentIndex = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getActiveSegmentIndex() );\n\nconst useSegmentationRuleType = ( type ) =>\n\tuseSelect( ( select ) =>\n\t\tselect( NAB_SEGMENTS ).getSegmentationRuleType( type )\n\t);\n\nconst useSetAttributes = (\n\tsegmentId: SegmentId,\n\truleId: SegmentationRuleId\n) => {\n\tconst { updateSegmentationRule } = useDispatch( NAB_EDITOR );\n\treturn segmentId && ruleId\n\t\t? ( attrs ) => updateSegmentationRule( segmentId, ruleId, attrs )\n\t\t: noop;\n};\n\nconst useRemove = ( segmentId: SegmentId, ruleId: SegmentationRuleId ) => {\n\tconst { removeSegmentationRulesFromSegment } = useDispatch( NAB_EDITOR );\n\treturn segmentId && ruleId\n\t\t? () => removeSegmentationRulesFromSegment( segmentId, ruleId )\n\t\t: noop;\n};\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Dashicon, ExternalLink } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { _x, sprintf } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { findIndex } from 'lodash';\nimport interpolateComponents from '@automattic/interpolate-components';\nimport { addFreeTracker } from '@nab/utils';\nimport type { Segment as RealSegment, SegmentId } from '@nab/types';\ntype Segment = Omit< RealSegment, 'segmentationRules' >;\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { useExperimentAttribute, usePluginSetting } from '../hooks';\nimport { Segment as SegmentView } from '../segment';\nimport { SegmentList } from '../segment-list';\nimport { STORE_NAME as NAB_EDITOR } from '../../store/config';\n\nexport const SegmentationSection = (): JSX.Element => {\n\tconst [ segment, updateActiveSegment ] = useActiveSegment();\n\tconst [ status ] = useExperimentAttribute( 'status' );\n\tconst isSubscribed = !! usePluginSetting( 'subscription' );\n\tconst isExperimentPaused = ( status || '' ).includes( 'paused' );\n\n\tconst removeActiveSegment = useActiveSegmentRemover();\n\tconst canSegmentBeRemoved = ! isExperimentPaused;\n\n\treturn (\n\t\t<div className=\"nab-edit-experiment__segmentation-section\">\n\t\t\t<h2>\n\t\t\t\t{ interpolateComponents( {\n\t\t\t\t\tmixedString: sprintf(\n\t\t\t\t\t\t/* translators: dashicon */\n\t\t\t\t\t\t_x( '%s Segmentation', 'text', 'nelio-ab-testing' ),\n\t\t\t\t\t\t'{{icon}}{{/icon}}'\n\t\t\t\t\t),\n\t\t\t\t\tcomponents: {\n\t\t\t\t\t\ticon: (\n\t\t\t\t\t\t\t<Dashicon\n\t\t\t\t\t\t\t\tclassName=\"nab-segmentation-section__title-icon\"\n\t\t\t\t\t\t\t\ticon=\"groups\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t} ) }\n\t\t\t</h2>\n\n\t\t\t{ !! isSubscribed && (\n\t\t\t\t<div className=\"nab-edit-experiment-segmentation-section__content\">\n\t\t\t\t\t<SegmentList />\n\t\t\t\t\t{ segment ? (\n\t\t\t\t\t\t<SegmentView\n\t\t\t\t\t\t\tname={ segment.attributes.name }\n\t\t\t\t\t\t\tsetName={ ( name ) =>\n\t\t\t\t\t\t\t\tupdateActiveSegment( {\n\t\t\t\t\t\t\t\t\t...segment.attributes,\n\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tremoveSegment={\n\t\t\t\t\t\t\t\tcanSegmentBeRemoved\n\t\t\t\t\t\t\t\t\t? removeActiveSegment\n\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p className=\"nab-edit-experiment-segmentation-section__content--empty\">\n\t\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t\t'Add a new segment to narrow your tested audience and target only a subset of your visitors.',\n\t\t\t\t\t\t\t\t'user',\n\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t) }\n\n\t\t\t{ ! isSubscribed && (\n\t\t\t\t<div className=\"nab-edit-experiment-segmentation-section__content nab-edit-experiment-segmentation-section__content--free\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t'All your visitors participate in this test. Segmentation allows you to narrow your tested audience and target only a subset of your visitors.',\n\t\t\t\t\t\t\t'user',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t) }\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"nab-edit-experiment-segmentation-section__content-action\">\n\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\tclassName=\"components-button is-secondary\"\n\t\t\t\t\t\t\thref={ addFreeTracker(\n\t\t\t\t\t\t\t\t_x(\n\t\t\t\t\t\t\t\t\t'https://neliosoftware.com/testing/pricing/',\n\t\t\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t\t'Subscribe to Unlock Segmentation',\n\t\t\t\t\t\t\t\t'user',\n\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</div>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useActiveSegment = () => {\n\tconst segment = useSelect( ( select ) =>\n\t\tselect( NAB_EDITOR ).getActiveSegment()\n\t);\n\n\tconst { updateSegment: doUpdate } = useDispatch( NAB_EDITOR );\n\tconst updateSegment = ( attributes ) => {\n\t\tif ( segment?.id ) {\n\t\t\tdoUpdate( segment.id, attributes );\n\t\t} //end if\n\t};\n\n\treturn [ segment, updateSegment ] as const;\n};\n\nconst useActiveSegmentRemover = () => {\n\tconst [ segment ] = useActiveSegment();\n\tconst segments = useSelect( ( select ) =>\n\t\tselect( NAB_EDITOR ).getSegments()\n\t);\n\n\tconst { removeSegments, setActiveSegment } = useDispatch( NAB_EDITOR );\n\n\tif ( ! segment ) {\n\t\treturn () => null;\n\t} //end if\n\n\treturn () => {\n\t\tconst nextSegment = getAdjacentSegment( segments, segment.id );\n\t\tif ( nextSegment ) {\n\t\t\tsetActiveSegment( nextSegment.id );\n\t\t} //end if\n\t\tremoveSegments( segment.id );\n\t};\n};\n\n// =======\n// HELPERS\n// =======\n\nfunction getAdjacentSegment(\n\tsegments: ReadonlyArray< Segment >,\n\tsegmentId: SegmentId\n): Segment {\n\tconst index = findIndex( segments, { id: segmentId } );\n\treturn segments[ index + 1 ] || segments[ index - 1 ] || false;\n} //end getAdjacentSegment()\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { PanelBody, TextareaControl } from '@wordpress/components';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { useExperimentAttribute } from '../../hooks';\n\nexport const Description = (): JSX.Element => {\n\tconst [ description, setDescription ] = useExperimentAttribute(\n\t\t'description'\n\t);\n\treturn (\n\t\t<PanelBody\n\t\t\tclassName=\"nab-experiment-description\"\n\t\t\ttitle={ _x( 'Description', 'text', 'nelio-ab-testing' ) }\n\t\t>\n\t\t\t<TextareaControl\n\t\t\t\tlabel={ _x(\n\t\t\t\t\t'Describe your test (optional)',\n\t\t\t\t\t'user',\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t) }\n\t\t\t\tclassName=\"nab-experiment-description__textarea\"\n\t\t\t\tvalue={ description }\n\t\t\t\tonChange={ setDescription }\n\t\t\t/>\n\t\t</PanelBody>\n\t);\n};\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport {\n\tButton,\n\tDropdown,\n\tPanelRow,\n\tSelectControl,\n} from '@wordpress/components';\nimport { useInstanceId } from '@wordpress/compose';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { _n, _x, sprintf } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { numberFormat } from '@nab/i18n';\nimport type { Experiment } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { useExperimentAttribute, useIsSubscribedTo } from '../../../hooks';\nimport { STORE_NAME as NAB_EDITOR } from '../../../../store/config';\n\nexport const ExperimentEndSchedule = (): JSX.Element => {\n\tconst instanceId = useInstanceId( ExperimentEndSchedule );\n\n\tconst canBeScheduled = useIsSubscribedTo( 'professional' );\n\tconst [ endMode ] = useExperimentAttribute( 'endMode' );\n\tconst [ endValue ] = useExperimentAttribute( 'endValue' );\n\tconst experimentType = useExperimentType();\n\tconst options = END_MODE_OPTIONS[ endMode ];\n\n\tconst { setExperimentData } = useDispatch( NAB_EDITOR );\n\tconst onUpdateEndSchedule = (\n\t\tmode: Experiment[ 'endMode' ],\n\t\tvalue: number\n\t) => setExperimentData( { endMode: mode, endValue: value } );\n\n\tif ( ! canBeScheduled ) {\n\t\treturn (\n\t\t\t<PanelRow className=\"nab-experiment-end-schedule\">\n\t\t\t\t<span>{ _x( 'End', 'text', 'nelio-ab-testing' ) }</span>\n\t\t\t\t<span>{ _x( 'Manual', 'text', 'nelio-ab-testing' ) }</span>\n\t\t\t</PanelRow>\n\t\t);\n\t} //end if\n\n\treturn (\n\t\t<PanelRow className=\"nab-experiment-end-schedule\">\n\t\t\t<span>{ _x( 'End', 'text', 'nelio-ab-testing' ) }</span>\n\n\t\t\t<Dropdown\n\t\t\t\tposition=\"bottom right\"\n\t\t\t\tcontentClassName=\"nab-experiment-end-schedule__dropdown\"\n\t\t\t\trenderToggle={ ( { onToggle, isOpen } ) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\tclassName=\"nab-experiment-end-schedule__value screen-reader-text\"\n\t\t\t\t\t\t\thtmlFor={ `nab-experiment-end-schedule__toggle-${ instanceId }` }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t\t'Click to change',\n\t\t\t\t\t\t\t\t'command',\n\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tid={ `nab-experiment-end-schedule__toggle-${ instanceId }` }\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"nab-experiment-end-schedule__toggle\"\n\t\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\t\t\taria-live=\"polite\"\n\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ getLabel( endMode, endValue ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t\trenderContent={ () => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={ _x(\n\t\t\t\t\t\t\t\t'End Mode',\n\t\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tvalue={ endMode }\n\t\t\t\t\t\t\tonChange={ ( mode ) =>\n\t\t\t\t\t\t\t\tonUpdateEndSchedule(\n\t\t\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\t\t\tgetDefaultValue( mode )\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toptions={ END_MODES.filter(\n\t\t\t\t\t\t\t\t( { value } ) =>\n\t\t\t\t\t\t\t\t\t'confidence' !== value ||\n\t\t\t\t\t\t\t\t\t'nab/heatmap' !== experimentType\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{ !! options && (\n\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\tlabel={ _x(\n\t\t\t\t\t\t\t\t\t'Value',\n\t\t\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tonChange={ ( value: string ) =>\n\t\t\t\t\t\t\t\t\tonUpdateEndSchedule(\n\t\t\t\t\t\t\t\t\t\tendMode,\n\t\t\t\t\t\t\t\t\t\tNumber.parseInt( value ) || 0\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue={ `${ endValue }` }\n\t\t\t\t\t\t\t\toptions={ options }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t/>\n\t\t</PanelRow>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useExperimentType = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getExperimentType() );\n\n// ====\n// DATA\n// ====\n\nconst END_MODES: ReadonlyArray< {\n\treadonly value: Experiment[ 'endMode' ];\n\treadonly label: string;\n} > = [\n\t{\n\t\tvalue: 'manual',\n\t\tlabel: _x( 'Manual', 'text', 'nelio-ab-testing' ),\n\t},\n\t{\n\t\tvalue: 'duration',\n\t\tlabel: _x( 'Duration', 'text', 'nelio-ab-testing' ),\n\t},\n\t{\n\t\tvalue: 'page-views',\n\t\tlabel: _x( 'Page Views', 'text', 'nelio-ab-testing' ),\n\t},\n\t{\n\t\tvalue: 'confidence',\n\t\tlabel: _x( 'Confidence', 'text', 'nelio-ab-testing' ),\n\t},\n];\n\nconst END_MODE_OPTIONS: Record<\n\tExperiment[ 'endMode' ],\n\tReadonlyArray< {\n\t\treadonly value: string;\n\t\treadonly label: string;\n\t} >\n> = {\n\tmanual: [],\n\tconfidence: [ 95, 96, 97, 98, 99 ].map( ( percentage ) => ( {\n\t\tvalue: `${ percentage }`,\n\t\tlabel: sprintf(\n\t\t\t/* translators: a percentage number, such as “95” */\n\t\t\t_x( '%1$s%%', 'text', 'nelio-ab-testing' ),\n\t\t\tnumberFormat( percentage )\n\t\t),\n\t} ) ),\n\tduration: [ 5, 7, 15, 30, 60, 90 ].map( ( duration ) => ( {\n\t\tvalue: `${ duration }`,\n\t\tlabel: sprintf(\n\t\t\t/* translators: number of days */\n\t\t\t_n( '%d day', '%d days', duration, 'nelio-ab-testing' ),\n\t\t\tduration\n\t\t),\n\t} ) ),\n\t'page-views': [ 2500, 5000, 10000, 20000, 50000, 100000 ].map(\n\t\t( views ) => ( {\n\t\t\tvalue: `${ views }`,\n\t\t\tlabel: numberFormat( views ),\n\t\t} )\n\t),\n};\n\n// =======\n// HELPERS\n// =======\n\nfunction getLabel(\n\tendMode: Experiment[ 'endMode' ],\n\tendValue: number\n): string {\n\tswitch ( endMode ) {\n\t\tcase 'duration':\n\t\t\treturn sprintf(\n\t\t\t\t/* translators: number of days */\n\t\t\t\t_n(\n\t\t\t\t\t'After %d day',\n\t\t\t\t\t'After %d days',\n\t\t\t\t\tendValue,\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t),\n\t\t\t\tendValue\n\t\t\t);\n\t\tcase 'page-views':\n\t\t\treturn sprintf(\n\t\t\t\t/* translators: a number */\n\t\t\t\t_n(\n\t\t\t\t\t'After %s page view',\n\t\t\t\t\t'After %s page views',\n\t\t\t\t\tendValue,\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t),\n\t\t\t\tnumberFormat( endValue )\n\t\t\t); // eslint-disable-line\n\t\tcase 'confidence':\n\t\t\treturn sprintf(\n\t\t\t\t/* translators: a percentage number, such as “95” */\n\t\t\t\t_x( 'At %1$s%% confidence', 'text', 'nelio-ab-testing' ),\n\t\t\t\tnumberFormat( endValue )\n\t\t\t);\n\t\tcase 'manual':\n\t\t\treturn _x( 'Manual', 'text', 'nelio-ab-testing' );\n\t} //end switch\n} //end getLabel()\n\nfunction getDefaultValue( mode: Experiment[ 'endMode' ] ): number {\n\tswitch ( mode ) {\n\t\tcase 'duration':\n\t\t\treturn 5;\n\t\tcase 'page-views':\n\t\t\treturn 5000;\n\t\tcase 'confidence':\n\t\t\treturn 97;\n\t\tcase 'manual':\n\t\t\treturn 0;\n\t} //end switch\n} //end getDefaultValue()\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { PanelRow } from '@wordpress/components';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { DateTimePicker } from '@nab/components';\nimport { formatI18nDatetime } from '@nab/date';\n\n/**\n * Internal dependencies\n */\nimport { useExperimentAttribute, useIsSubscribedTo } from '../../../hooks';\n\nexport const ExperimentStartSchedule = (): JSX.Element => {\n\tconst [ startDate, setStartDate ] = useExperimentAttribute( 'startDate' );\n\tconst canBeScheduled = useIsSubscribedTo( 'professional' );\n\tconst isPaused = useIsPaused();\n\n\treturn (\n\t\t<PanelRow className=\"nab-experiment-start-schedule\">\n\t\t\t<span>{ _x( 'Start', 'text', 'nelio-ab-testing' ) }</span>\n\t\t\t<span>\n\t\t\t\t{ !! isPaused && (\n\t\t\t\t\t<span className=\"nab-experiment-start-schedule__date\">\n\t\t\t\t\t\t{ formatI18nDatetime( startDate ) }\n\t\t\t\t\t</span>\n\t\t\t\t) }\n\n\t\t\t\t{ ! isPaused && ! canBeScheduled && (\n\t\t\t\t\t<span className=\"nab-experiment-start-schedule__date\">\n\t\t\t\t\t\t{ _x( 'Immediately', 'text', 'nelio-ab-testing' ) }\n\t\t\t\t\t</span>\n\t\t\t\t) }\n\n\t\t\t\t{ ! isPaused && !! canBeScheduled && (\n\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\tclassName=\"nab-experiment-start-schedule__date\"\n\t\t\t\t\t\tdate={ startDate }\n\t\t\t\t\t\tonChange={ setStartDate }\n\t\t\t\t\t\tnoDateLabel={ _x(\n\t\t\t\t\t\t\t'Immediately',\n\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t) }\n\t\t\t\t\t\treadonly\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</span>\n\t\t</PanelRow>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useIsPaused = () => {\n\tconst [ status ] = useExperimentAttribute( 'status' );\n\treturn status.includes( 'paused' );\n};\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Button, PanelBody, PanelRow } from '@wordpress/components';\nimport { useDispatch } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { Status } from './status';\nimport { ExperimentStartSchedule } from './experiment-start-schedule';\nimport { ExperimentEndSchedule } from './experiment-end-schedule';\nimport { STORE_NAME as NAB_EDITOR } from '../../../store/config';\n\nexport const ExperimentManagement = (): JSX.Element => {\n\tconst { moveToTrash } = useDispatch( NAB_EDITOR );\n\treturn (\n\t\t<PanelBody\n\t\t\tclassName=\"nab-experiment-management\"\n\t\t\ttitle={ _x(\n\t\t\t\t'Status & Management',\n\t\t\t\t'text (experiment)',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t) }\n\t\t>\n\t\t\t<Status />\n\t\t\t<ExperimentStartSchedule />\n\t\t\t<ExperimentEndSchedule />\n\n\t\t\t<PanelRow className=\"nab-experiment-management__trash\">\n\t\t\t\t<Button isTertiary isDestructive onClick={ moveToTrash }>\n\t\t\t\t\t{ _x(\n\t\t\t\t\t\t'Move to Trash',\n\t\t\t\t\t\t'command (experiment)',\n\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t) }\n\t\t\t\t</Button>\n\t\t\t</PanelRow>\n\t\t</PanelBody>\n\t);\n};\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { PanelRow } from '@wordpress/components';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport type { Experiment } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { useExperimentAttribute } from '../../../hooks';\n\nexport const Status = (): JSX.Element => {\n\tconst [ status ] = useExperimentAttribute( 'status' );\n\treturn (\n\t\t<PanelRow className=\"nab-experiment-management__status\">\n\t\t\t<span>{ _x( 'Status', 'text', 'nelio-ab-testing' ) }</span>\n\t\t\t<strong className=\"nab-experiment-management__status-value\">\n\t\t\t\t{ getStatusLabel( status ) }\n\t\t\t</strong>\n\t\t</PanelRow>\n\t);\n};\n\n// =======\n// HELPERS\n// =======\n\nfunction getStatusLabel( status: Experiment[ 'status' ] ): string {\n\tswitch ( status ) {\n\t\tcase 'draft':\n\t\t\treturn _x(\n\t\t\t\t'Draft',\n\t\t\t\t'text (experiment status)',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t);\n\n\t\tcase 'ready':\n\t\t\treturn _x(\n\t\t\t\t'Ready',\n\t\t\t\t'text (experiment status)',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t);\n\n\t\tcase 'scheduled':\n\t\t\treturn _x(\n\t\t\t\t'Scheduled',\n\t\t\t\t'text (experiment status)',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t);\n\n\t\tcase 'paused':\n\t\t\treturn _x(\n\t\t\t\t'Paused',\n\t\t\t\t'text (experiment status)',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t);\n\n\t\tcase 'paused_draft':\n\t\t\treturn _x(\n\t\t\t\t'Paused Draft',\n\t\t\t\t'text (experiment status)',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t);\n\n\t\tcase 'running':\n\t\tcase 'finished':\n\t\tcase 'trash':\n\t\t\treturn '-';\n\t} //end switch\n} //end getStatusLabel()\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Dashicon } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { _x, sprintf } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport interpolateComponents from '@automattic/interpolate-components';\nimport { STORE_NAME as NAB_DATA } from '@nab/data';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { ExperimentManagement } from './experiment-management';\nimport { Description } from './description';\nimport { Scope } from './scope';\n\nexport const Sidebar = (): JSX.Element => {\n\tconst dims = useSidebarDimensions();\n\treturn (\n\t\t<div className=\"nab-edit-experiment-sidebar\" style={ dims }>\n\t\t\t<div className=\"nab-edit-experiment-sidebar__element-wrapper\">\n\t\t\t\t<h2 className=\"nab-edit-experiment-sidebar__section-title\">\n\t\t\t\t\t{ interpolateComponents( {\n\t\t\t\t\t\tmixedString: sprintf(\n\t\t\t\t\t\t\t/* translators: dashicon */\n\t\t\t\t\t\t\t_x(\n\t\t\t\t\t\t\t\t'%s Additional Settings',\n\t\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t'{{icon}}{{/icon}}'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcomponents: {\n\t\t\t\t\t\t\ticon: (\n\t\t\t\t\t\t\t\t<Dashicon\n\t\t\t\t\t\t\t\t\tclassName=\"nab-edit-experiment-sidebar__section-title-icon\"\n\t\t\t\t\t\t\t\t\ticon=\"admin-settings\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t} ) }\n\t\t\t\t</h2>\n\n\t\t\t\t<ExperimentManagement />\n\t\t\t\t<Description />\n\t\t\t\t<Scope />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useSidebarDimensions = () =>\n\tuseSelect( ( select ) => {\n\t\tconst { getPageAttribute } = select( NAB_DATA );\n\t\tconst { applyFix, ...dims } = getPageAttribute( 'sidebarDimensions' );\n\t\treturn applyFix ? dims : undefined;\n\t} );\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { CheckboxControl } from '@wordpress/components';\nimport { useDispatch } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { createScopeRule } from '@nab/utils';\nimport { map } from 'lodash';\nimport type { ScopeRule } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME as NAB_EDITOR } from '../../../store/config';\n\nexport type ConsistencyScopeProps = {\n\treadonly rules: ReadonlyArray< ScopeRule >;\n};\n\nexport const ConsistencyScope = ( {\n\trules,\n}: ConsistencyScopeProps ): JSX.Element => {\n\tconst enableConsistency = useConsistencyEnabler( rules );\n\treturn (\n\t\t<>\n\t\t\t{ ! rules.length ? (\n\t\t\t\t<p>\n\t\t\t\t\t{ _x(\n\t\t\t\t\t\t'Variants will be visible on the tested element’s page. All other pages will also show the appropriate variant of this test whenever the tested element appears on them.',\n\t\t\t\t\t\t'text',\n\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t) }\n\t\t\t\t</p>\n\t\t\t) : (\n\t\t\t\t<p>\n\t\t\t\t\t{ _x(\n\t\t\t\t\t\t'Variants will be visible only on the tested element’s page.',\n\t\t\t\t\t\t'text',\n\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t) }\n\t\t\t\t</p>\n\t\t\t) }\n\t\t\t<CheckboxControl\n\t\t\t\tlabel={ _x(\n\t\t\t\t\t'Global Consistency',\n\t\t\t\t\t'command',\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t) }\n\t\t\t\tchecked={ ! rules.length }\n\t\t\t\tonChange={ () => enableConsistency( ! rules.length ) }\n\t\t\t/>\n\t\t</>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useConsistencyEnabler = ( rules ) => {\n\tconst { addScopeRules, removeScopeRules } = useDispatch( NAB_EDITOR );\n\treturn ( consistency ) => {\n\t\tremoveScopeRules( map( rules, 'id' ) );\n\t\tif ( consistency ) {\n\t\t\taddScopeRules( createScopeRule( { type: 'tested-post' } ) );\n\t\t} //end if\n\t};\n};\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { PanelBody } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { STORE_NAME as NAB_EXPERIMENTS } from '@nab/experiments';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport { NewRuleForm } from './new-rule-form';\nimport { RuleList } from './rule-list';\nimport { ConsistencyScope } from './consistency-scope';\nimport { STORE_NAME as NAB_EDITOR } from '../../../store/config';\n\nexport const Scope = (): JSX.Element | null => {\n\tconst rules = useRules();\n\tconst scopeSupport = useScopeSupport();\n\tconst testAgainstExistingContent = useTestAgainstExistingContent();\n\n\tif ( ! scopeSupport ) {\n\t\treturn null;\n\t} //end if\n\n\tif ( testAgainstExistingContent ) {\n\t\treturn null;\n\t} //end if\n\n\treturn (\n\t\t<PanelBody\n\t\t\tclassName=\"nab-experiment-scope\"\n\t\t\ttitle={ _x( 'Test Scope', 'text', 'nelio-ab-testing' ) }\n\t\t>\n\t\t\t{ 'tested-post-with-consistency' === scopeSupport ? (\n\t\t\t\t<ConsistencyScope rules={ rules } />\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<RuleList rules={ rules } scopeSupport={ scopeSupport } />\n\t\t\t\t\t<NewRuleForm\n\t\t\t\t\t\trules={ rules }\n\t\t\t\t\t\tscopeSupport={ scopeSupport }\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) }\n\t\t</PanelBody>\n\t);\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useRules = () =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getScope() );\n\nconst useScopeSupport = () =>\n\tuseSelect( ( select ) => {\n\t\tconst { getExperimentSupport } = select( NAB_EXPERIMENTS );\n\t\tconst { getExperimentType } = select( NAB_EDITOR );\n\t\treturn getExperimentSupport( getExperimentType(), 'scope' );\n\t} );\n\nconst useTestAgainstExistingContent = () =>\n\tuseSelect( ( select ) => {\n\t\tconst control = select( NAB_EDITOR ).getAlternative( 'control' );\n\t\treturn !! control.attributes.testAgainstExistingContent;\n\t} );\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport {\n\tButton,\n\tPanelRow,\n\tSelectControl,\n\tTextControl,\n} from '@wordpress/components';\nimport { useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { trim } from 'lodash';\nimport { ErrorText } from '@nab/components';\nimport { createScopeRule, isUrlFragmentInvalid, isEmpty } from '@nab/utils';\nimport type { ExperimentType, ScopeRule } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME as NAB_EDITOR } from '../../../store/config';\n\nexport type NewRuleFormProps = {\n\treadonly rules: ReadonlyArray< ScopeRule >;\n\treadonly scopeSupport: Required< ExperimentType[ 'supports' ] >[ 'scope' ];\n};\n\nexport const NewRuleForm = ( {\n\trules,\n\tscopeSupport,\n}: NewRuleFormProps ): JSX.Element => {\n\tconst [ type, setType ] = useState< 'partial' | 'exact' >( 'partial' );\n\tconst [ value, setValue ] = useState( '' );\n\tconst { addScopeRules } = useDispatch( NAB_EDITOR );\n\n\tconst addRule = () => {\n\t\tsetValue( '' );\n\t\tif ( 'custom-with-tested-post' === scopeSupport && ! rules.length ) {\n\t\t\taddScopeRules( [\n\t\t\t\tcreateScopeRule( { type: 'tested-post' } ),\n\t\t\t\tcreateScopeRule( { type, value } ),\n\t\t\t] );\n\t\t} else {\n\t\t\taddScopeRules( [ createScopeRule( { type, value } ) ] );\n\t\t} //end if\n\t};\n\n\tconst error = value ? isUrlFragmentInvalid( value ) || '' : '';\n\n\treturn (\n\t\t<div className=\"nab-experiment-scope__new-rule-form\">\n\t\t\t<SelectControl\n\t\t\t\tclassName=\"nab-experiment-scope__new-rule-mode\"\n\t\t\t\tlabel={ _x(\n\t\t\t\t\t'Select URL matching mode',\n\t\t\t\t\t'user',\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t) }\n\t\t\t\tvalue={ type }\n\t\t\t\toptions={ OPTIONS }\n\t\t\t\tonChange={ ( t: 'partial' | 'exact' ) => setType( t ) }\n\t\t\t/>\n\n\t\t\t<TextControl\n\t\t\t\tclassName=\"nab-experiment-scope__new-rule-value\"\n\t\t\t\tlabel={ _x( 'Write a URL', 'user', 'nelio-ab-testing' ) }\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ setValue }\n\t\t\t/>\n\n\t\t\t<ErrorText value={ error } />\n\n\t\t\t<PanelRow className=\"nab-experiment-scope__add-rule-action-container\">\n\t\t\t\t<Button\n\t\t\t\t\tisSecondary\n\t\t\t\t\tonClick={ addRule }\n\t\t\t\t\tdisabled={ isEmpty( trim( value ) ) }\n\t\t\t\t\tclassName=\"nab-experiment-scope__add-rule-action\"\n\t\t\t\t>\n\t\t\t\t\t{ _x( 'Add', 'command', 'nelio-ab-testing' ) }\n\t\t\t\t</Button>\n\t\t\t</PanelRow>\n\t\t</div>\n\t);\n};\n\n// ====\n// DATA\n// ====\n\nconst OPTIONS = [\n\t{\n\t\tvalue: 'partial',\n\t\tlabel: _x(\n\t\t\t'URL contains the expected value',\n\t\t\t'text',\n\t\t\t'nelio-ab-testing'\n\t\t),\n\t},\n\t{\n\t\tvalue: 'exact',\n\t\tlabel: _x(\n\t\t\t'URL exactly matches the expected value',\n\t\t\t'text',\n\t\t\t'nelio-ab-testing'\n\t\t),\n\t},\n];\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport { Button } from '@wordpress/components';\nimport { useDispatch } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { map } from 'lodash';\nimport type { CustomUrlScopeRule, ExperimentType, ScopeRule } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME as NAB_EDITOR } from '../../../store/config';\n\nexport type RuleListProps = {\n\treadonly rules: ReadonlyArray< ScopeRule >;\n\treadonly scopeSupport: Required< ExperimentType[ 'supports' ] >[ 'scope' ];\n};\n\nexport const RuleList = ( {\n\trules,\n\tscopeSupport,\n}: RuleListProps ): JSX.Element => {\n\tconst { removeScopeRules } = useDispatch( NAB_EDITOR );\n\n\tif ( ! rules.length ) {\n\t\treturn (\n\t\t\t<p>\n\t\t\t\t{ 'custom-with-tested-post' === scopeSupport\n\t\t\t\t\t? _x(\n\t\t\t\t\t\t\t'Variants will be visible on all the pages of your website, including that of the tested element.',\n\t\t\t\t\t\t\t'user',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t  )\n\t\t\t\t\t: _x(\n\t\t\t\t\t\t\t'Variants will be visible on all the pages of your website.',\n\t\t\t\t\t\t\t'user',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t  ) }{ ' ' }\n\t\t\t\t{ _x(\n\t\t\t\t\t'If you wish to limit its scope to certain pages only, use the following form to define the URLs in which the test should run.',\n\t\t\t\t\t'user',\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t) }\n\t\t\t</p>\n\t\t);\n\t} //end if\n\n\tconst removeScopeRule = ( id ) => {\n\t\tif (\n\t\t\t'custom-with-tested-post' === scopeSupport &&\n\t\t\t2 === rules.length\n\t\t) {\n\t\t\tremoveScopeRules( map( rules, 'id' ) );\n\t\t} else {\n\t\t\tremoveScopeRules( id );\n\t\t} //end if\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<p>\n\t\t\t\t{ 'custom-with-tested-post' === scopeSupport\n\t\t\t\t\t? _x(\n\t\t\t\t\t\t\t'Variants will be visible only on pages matching the following criteria, as well as on the tested element’s page.',\n\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t  )\n\t\t\t\t\t: _x(\n\t\t\t\t\t\t\t'Variants will be visible only on pages matching the following criteria:',\n\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t  ) }\n\t\t\t</p>\n\n\t\t\t<ul className=\"nab-experiment-scope__rule-list\">\n\t\t\t\t{ rules\n\t\t\t\t\t.filter( isCustomUrlScopeRule )\n\t\t\t\t\t.map( ( { id, attributes: { value, type } } ) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={ id }\n\t\t\t\t\t\t\tclassName=\"nab-experiment-scope__rule-list-item\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"nab-experiment-scope__active-rule-type\">\n\t\t\t\t\t\t\t\t{ 'exact' === type &&\n\t\t\t\t\t\t\t\t\t_x(\n\t\t\t\t\t\t\t\t\t\t'URL is:',\n\t\t\t\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t{ 'partial' === type &&\n\t\t\t\t\t\t\t\t\t_x(\n\t\t\t\t\t\t\t\t\t\t'URL contains:',\n\t\t\t\t\t\t\t\t\t\t'text',\n\t\t\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"nab-experiment-scope__active-rule-value\"\n\t\t\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\t\tclassName=\"nab-experiment-scope__remove-rule-action\"\n\t\t\t\t\t\t\t\tonClick={ () => removeScopeRule( id ) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ _x(\n\t\t\t\t\t\t\t\t\t'Delete',\n\t\t\t\t\t\t\t\t\t'command',\n\t\t\t\t\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) ) }\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\n// =======\n// HELPERS\n// =======\n\nexport const isCustomUrlScopeRule = ( r: ScopeRule ): r is CustomUrlScopeRule =>\n\t'exact' === r.attributes.type || 'partial' === r.attributes.type;\n","/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useEffect, useState } from '@wordpress/element';\n\n/**\n * External dependencies\n */\nimport { find, keyBy, map } from 'lodash';\nimport { STORE_NAME as NAB_ACTIONS } from '@nab/conversion-actions';\nimport { isInTheFuture } from '@nab/date';\nimport { STORE_NAME as NAB_SEGMENTS } from '@nab/segmentation-rules';\n\n/**\n * Internal dependencies\n */\nimport type { Alternative, Experiment, Goal, Segment } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { isTestedElementInvalid, shouldExperimentBeDraft } from './utils';\nimport { useExperimentAttribute } from '../hooks';\nimport { STORE_NAME as NAB_EDITOR } from '../../store/config';\n\nexport const StatusManager = (): null => {\n\tuseStatusUpdateEffect();\n\tuseInvalidControlEffect();\n\treturn null;\n};\n\n// =====\n// HOOKS\n// =====\n\nconst useStatusUpdateEffect = () => {\n\tconst rationale = useDraftRationale();\n\tconst startDate = useExperimentAttribute( 'startDate' )[ 0 ] || '';\n\tconst [ status, setStatus ] = useExperimentAttribute( 'status' );\n\n\tconst { setDraftStatusRationale } = useDispatch( NAB_EDITOR );\n\tconst setStatusAndRationale = (\n\t\tnewStatus: Experiment[ 'status' ],\n\t\tnewRationale?: string\n\t): void => {\n\t\tif ( status.includes( 'paused' ) ) {\n\t\t\tnewStatus = 'draft' === newStatus ? 'paused_draft' : 'paused';\n\t\t} //end if\n\t\tsetStatus( newStatus );\n\t\tsetDraftStatusRationale( newRationale ?? '' );\n\t};\n\n\tuseEffect( () => {\n\t\tif ( 'running' === status ) {\n\t\t\treturn;\n\t\t} //end if\n\n\t\tif ( rationale ) {\n\t\t\tsetStatusAndRationale( 'draft', rationale );\n\t\t\treturn;\n\t\t} //end if\n\n\t\tif ( 'ready' === status ) {\n\t\t\treturn;\n\t\t} //end if\n\n\t\tif ( 'scheduled' === status && ! isInTheFuture( startDate ) ) {\n\t\t\tsetStatusAndRationale( 'ready' );\n\t\t} //end if\n\n\t\tif ( 'scheduled' !== status ) {\n\t\t\tsetStatusAndRationale( 'ready' );\n\t\t} //end if\n\t}, [ rationale, startDate, status ] );\n};\n\nconst useInvalidControlEffect = () => {\n\tconst alternatives = useAlternatives();\n\tconst type = useExperimentAttribute( 'type' )[ 0 ];\n\tconst control = find( alternatives, { id: 'control' } );\n\n\tconst { setTestedElementAsInvalid } = useDispatch( NAB_EDITOR );\n\n\tuseEffect( () => {\n\t\tif ( 'running' !== status ) {\n\t\t\tsetTestedElementAsInvalid(\n\t\t\t\t!! control && isTestedElementInvalid( control, type )\n\t\t\t);\n\t\t} //end if\n\t}, [ control, type ] );\n};\n\nconst useDraftRationale = () => {\n\tconst [ rationale, setRationale ] = useState( '' );\n\n\tconst name = useExperimentAttribute( 'name' )[ 0 ] || '';\n\tconst type = useExperimentAttribute( 'type' )[ 0 ];\n\n\tconst alternatives = useAlternatives();\n\tconst goals = useGoals();\n\tconst segments = useSegments();\n\n\tconst conversionActionTypes = useConversionActionTypes();\n\tconst segmentationRuleTypes = useSegmentationRuleTypes();\n\n\tuseEffect( () => {\n\t\tconst control = find( alternatives, { id: 'control' } ) as Alternative;\n\t\tconst newRationale = shouldExperimentBeDraft(\n\t\t\t{ name, control, alternatives, goals, segments, type },\n\t\t\tconversionActionTypes,\n\t\t\tsegmentationRuleTypes\n\t\t);\n\t\tsetRationale( newRationale || '' );\n\t}, [\n\t\tname,\n\t\ttype,\n\t\tJSON.stringify( alternatives ),\n\t\tJSON.stringify( goals ),\n\t\tJSON.stringify( segments ),\n\t] );\n\n\treturn rationale;\n};\n\nconst useAlternatives = (): ReadonlyArray< Alternative > =>\n\tuseSelect( ( select ) => select( NAB_EDITOR ).getAlternatives() );\n\nconst useGoals = (): ReadonlyArray< Goal > =>\n\tuseSelect( ( select ) => {\n\t\tconst { getGoals, getConversionActions } = select( NAB_EDITOR );\n\t\treturn map( getGoals(), ( goal ) => ( {\n\t\t\t...goal,\n\t\t\tconversionActions: getConversionActions( goal.id ),\n\t\t} ) );\n\t} );\n\nconst useSegments = (): ReadonlyArray< Segment > =>\n\tuseSelect( ( select ) => {\n\t\tconst { getSegments, getSegmentationRules } = select( NAB_EDITOR );\n\t\treturn map( getSegments(), ( segment ) => ( {\n\t\t\t...segment,\n\t\t\tsegmentationRules: getSegmentationRules( segment.id ),\n\t\t} ) );\n\t} );\n\nconst useConversionActionTypes = () =>\n\tuseSelect( ( select ) =>\n\t\tkeyBy( select( NAB_ACTIONS ).getConversionActionTypes() || [], 'name' )\n\t);\n\nconst useSegmentationRuleTypes = () =>\n\tuseSelect( ( select ) =>\n\t\tkeyBy( select( NAB_SEGMENTS ).getSegmentationRuleTypes() || [], 'name' )\n\t);\n","/**\n * WordPress dependencies\n */\nimport { _x, sprintf } from '@wordpress/i18n';\nimport { applyFilters } from '@wordpress/hooks';\n\n/**\n * External dependencies\n */\nimport { trim, values } from 'lodash';\nimport { isEmpty } from '@nab/utils';\nimport type {\n\tAlternative,\n\tConversionActionType,\n\tConversionActionTypeName,\n\tDict,\n\tExperiment,\n\tExperimentTypeName,\n\tGoal,\n\tSegment,\n\tSegmentationRuleType,\n\tSegmentationRuleTypeName,\n} from '@nab/types';\n\ntype ExperimentSummary = Pick<\n\tExperiment,\n\t'name' | 'goals' | 'segments' | 'type'\n> & {\n\treadonly alternatives: ReadonlyArray< Alternative >;\n\treadonly control: Alternative;\n};\n\ntype ConversionActionTypes = Record<\n\tConversionActionTypeName,\n\tConversionActionType\n>;\ntype SegmentationRuleTypes = Record<\n\tSegmentationRuleTypeName,\n\tSegmentationRuleType\n>;\n\nexport function shouldExperimentBeDraft(\n\texperiment: ExperimentSummary,\n\tconversionActionTypes: ConversionActionTypes,\n\tsegmentationRuleTypes: SegmentationRuleTypes\n): string | false {\n\tconst { control, alternatives, goals, segments, name, type } = experiment;\n\n\tif ( ! name ) {\n\t\treturn _x( 'Test is unnamed', 'text', 'nelio-ab-testing' );\n\t} //end if\n\n\tif ( alternatives.length < 2 ) {\n\t\treturn _x(\n\t\t\t'Test doesn’t have any variants',\n\t\t\t'text',\n\t\t\t'nelio-ab-testing'\n\t\t);\n\t} //end if\n\n\tconst errorWithTestedElement = getErrorWithTestedElementIfAny(\n\t\tcontrol.attributes,\n\t\ttype\n\t);\n\tif ( errorWithTestedElement ) {\n\t\treturn errorWithTestedElement;\n\t} //end if\n\n\tconst [ , ...alts ] = alternatives;\n\tconst errorWithAlternative: string | false = alts.reduce(\n\t\t( error, alt, index ) =>\n\t\t\t! error\n\t\t\t\t? getErrorWithAlternativeIfAny( alt.attributes, index, type )\n\t\t\t\t: error,\n\t\tfalse\n\t);\n\tif ( errorWithAlternative ) {\n\t\treturn errorWithAlternative;\n\t} //end if\n\n\tconst errorWithGoals = areGoalsInvalid( goals, conversionActionTypes );\n\tif ( errorWithGoals ) {\n\t\treturn errorWithGoals;\n\t} //end if\n\n\tconst errorWithSegments = areSegmentsInvalid(\n\t\tsegments,\n\t\tsegmentationRuleTypes\n\t);\n\tif ( errorWithSegments ) {\n\t\treturn errorWithSegments;\n\t} //end if\n\n\treturn false;\n} //end shouldExperimentBeDraft()\n\nexport function isTestedElementInvalid(\n\ttestedElement: Alternative,\n\texperimentType: ExperimentTypeName\n): boolean {\n\treturn !! getErrorWithTestedElementIfAny(\n\t\ttestedElement.attributes,\n\t\texperimentType\n\t);\n} //end isTestedElementInvalid()\n\n// =======\n// HELPERS\n// =======\n\nfunction getErrorWithTestedElementIfAny(\n\ttestedElement: Dict,\n\texperimentType: string\n): string | false {\n\tconst isValid =\n\t\t!! testedElement &&\n\t\t! isEmpty( testedElement ) &&\n\t\tvalues( testedElement ).reduce(\n\t\t\t( memo, attribute ) => memo && !! attribute,\n\t\t\ttrue\n\t\t);\n\n\tconst error = ! isValid\n\t\t? _x(\n\t\t\t\t'Test doesn’t specify the tested element',\n\t\t\t\t'text',\n\t\t\t\t'nelio-ab-testing'\n\t\t  )\n\t\t: false;\n\n\treturn applyFilters< string | false >(\n\t\t'nab.isTestedElementInvalid',\n\t\terror,\n\t\ttestedElement,\n\t\texperimentType\n\t);\n} //end getErrorWithTestedElementIfAny()\n\nfunction getErrorWithAlternativeIfAny(\n\talternative: Alternative[ 'attributes' ],\n\tindex: number,\n\texperimentType: ExperimentTypeName\n): string | false {\n\tconst letter = ( i: number ) =>\n\t\tString.fromCharCode( 'B'.charCodeAt( 0 ) + i );\n\treturn applyFilters< string | false >(\n\t\t'nab.isAlternativeInvalid',\n\t\tfalse,\n\t\talternative,\n\t\tletter( index ),\n\t\texperimentType\n\t);\n} //end getErrorWithAlternativeIfAny()\n\nfunction areGoalsInvalid(\n\tgoals: ReadonlyArray< Goal >,\n\tconversionActionTypes: ConversionActionTypes\n): string | false {\n\tif ( ! goals.length ) {\n\t\treturn _x( 'Test doesn’t have any goals', 'text', 'nelio-ab-testing' );\n\t} //end if\n\n\tfor ( let i = 0; i < goals.length; ++i ) {\n\t\tconst goal = goals[ i ];\n\t\tconst errorWithGoal = isGoalInvalid( goal, i, conversionActionTypes );\n\t\tif ( errorWithGoal ) {\n\t\t\treturn errorWithGoal;\n\t\t} //end if\n\t} //end for\n\n\treturn false;\n} //end areGoalsInvalid()\n\nfunction isGoalInvalid(\n\tgoal: Goal,\n\tgoalIndex: number,\n\tconversionActionTypes: ConversionActionTypes\n): string | false {\n\tif ( ! goal.conversionActions.length ) {\n\t\treturn sprintf(\n\t\t\t/* translators: goal name */\n\t\t\t_x(\n\t\t\t\t'%s doesn’t have any conversion actions',\n\t\t\t\t'text',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t),\n\t\t\tgetGoalName( goal, goalIndex )\n\t\t);\n\t} //end if\n\n\tfor ( let i = 0; i < goal.conversionActions.length; ++i ) {\n\t\tconst conversionAction = goal.conversionActions[ i ];\n\t\tconst conversionActionType =\n\t\t\tconversionActionTypes[ conversionAction.type ];\n\t\tif ( ! conversionActionType ) {\n\t\t\treturn sprintf(\n\t\t\t\t/* translators: goal name */\n\t\t\t\t_x(\n\t\t\t\t\t'%s has one or more invalid conversion actions',\n\t\t\t\t\t'text',\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t),\n\t\t\t\tgetGoalName( goal, goalIndex )\n\t\t\t);\n\t\t} //end if\n\n\t\tif (\n\t\t\t! isEmpty(\n\t\t\t\tconversionActionType.validate?.( conversionAction.attributes )\n\t\t\t)\n\t\t) {\n\t\t\treturn sprintf(\n\t\t\t\t/* translators: goal name, as in “Goal 2” or “Default Goal” */\n\t\t\t\t_x(\n\t\t\t\t\t'One or more conversion actions in %s are invalid',\n\t\t\t\t\t'text',\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t),\n\t\t\t\tgetGoalName( goal, goalIndex )\n\t\t\t);\n\t\t} //end if\n\t} //end for\n\n\treturn false;\n} //end isGoalInvalid()\n\nfunction getGoalName( goal: Goal, index: number ): string {\n\tlet goalName = sprintf(\n\t\t/* translators: goal id */\n\t\t_x( 'Goal %d', 'text', 'nelio-ab-testing' ),\n\t\tindex + 1\n\t);\n\tif ( 0 === index ) {\n\t\tgoalName = _x( 'Default Goal', 'text', 'nelio-ab-testing' );\n\t} //end if\n\n\tif ( trim( goal.attributes.name ) ) {\n\t\tgoalName = sprintf(\n\t\t\t/* translators: goal name */\n\t\t\t_x( 'Goal “%s”', 'text', 'nelio-ab-testing' ),\n\t\t\ttrim( goal.attributes.name )\n\t\t);\n\t} //end if\n\n\treturn goalName;\n} //end getGoalName()\n\nfunction areSegmentsInvalid(\n\tsegments: ReadonlyArray< Segment >,\n\tsegmentationRuleTypes: SegmentationRuleTypes\n): string | false {\n\tfor ( let i = 0; i < segments.length; ++i ) {\n\t\tconst segment = segments[ i ];\n\t\tconst errorWithSegment = isSegmentInvalid(\n\t\t\tsegment,\n\t\t\ti,\n\t\t\tsegmentationRuleTypes\n\t\t);\n\t\tif ( errorWithSegment ) {\n\t\t\treturn errorWithSegment;\n\t\t} //end if\n\t} //end for\n\n\treturn false;\n} //end areSegmentsInvalid()\n\nfunction isSegmentInvalid(\n\tsegment: Segment,\n\tsegmentIndex: number,\n\tsegmentationRuleTypes: SegmentationRuleTypes\n) {\n\tif ( ! segment.segmentationRules.length ) {\n\t\treturn sprintf(\n\t\t\t/* translators: segment name */\n\t\t\t_x(\n\t\t\t\t'%s doesn’t have any segmentation rules',\n\t\t\t\t'text',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t),\n\t\t\tgetSegmentName( segment, segmentIndex )\n\t\t);\n\t} //end if\n\n\tfor ( let i = 0; i < segment.segmentationRules.length; ++i ) {\n\t\tconst segmentationRule = segment.segmentationRules[ i ];\n\t\tconst segmentationRuleType =\n\t\t\tsegmentationRuleTypes[ segmentationRule.type ];\n\t\tif ( ! segmentationRuleType ) {\n\t\t\treturn sprintf(\n\t\t\t\t/* translators: segment name */\n\t\t\t\t_x(\n\t\t\t\t\t'%s has one or more invalid segmentation rules',\n\t\t\t\t\t'text',\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t),\n\t\t\t\tgetSegmentName( segment, segmentIndex )\n\t\t\t);\n\t\t} //end if\n\n\t\tif (\n\t\t\t! isEmpty(\n\t\t\t\tsegmentationRuleType.validate?.( segmentationRule.attributes )\n\t\t\t)\n\t\t) {\n\t\t\treturn sprintf(\n\t\t\t\t/* translators: segment name, as in Segment 2” */\n\t\t\t\t_x(\n\t\t\t\t\t'One or more segmentation rules in %s are invalid',\n\t\t\t\t\t'text',\n\t\t\t\t\t'nelio-ab-testing'\n\t\t\t\t),\n\t\t\t\tgetSegmentName( segment, segmentIndex )\n\t\t\t);\n\t\t} //end if\n\t} //end for\n\n\treturn false;\n} //end isSegmentInvalid()\n\nfunction getSegmentName( segment: Segment, index: number ): string {\n\tlet segmentName = sprintf(\n\t\t/* translators: segment id */\n\t\t_x( 'Segment %d', 'text', 'nelio-ab-testing' ),\n\t\tindex + 1\n\t);\n\n\tif ( trim( segment.attributes.name ) ) {\n\t\tsegmentName = sprintf(\n\t\t\t/* translators: segment name */\n\t\t\t_x( 'Segment “%s”', 'text', 'nelio-ab-testing' ),\n\t\t\ttrim( segment.attributes.name )\n\t\t);\n\t} //end if\n\n\treturn segmentName;\n} //end getSegmentName()\n","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport { appendContextualHelp } from '@nab/components';\nimport { STORE_NAME as NAB_DATA } from '@nab/data';\nimport { STORE_NAME as NAB_EXPERIMENTS } from '@nab/experiments';\nimport type { Question, TutorialStep } from '@nab/components';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME as NAB_EDITOR } from './store/config';\n\nexport function renderHelp(): void {\n\tconst typeName = select( NAB_EDITOR ).getExperimentType();\n\tappendContextualHelp( {\n\t\tscreen: `experiment-list:${ typeName }`,\n\t\tquestions,\n\t\twalkthrough: getWalkthrough( typeName ),\n\t} );\n} //end renderHelp()\n\nconst questions: ReadonlyArray< Question > = [\n\t{\n\t\tlabel: _x(\n\t\t\t'What is the original page or post of a test?',\n\t\t\t'text',\n\t\t\t'nelio-ab-testing'\n\t\t),\n\t\tlink: _x(\n\t\t\t'https://neliosoftware.com/testing/help/what-is-the-original-page-or-post-of-a-test/',\n\t\t\t'text',\n\t\t\t'nelio-ab-testing'\n\t\t),\n\t},\n\t{\n\t\tlabel: _x(\n\t\t\t'Why don’t all my posts/pages appear in the selection list when I’m creating a new test?',\n\t\t\t'text',\n\t\t\t'nelio-ab-testing'\n\t\t),\n\t\tlink: _x(\n\t\t\t'https://neliosoftware.com/testing/help/why-dont-all-my-posts-appear-in-the-selection-list/',\n\t\t\t'text',\n\t\t\t'nelio-ab-testing'\n\t\t),\n\t},\n\t{\n\t\tlabel: _x(\n\t\t\t'What is a conversion and what counts as one?',\n\t\t\t'text',\n\t\t\t'nelio-ab-testing'\n\t\t),\n\t\tlink: _x(\n\t\t\t'https://neliosoftware.com/testing/help/what-is-a-conversion/',\n\t\t\t'text',\n\t\t\t'nelio-ab-testing'\n\t\t),\n\t},\n\t{\n\t\tlabel: _x(\n\t\t\t'How can I track conversions occurring in third-party websites?',\n\t\t\t'text',\n\t\t\t'nelio-ab-testing'\n\t\t),\n\t\tlink: _x(\n\t\t\t'https://neliosoftware.com/testing/help/how-can-i-track-conversions-occurring-in-third-party-websites/',\n\t\t\t'text',\n\t\t\t'nelio-ab-testing'\n\t\t),\n\t},\n];\n\n// =======\n// HELPERS\n// =======\n\nfunction getWalkthrough( typeName: string ): ReadonlyArray< TutorialStep > {\n\tconst type = select( NAB_EXPERIMENTS ).getExperimentType( typeName );\n\tconst { isSubscribedTo } = select( NAB_DATA );\n\n\treturn [\n\t\t{\n\t\t\ttitle: _x( 'Test Editor', 'text', 'nelio-ab-testing' ),\n\t\t\tintro: _x(\n\t\t\t\t'Welcome to the Test Editor. Here you’ll be able to select the element you want to test and create one or more variants to find out which one converts the most. As you can see, it’s quite similar to WordPress’ Block Editor: there’s a header, a sidebar, and a main area.',\n\t\t\t\t'user',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttitle: _x( 'Name', 'text', 'nelio-ab-testing' ),\n\t\t\tintro: _x(\n\t\t\t\t'You’ll notice that all test types have a similar user interface. When creating a new test, you’ll first have to name it. Just type in a descriptive name that helps you identify the test in the future.',\n\t\t\t\t'user',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t),\n\t\t\telement: () => document.querySelector( '.nab-experiment-title' ),\n\t\t},\n\t\t{\n\t\t\ttitle: _x( 'Variants', 'text', 'nelio-ab-testing' ),\n\t\t\tintro: _x(\n\t\t\t\t'Next, there’s a “Control Version and Variants” section. Use it to (a) identify the element you want to test and (b) create one or more split testing variants.',\n\t\t\t\t'user',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t),\n\t\t\telement: () =>\n\t\t\t\tdocument.querySelector(\n\t\t\t\t\t'.nab-edit-experiment__alternative-section'\n\t\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttitle: _x( 'Variant A', 'text', 'nelio-ab-testing' ),\n\t\t\tintro: type?.help?.original ?? '',\n\t\t\telement: () =>\n\t\t\t\tdocument.querySelector(\n\t\t\t\t\t'.nab-alternative-list__alternative--original'\n\t\t\t\t),\n\t\t\tactive: () => !! type?.help?.original,\n\t\t},\n\t\t{\n\t\t\ttitle: _x( 'Variant B', 'text', 'nelio-ab-testing' ),\n\t\t\tintro: type?.help?.alternative ?? '',\n\t\t\telement: () =>\n\t\t\t\tdocument.querySelector(\n\t\t\t\t\t'.nab-alternative-list__alternative:not(.nab-alternative-list__alternative--original)'\n\t\t\t\t),\n\t\t\tactive: () =>\n\t\t\t\t!! type?.help?.alternative &&\n\t\t\t\t!! document.querySelector(\n\t\t\t\t\t'.nab-alternative-list__alternative:not(.nab-alternative-list__alternative--original)'\n\t\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttitle: _x( 'Goals', 'text', 'nelio-ab-testing' ),\n\t\t\tintro: _x(\n\t\t\t\t'Split tests help you to improve the conversion rate of your website. Here you can set up the goals a test pursues and the specific conversion actions that, when performed by a visitor, will trigger a conversion.',\n\t\t\t\t'user',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t),\n\t\t\telement: () =>\n\t\t\t\tdocument.querySelector( '.nab-edit-experiment__goal-section' ),\n\t\t\tactive: () => ! type?.supports?.automaticGoalSetup,\n\t\t},\n\t\t{\n\t\t\ttitle: _x( 'Goals', 'text', 'nelio-ab-testing' ),\n\t\t\tintro: _x(\n\t\t\t\t'Split tests help you to improve the conversion rate of your website. With this type of test, the conversion goal and conversion action that might trigger a conversion is already set up by Nelio A/B Testing.',\n\t\t\t\t'user',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t),\n\t\t\telement: () =>\n\t\t\t\tdocument.querySelector( '.nab-edit-experiment__goal-section' ),\n\t\t\tactive: () => !! type?.supports?.automaticGoalSetup,\n\t\t},\n\t\t{\n\t\t\ttitle: _x( 'Actions', 'text', 'nelio-ab-testing' ),\n\t\t\tintro: _x(\n\t\t\t\t'Use these buttons to add the specific conversion actions that might trigger a conversion like, for example, “visiting a page” or “clicking an element on the page.”',\n\t\t\t\t'user',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t),\n\t\t\telement: () =>\n\t\t\t\tdocument.querySelector( '.nab-conversion-action-type-list' ),\n\t\t\tactive: () =>\n\t\t\t\t!! document.querySelector( '.nab-conversion-action-type-list' ),\n\t\t},\n\t\t{\n\t\t\ttitle: _x( 'Segmentation', 'text', 'nelio-ab-testing' ),\n\t\t\tintro: _x(\n\t\t\t\t'If you subscribe to Nelio A/B Testing, you’ll be able to segment your visitors into groups and specify who may or may not participate in a test.',\n\t\t\t\t'user',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t),\n\t\t\telement: () =>\n\t\t\t\tdocument.querySelector(\n\t\t\t\t\t'.nab-edit-experiment__segmentation-section'\n\t\t\t\t),\n\t\t\tactive: () =>\n\t\t\t\t!! document.querySelector(\n\t\t\t\t\t'.nab-edit-experiment-segmentation-section__content--free'\n\t\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttitle: _x( 'Segmentation', 'text', 'nelio-ab-testing' ),\n\t\t\tintro: _x(\n\t\t\t\t'You can segment your audience into different groups and look at the performance of your split test with respect to each group. You can also use segmentation to limit who may or may not participate in a test.',\n\t\t\t\t'user',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t),\n\t\t\telement: () =>\n\t\t\t\tdocument.querySelector(\n\t\t\t\t\t'.nab-edit-experiment__segmentation-section'\n\t\t\t\t),\n\t\t\tactive: () =>\n\t\t\t\t! document.querySelector(\n\t\t\t\t\t'.nab-edit-experiment-segmentation-section__content--free'\n\t\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttitle: _x( 'Status', 'text', 'nelio-ab-testing' ),\n\t\t\tintro: _x(\n\t\t\t\t'Here you can see the current status of your test: once it’s “Ready,” you’ll be able to start it. Also, if you subscribe to our Professional plan, you’ll be able to schedule when a test should be started, as well as to define if and when it should be automatically stopped.',\n\t\t\t\t'user',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t),\n\t\t\telement: () =>\n\t\t\t\tdocument.querySelector( '.nab-experiment-management' ),\n\t\t\tactive: () => ! isSubscribedTo( 'professional' ),\n\t\t},\n\t\t{\n\t\t\ttitle: _x( 'Status', 'text', 'nelio-ab-testing' ),\n\t\t\tintro: _x(\n\t\t\t\t'Here you can see the current status of your test: once it’s “Ready,” you’ll be able to start it. You can also schedule when the test should be started, as well as define a stop condition to automatically stop the test.',\n\t\t\t\t'user',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t),\n\t\t\telement: () =>\n\t\t\t\tdocument.querySelector( '.nab-experiment-management' ),\n\t\t\tactive: () => isSubscribedTo( 'professional' ),\n\t\t},\n\t\t{\n\t\t\ttitle: _x( 'Scope', 'text', 'nelio-ab-testing' ),\n\t\t\tintro: _x(\n\t\t\t\t'By default, this type of test will show up on all pages of your website. You can limit its scope by specifying the URLs in which the test should be visible.',\n\t\t\t\t'user',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t),\n\t\t\telement: () => document.querySelector( '.nab-experiment-scope' ),\n\t\t\tactive: () =>\n\t\t\t\t'custom' === type?.supports?.scope ||\n\t\t\t\t'custom-with-tested-post' === type?.supports?.scope,\n\t\t},\n\t\t{\n\t\t\ttitle: _x( 'Scope', 'text', 'nelio-ab-testing' ),\n\t\t\tintro: _x(\n\t\t\t\t'This type of test applies to a specific element of your website, be it a page, a post, or what. If you enable “Global Consistency,” our plugin will also load the appropriate variant on any page in which the tested element (i.e. its title, featured image, and so on) shows up.',\n\t\t\t\t'user',\n\t\t\t\t'nelio-ab-testing'\n\t\t\t),\n\t\t\telement: () => document.querySelector( '.nab-experiment-scope' ),\n\t\t\tactive: () =>\n\t\t\t\t'tested-post-with-consistency' === type?.supports?.scope,\n\t\t},\n\t];\n} //end getWalkthrough()\n","/**\n * WordPress dependencies\n */\nimport * as React from '@wordpress/element';\nimport '@wordpress/core-data';\nimport { dispatch } from '@wordpress/data';\nimport domReady from '@wordpress/dom-ready';\nimport { render } from '@wordpress/element';\n\n/**\n * External dependencies\n */\nimport { debounce } from 'lodash';\nimport { registerCoreConversionActions } from '@nab/conversion-action-library';\nimport { STORE_NAME as NAB_DATA } from '@nab/data';\nimport { registerCoreExperiments } from '@nab/experiment-library';\nimport { registerCoreSegmentationRules } from '@nab/segmentation-rule-library';\nimport type { Dict, ExperimentId } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { Editor } from './components/editor';\n\nexport * from './store';\nexport * from './components/provider';\nexport * from './components/experiment-name';\nexport * from './components/header';\nexport * from './components/sidebar';\n\nexport function initializeExperimentEditor(\n\tid: string,\n\texperimentId: ExperimentId\n): void {\n\tconst target = document.getElementById( id );\n\tif ( ! target ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn( `Unable to find container node ${ id }.` );\n\t\treturn;\n\t} //end if\n\n\tregisterCoreExperiments();\n\tregisterCoreConversionActions();\n\tregisterCoreSegmentationRules();\n\n\trender( <Editor experimentId={ experimentId } />, target );\n} //end initializeExperimentEditor()\n\n// =======\n// HELPERS\n// =======\n\nfunction fixSidebarDimensions() {\n\tconst height = window.innerHeight;\n\tconst wpAdminBar = document.getElementById( 'wpadminbar' );\n\tconst adminBarHeight = wpAdminBar\n\t\t? wpAdminBar.getBoundingClientRect().height\n\t\t: 0;\n\n\tconst { setPageAttribute } = dispatch( NAB_DATA );\n\tsetPageAttribute( 'sidebarDimensions', {\n\t\ttop: adminBarHeight,\n\t\theight: `${ height - adminBarHeight }px`,\n\t\tapplyFix: 782 <= window.innerWidth, // medium breakpoint\n\t} );\n} //end fixSidebarDimensions()\nwindow.addEventListener( 'resize', debounce( fixSidebarDimensions, 100 ) );\ndomReady( fixSidebarDimensions );\n\n// ==========\n// TYPESCRIPT\n// ==========\n\ndeclare module '@wordpress/hooks' {\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tfunction applyFilters(\n\t\thookName: 'nab.isTestedElementInvalid',\n\t\terror: false | string,\n\t\ttestedElement: Dict,\n\t\texperimentType: string\n\t): void;\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tfunction addFilter(\n\t\thookName: 'nab.isTestedElementInvalid',\n\t\thookFunctionName: string,\n\t\thookFunction: (\n\t\t\terror: false | string,\n\t\t\ttestedElement: Dict,\n\t\t\texperimentType: string\n\t\t) => false | string\n\t): void;\n}\n\ndeclare module '@wordpress/hooks' {\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tfunction applyFilters(\n\t\thookName: 'nab.isAlternativeInvalid',\n\t\terror: false | string,\n\t\talternative: Dict,\n\t\talternativeLetter: string,\n\t\texperimentType: string\n\t);\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tfunction addFilter(\n\t\thookName: 'nab.isAlternativeInvalid',\n\t\thookFunctionName: string,\n\t\thookFunction: (\n\t\t\terror: false | string,\n\t\t\talternative: Dict,\n\t\t\talternativeLetter: string,\n\t\t\texperimentType: string\n\t\t) => false | string\n\t): void;\n}\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\nimport type { Alternative, AlternativeId } from '@nab/types';\n\nexport type AlternativeAction =\n\t| AddAlternatives\n\t| RemoveAlternatives\n\t| ReplaceAlternatives\n\t| UpdateAlternative;\n\nexport function addAlternatives(\n\talternatives: Alternative | ReadonlyArray< Alternative >\n): AddAlternatives {\n\treturn {\n\t\ttype: 'ADD_ALTERNATIVES',\n\t\talternatives: castArray( alternatives ),\n\t};\n} //end addAlternatives()\n\nexport function removeAlternatives(\n\tids: AlternativeId | ReadonlyArray< AlternativeId >\n): RemoveAlternatives {\n\treturn {\n\t\ttype: 'REMOVE_ALTERNATIVES',\n\t\tids: castArray( ids ),\n\t};\n} //end removeAlternatives()\n\nexport function replaceAlternatives(\n\toldIds: ReadonlyArray< AlternativeId >,\n\talternatives: Alternative | ReadonlyArray< Alternative >\n): ReplaceAlternatives {\n\treturn {\n\t\ttype: 'REPLACE_ALTERNATIVES',\n\t\toldIds,\n\t\talternatives: castArray( alternatives ),\n\t};\n} //end replaceAlternatives()\n\nexport function setAlternative(\n\tid: AlternativeId,\n\talternative: Alternative\n): UpdateAlternative {\n\treturn {\n\t\ttype: 'SET_ALTERNATIVE',\n\t\tid,\n\t\talternative,\n\t};\n} //end setAlternative()\n\n// =====\n// TYPES\n// =====\n\ntype AddAlternatives = {\n\treadonly type: 'ADD_ALTERNATIVES';\n\treadonly alternatives: ReadonlyArray< Alternative >;\n};\n\ntype RemoveAlternatives = {\n\treadonly type: 'REMOVE_ALTERNATIVES';\n\treadonly ids: ReadonlyArray< AlternativeId >;\n};\n\ntype ReplaceAlternatives = {\n\treadonly type: 'REPLACE_ALTERNATIVES';\n\treadonly oldIds: ReadonlyArray< AlternativeId >;\n\treadonly alternatives: ReadonlyArray< Alternative >;\n};\n\ntype UpdateAlternative = {\n\treadonly type: 'SET_ALTERNATIVE';\n\treadonly id: AlternativeId;\n\treadonly alternative: Alternative;\n};\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\nimport type { ConversionAction, ConversionActionId, GoalId } from '@nab/types';\n\nexport type CAAction =\n\t| AddConversionActionsIntoGoal\n\t| ReplaceConversionActionsInGoal\n\t| RemoveConversionActionsFromGoal\n\t| UpdateConversionAction;\n\nexport function addConversionActionsIntoGoal(\n\tgoalId: GoalId,\n\tconversionActions: ConversionAction | ReadonlyArray< ConversionAction >\n): AddConversionActionsIntoGoal {\n\treturn {\n\t\ttype: 'ADD_CONVERSION_ACTIONS_INTO_GOAL',\n\t\tgoalId,\n\t\tconversionActions: castArray( conversionActions ),\n\t};\n} //end addConversionActionsIntoGoal()\n\nexport function replaceConversionActionsInGoal(\n\tgoalId: GoalId,\n\tconversionActions: ConversionAction | ReadonlyArray< ConversionAction >\n): ReplaceConversionActionsInGoal {\n\treturn {\n\t\ttype: 'REPLACE_CONVERSION_ACTIONS_IN_GOAL',\n\t\tgoalId,\n\t\tconversionActions: castArray( conversionActions ),\n\t};\n} //end replaceConversionActionsInGoal()\n\nexport function removeConversionActionsFromGoal(\n\tgoalId: GoalId,\n\tconversionActionIds:\n\t\t| ConversionActionId\n\t\t| ReadonlyArray< ConversionActionId >\n): RemoveConversionActionsFromGoal {\n\treturn {\n\t\ttype: 'REMOVE_CONVERSION_ACTIONS_FROM_GOAL',\n\t\tgoalId,\n\t\tconversionActionIds: castArray( conversionActionIds ),\n\t};\n} //end removeConversionActionsFromGoal()\n\nexport function updateConversionAction(\n\tgoalId: GoalId,\n\tconversionActionId: ConversionActionId,\n\tattributes: ConversionAction[ 'attributes' ]\n): UpdateConversionAction {\n\treturn {\n\t\ttype: 'UPDATE_CONVERSION_ACTION',\n\t\tgoalId,\n\t\tconversionActionId,\n\t\tattributes,\n\t};\n} //end updateConversionAction()\n\n// =====\n// TYPES\n// =====\n\ntype AddConversionActionsIntoGoal = {\n\treadonly type: 'ADD_CONVERSION_ACTIONS_INTO_GOAL';\n\treadonly goalId: GoalId;\n\treadonly conversionActions: ReadonlyArray< ConversionAction >;\n};\n\ntype ReplaceConversionActionsInGoal = {\n\treadonly type: 'REPLACE_CONVERSION_ACTIONS_IN_GOAL';\n\treadonly goalId: GoalId;\n\treadonly conversionActions: ReadonlyArray< ConversionAction >;\n};\n\ntype RemoveConversionActionsFromGoal = {\n\treadonly type: 'REMOVE_CONVERSION_ACTIONS_FROM_GOAL';\n\treadonly goalId: GoalId;\n\treadonly conversionActionIds: ReadonlyArray< ConversionActionId >;\n};\n\ntype UpdateConversionAction = {\n\treadonly type: 'UPDATE_CONVERSION_ACTION';\n\treadonly goalId: GoalId;\n\treadonly conversionActionId: ConversionActionId;\n\treadonly attributes: ConversionAction[ 'attributes' ];\n};\n","/**\n * External dependencies\n */\nimport type { Experiment, GoalId, SegmentId } from '@nab/types';\n\nexport type EditorAction =\n\t| SetActiveGoal\n\t| SetActiveSegment\n\t| SetExperimentAsBeingSaved\n\t| SetDraftStatusRationale\n\t| SetExperimentAsRecentlySaved\n\t| SetupEditor\n\t| OpenAlternativePreviewer\n\t| CloseAlternativePreviewer;\n\nexport type SetupEditor = {\n\treadonly type: 'SETUP_EDITOR';\n\treadonly experiment: Experiment;\n};\n\nexport function setupEditor( experiment: Experiment ): SetupEditor {\n\treturn {\n\t\ttype: 'SETUP_EDITOR',\n\t\texperiment,\n\t};\n} //end setupEditor()\n\nexport function setActiveGoal( goalId: GoalId ): SetActiveGoal {\n\treturn {\n\t\ttype: 'SET_ACTIVE_GOAL',\n\t\tgoalId,\n\t};\n} //end setActiveGoal()\n\nexport function setActiveSegment( segmentId: SegmentId ): SetActiveSegment {\n\treturn {\n\t\ttype: 'SET_ACTIVE_SEGMENT',\n\t\tsegmentId,\n\t};\n} //end setActiveSegment()\n\nexport function setExperimentAsBeingSaved(\n\tstatus: boolean\n): SetExperimentAsBeingSaved {\n\treturn {\n\t\ttype: 'SET_EXPERIMENT_AS_BEING_SAVED',\n\t\tstatus,\n\t};\n} //end setExperimentAsBeingSaved()\n\nexport function setDraftStatusRationale(\n\trationale: string\n): SetDraftStatusRationale {\n\treturn {\n\t\ttype: 'SET_DRAFT_STATUS_RATIONALE',\n\t\trationale,\n\t};\n} //end setDraftStatusRationale()\n\nexport function setExperimentAsRecentlySaved(): SetExperimentAsRecentlySaved {\n\treturn {\n\t\ttype: 'SET_EXPERIMENT_AS_RECENTLY_SAVED',\n\t};\n} //end setExperimentAsBeingSaved()\n\nexport function openAlternativePreviewer(\n\turl: string\n): OpenAlternativePreviewer {\n\treturn {\n\t\ttype: 'OPEN_ALTERNATIVE_PREVIEWER',\n\t\turl,\n\t};\n} //end openAlternativePreviewer()\n\nexport function closeAlternativePreviewer(): CloseAlternativePreviewer {\n\treturn {\n\t\ttype: 'CLOSE_ALTERNATIVE_PREVIEWER',\n\t};\n} //end closeAlternativePreviewer()\n\n// =====\n// TYPES\n// =====\n\ntype SetActiveGoal = {\n\treadonly type: 'SET_ACTIVE_GOAL';\n\treadonly goalId: GoalId;\n};\n\ntype SetActiveSegment = {\n\treadonly type: 'SET_ACTIVE_SEGMENT';\n\treadonly segmentId: SegmentId;\n};\n\ntype SetExperimentAsBeingSaved = {\n\treadonly type: 'SET_EXPERIMENT_AS_BEING_SAVED';\n\treadonly status: boolean;\n};\n\ntype SetDraftStatusRationale = {\n\treadonly type: 'SET_DRAFT_STATUS_RATIONALE';\n\treadonly rationale: string;\n};\n\ntype SetExperimentAsRecentlySaved = {\n\treadonly type: 'SET_EXPERIMENT_AS_RECENTLY_SAVED';\n};\n\ntype OpenAlternativePreviewer = {\n\treadonly type: 'OPEN_ALTERNATIVE_PREVIEWER';\n\treadonly url: string;\n};\n\ntype CloseAlternativePreviewer = {\n\treadonly type: 'CLOSE_ALTERNATIVE_PREVIEWER';\n};\n","/**\n * Internal dependencies\n */\nimport type { ExperimentData, HeatmapAttributes } from '../types';\n\nexport type ExperimentDataAction =\n\t| SetExperimentData\n\t| SetTestedElementAsInvalid;\n\nexport function setExperimentData(\n\tattributes: Partial< ExperimentData >\n): SetExperimentData {\n\treturn {\n\t\ttype: 'UPDATE_EXPERIMENT_DATA',\n\t\tattributes,\n\t};\n} //end setExperimentData()\n\nexport function setHeatmapData(\n\tattributes: Partial< HeatmapAttributes >\n): SetExperimentData {\n\treturn {\n\t\ttype: 'UPDATE_EXPERIMENT_DATA',\n\t\tattributes,\n\t};\n} //end setExperimentData()\n\nexport function setTestedElementAsInvalid(\n\tinvalid: boolean\n): SetTestedElementAsInvalid {\n\treturn {\n\t\ttype: 'SET_TESTED_ELEMENT_AS_INVALID',\n\t\tinvalid,\n\t};\n} //end setTestedElementAsInvalid()\n\n// =====\n// TYPES\n// =====\n\ntype SetExperimentData = {\n\treadonly type: 'UPDATE_EXPERIMENT_DATA';\n\treadonly attributes: Partial< ExperimentData >;\n};\n\ntype SetTestedElementAsInvalid = {\n\treadonly type: 'SET_TESTED_ELEMENT_AS_INVALID';\n\treadonly invalid: boolean;\n};\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\nimport type { Goal, GoalId } from '@nab/types';\n\nexport type GoalAction = AddGoals | RemoveGoals | UpdateGoal;\n\nexport function addGoals( goals: Goal | ReadonlyArray< Goal > ): AddGoals {\n\treturn {\n\t\ttype: 'ADD_GOALS',\n\t\tgoals: castArray( goals ),\n\t};\n} //end addGoals()\n\nexport function removeGoals(\n\tids: GoalId | ReadonlyArray< GoalId >\n): RemoveGoals {\n\treturn {\n\t\ttype: 'REMOVE_GOALS',\n\t\tids: castArray( ids ),\n\t};\n} //end removeGoals()\n\nexport function updateGoal(\n\tgoalId: GoalId,\n\tattributes: Partial< Goal[ 'attributes' ] >\n): UpdateGoal {\n\treturn {\n\t\ttype: 'UPDATE_GOAL',\n\t\tgoalId,\n\t\tattributes,\n\t};\n} //end updateGoal()\n\n// =====\n// TYPES\n// =====\n\ntype AddGoals = {\n\treadonly type: 'ADD_GOALS';\n\treadonly goals: ReadonlyArray< Goal >;\n};\n\ntype RemoveGoals = {\n\treadonly type: 'REMOVE_GOALS';\n\treadonly ids: ReadonlyArray< GoalId >;\n};\n\ntype UpdateGoal = {\n\treadonly type: 'UPDATE_GOAL';\n\treadonly goalId: GoalId;\n\treadonly attributes: Partial< Goal[ 'attributes' ] >;\n};\n","export * from './alternatives';\nexport * from './conversion-actions';\nexport * from './editor';\nexport * from './experiment-data';\nexport * from './goals';\nexport * from './scope';\nexport * from './segmentation-rules';\nexport * from './segments';\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\nimport type { ScopeRule, ScopeRuleId } from '@nab/types';\n\nexport type ScopeAction = AddScopeRules | RemoveScopeRules;\n\nexport function addScopeRules(\n\trules: ScopeRule | ReadonlyArray< ScopeRule >\n): AddScopeRules {\n\treturn {\n\t\ttype: 'ADD_SCOPE_RULES',\n\t\trules: castArray( rules ),\n\t};\n} //end addScopeRules()\n\nexport function removeScopeRules(\n\tids: ScopeRuleId | ReadonlyArray< ScopeRuleId >\n): RemoveScopeRules {\n\treturn {\n\t\ttype: 'REMOVE_SCOPE_RULES',\n\t\tids: castArray( ids ),\n\t};\n} //end removeScopeRules()\n\n// =====\n// TYPES\n// =====\n\ntype AddScopeRules = {\n\treadonly type: 'ADD_SCOPE_RULES';\n\treadonly rules: ReadonlyArray< ScopeRule >;\n};\n\ntype RemoveScopeRules = {\n\treadonly type: 'REMOVE_SCOPE_RULES';\n\treadonly ids: ReadonlyArray< ScopeRuleId >;\n};\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\nimport type {\n\tSegmentId,\n\tSegmentationRule,\n\tSegmentationRuleId,\n} from '@nab/types';\n\nexport type SRAction =\n\t| AddSegmentationRulesIntoSegment\n\t| ReplaceSegmentationRulesInSegment\n\t| RemoveSegmentationRulesFromSegment\n\t| UpdateSegmentationRule;\n\nexport function addSegmentationRulesIntoSegment(\n\tsegmentId: SegmentId,\n\tsegmentationRules: SegmentationRule | ReadonlyArray< SegmentationRule >\n): AddSegmentationRulesIntoSegment {\n\treturn {\n\t\ttype: 'ADD_SEGMENTATION_RULES_INTO_SEGMENT',\n\t\tsegmentId,\n\t\tsegmentationRules: castArray( segmentationRules ),\n\t};\n} //end addSegmentationRulesIntoSegment()\n\nexport function replaceSegmentationRulesInSegment(\n\tsegmentId: SegmentId,\n\tsegmentationRules: SegmentationRule | ReadonlyArray< SegmentationRule >\n): ReplaceSegmentationRulesInSegment {\n\treturn {\n\t\ttype: 'REPLACE_SEGMENTATION_RULES_IN_SEGMENT',\n\t\tsegmentId,\n\t\tsegmentationRules: castArray( segmentationRules ),\n\t};\n} //end replaceSegmentationRulesInSegment()\n\nexport function removeSegmentationRulesFromSegment(\n\tsegmentId: SegmentId,\n\tsegmentationRuleIds:\n\t\t| SegmentationRuleId\n\t\t| ReadonlyArray< SegmentationRuleId >\n): RemoveSegmentationRulesFromSegment {\n\treturn {\n\t\ttype: 'REMOVE_SEGMENTATION_RULES_FROM_SEGMENT',\n\t\tsegmentId,\n\t\tsegmentationRuleIds: castArray( segmentationRuleIds ),\n\t};\n} //end removeSegmentationRulesFromSegment()\n\nexport function updateSegmentationRule(\n\tsegmentId: SegmentId,\n\tsegmentationRuleId: SegmentationRuleId,\n\tattributes: Partial< SegmentationRule[ 'attributes' ] >\n): UpdateSegmentationRule {\n\treturn {\n\t\ttype: 'UPDATE_SEGMENTATION_RULE',\n\t\tsegmentId,\n\t\tsegmentationRuleId,\n\t\tattributes,\n\t};\n} //end updateSegmentationRule()\n\n// =====\n// TYPES\n// =====\n\ntype AddSegmentationRulesIntoSegment = {\n\treadonly type: 'ADD_SEGMENTATION_RULES_INTO_SEGMENT';\n\treadonly segmentId: SegmentId;\n\treadonly segmentationRules: ReadonlyArray< SegmentationRule >;\n};\n\ntype ReplaceSegmentationRulesInSegment = {\n\treadonly type: 'REPLACE_SEGMENTATION_RULES_IN_SEGMENT';\n\treadonly segmentId: SegmentId;\n\treadonly segmentationRules: ReadonlyArray< SegmentationRule >;\n};\n\ntype RemoveSegmentationRulesFromSegment = {\n\treadonly type: 'REMOVE_SEGMENTATION_RULES_FROM_SEGMENT';\n\treadonly segmentId: SegmentId;\n\treadonly segmentationRuleIds: ReadonlyArray< SegmentationRuleId >;\n};\n\ntype UpdateSegmentationRule = {\n\treadonly type: 'UPDATE_SEGMENTATION_RULE';\n\treadonly segmentId: SegmentId;\n\treadonly segmentationRuleId: SegmentationRuleId;\n\treadonly attributes: Partial< SegmentationRule[ 'attributes' ] >;\n};\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\nimport type { Segment, SegmentId } from '@nab/types';\n\nexport type SegmentAction = AddSegments | RemoveSegments | UpdateSegment;\n\nexport function addSegments(\n\tsegments: Segment | ReadonlyArray< Segment >\n): AddSegments {\n\treturn {\n\t\ttype: 'ADD_SEGMENTS',\n\t\tsegments: castArray( segments ),\n\t};\n} //end addSegments()\n\nexport function removeSegments(\n\tids: SegmentId | ReadonlyArray< SegmentId >\n): RemoveSegments {\n\treturn {\n\t\ttype: 'REMOVE_SEGMENTS',\n\t\tids: castArray( ids ),\n\t};\n} //end removeSegments()\n\nexport function updateSegment(\n\tsegmentId: SegmentId,\n\tattributes: Partial< Segment[ 'attributes' ] >\n): UpdateSegment {\n\treturn {\n\t\ttype: 'UPDATE_SEGMENT',\n\t\tsegmentId,\n\t\tattributes,\n\t};\n} //end updateSegment()\n\n// =====\n// TYPES\n// =====\n\ntype AddSegments = {\n\treadonly type: 'ADD_SEGMENTS';\n\treadonly segments: ReadonlyArray< Segment >;\n};\n\ntype RemoveSegments = {\n\treadonly type: 'REMOVE_SEGMENTS';\n\treadonly ids: ReadonlyArray< SegmentId >;\n};\n\ntype UpdateSegment = {\n\treadonly type: 'UPDATE_SEGMENT';\n\treadonly segmentId: SegmentId;\n\treadonly attributes: Partial< Segment[ 'attributes' ] >;\n};\n","/**\n * Internal dependencies\n */\nimport type { State } from './types';\n\nexport const STORE_NAME = 'nab/editor';\n\nexport const INIT_STATE: State = {\n\teditor: {\n\t\tactiveGoalId: '',\n\t\tactiveSegmentId: '',\n\t\talternativePreviewerUrl: '',\n\t\tdraftStatusRationale: '',\n\t\thasExperimentBeenRecentlySaved: false,\n\t\tisExperimentBeingSaved: false,\n\t},\n\n\texperiment: {\n\t\talternatives: {\n\t\t\tbyId: {},\n\t\t\tallIds: [],\n\t\t},\n\n\t\tconversionActions: {},\n\n\t\tdata: {\n\t\t\tid: 0,\n\t\t\ttype: '',\n\t\t\tstatus: 'draft',\n\t\t\tname: '',\n\t\t\tdescription: '',\n\t\t\tstartDate: '',\n\t\t\tendDate: '',\n\t\t\tendMode: 'manual',\n\t\t\tendValue: 0,\n\t\t\tisTestedElementInvalid: false,\n\t\t\tlinks: {\n\t\t\t\tedit: '',\n\t\t\t\tpreview: '',\n\t\t\t},\n\t\t},\n\n\t\tgoals: {},\n\n\t\tscope: {},\n\n\t\tsegmentationRules: {},\n\n\t\tsegments: {},\n\t},\n};\n","/**\n * WordPress dependencies\n */\nimport { registerStore, controls } from '@wordpress/data';\n\n/**\n * External dependencies\n */\nimport type {\n\tAlternative,\n\tDict,\n\tMaybe,\n\tOmitFirstArgs,\n\tPromisifyReturnTypes,\n\tRemoveReturnTypes,\n} from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as realActions from './actions';\nimport * as sideEffects from './side-effects/actions';\nimport { STORE_NAME } from './config';\n\nexport { STORE_NAME } from './config';\n\nconst actions = { ...realActions, ...sideEffects };\n\nregisterStore( STORE_NAME, {\n\treducer,\n\tcontrols,\n\t// eslint-disable-next-line\n\tactions: actions as any,\n\tselectors,\n} );\n\n// ==========\n// TYPESCRIPT\n// ==========\n\nimport type { ExperimentAttributes, HeatmapAttributes } from './types';\n\ntype Actions = RemoveReturnTypes< typeof realActions > &\n\tPromisifyReturnTypes< RemoveReturnTypes< typeof sideEffects > >;\n\n// Helper function to define `getAlterantive` type properly.\nfunction ga< A extends Dict = Dict >( id: 'control' ): Alternative< A >;\nfunction ga< A extends Dict = Dict >( id: string ): Maybe< Alternative< A > >;\nfunction ga< A extends Dict = Dict >( id: string ): Maybe< Alternative< A > > {\n\treturn void id;\n}\n\ntype Selectors = OmitFirstArgs<\n\tOmit<\n\t\ttypeof selectors,\n\t\t'getAlternative' | 'getExperimentAttribute' | 'getHeatmapAttribute'\n\t>\n> & {\n\treadonly getAlternative: typeof ga;\n\treadonly getExperimentAttribute: < K extends keyof ExperimentAttributes >(\n\t\tattribute: K\n\t) => ExperimentAttributes[ K ];\n\treadonly getHeatmapAttribute: < K extends keyof HeatmapAttributes >(\n\t\tattribute: K\n\t) => Maybe< HeatmapAttributes[ K ] >;\n};\n\ndeclare module '@wordpress/data' {\n\tfunction dispatch( key: typeof STORE_NAME ): Actions;\n\tfunction select( key: typeof STORE_NAME ): Selectors;\n}\n","/**\n * External dependencies\n */\nimport { difference, keyBy, map, omit } from 'lodash';\nimport { isEmpty } from '@nab/utils';\nimport type { AnyAction } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { INIT_STATE as IS } from '../config';\n\nimport type { State as FullState } from '../types';\ntype State = FullState[ 'experiment' ][ 'alternatives' ];\n\nimport type { AlternativeAction } from '../actions/alternatives';\nimport type { SetupEditor } from '../actions/editor';\ntype Action = AlternativeAction | SetupEditor;\n\nconst INIT_STATE = IS.experiment.alternatives;\n\nexport function alternatives( state = INIT_STATE, action: AnyAction ): State {\n\treturn actualReducer( state, action as Action ) ?? state;\n} //end alternatives()\n\nfunction actualReducer( state: State, action: Action ): State {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_ALTERNATIVES':\n\t\t\treturn {\n\t\t\t\tbyId: {\n\t\t\t\t\t...state.byId,\n\t\t\t\t\t...keyBy( action.alternatives, 'id' ),\n\t\t\t\t},\n\t\t\t\tallIds: [\n\t\t\t\t\t...state.allIds,\n\t\t\t\t\t...map( action.alternatives, 'id' ),\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase 'REMOVE_ALTERNATIVES':\n\t\t\treturn {\n\t\t\t\tbyId: omit( state.byId, action.ids ),\n\t\t\t\tallIds: difference( state.allIds, action.ids ),\n\t\t\t};\n\n\t\tcase 'REPLACE_ALTERNATIVES':\n\t\t\treturn {\n\t\t\t\tbyId: {\n\t\t\t\t\t...omit( state.byId, action.oldIds ),\n\t\t\t\t\t...keyBy( action.alternatives, 'id' ),\n\t\t\t\t},\n\t\t\t\tallIds: [\n\t\t\t\t\t...difference( state.allIds, action.oldIds ),\n\t\t\t\t\t...map( action.alternatives, 'id' ),\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase 'SET_ALTERNATIVE':\n\t\t\tif ( ! action.alternative || isEmpty( action.alternative ) ) {\n\t\t\t\treturn state;\n\t\t\t} //end if\n\n\t\t\tif ( isEmpty( state.byId[ action.id ] ) ) {\n\t\t\t\treturn state;\n\t\t\t} //end if\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbyId: {\n\t\t\t\t\t...state.byId,\n\t\t\t\t\t[ action.id ]: action.alternative,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase 'SETUP_EDITOR':\n\t\t\tif ( 'nab/heatmap' === action.experiment.type ) {\n\t\t\t\treturn INIT_STATE;\n\t\t\t} //end if\n\n\t\t\treturn {\n\t\t\t\tbyId: keyBy( action.experiment.alternatives, 'id' ),\n\t\t\t\tallIds: map( action.experiment.alternatives, 'id' ),\n\t\t\t};\n\t} //end switch\n} //end actualReducer()\n","/**\n * External dependencies\n */\nimport { keyBy, omit } from 'lodash';\nimport type { AnyAction } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { INIT_STATE as IS } from '../config';\n\nimport type { State as FullState } from '../types';\ntype State = FullState[ 'experiment' ][ 'conversionActions' ];\n\nimport type { CAAction } from '../actions/conversion-actions';\nimport type { SetupEditor } from '../actions/editor';\ntype Action = CAAction | SetupEditor;\n\nconst INIT_STATE = IS.experiment.conversionActions;\n\nexport function conversionActions(\n\tstate = INIT_STATE,\n\taction: AnyAction\n): State {\n\treturn actualReducer( state, action as Action ) ?? state;\n} //end conversionActions()\n\nfunction actualReducer( state: State, action: Action ): State {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_CONVERSION_ACTIONS_INTO_GOAL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.goalId ]: {\n\t\t\t\t\t...state[ action.goalId ],\n\t\t\t\t\t...keyBy( action.conversionActions, 'id' ),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase 'REPLACE_CONVERSION_ACTIONS_IN_GOAL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.goalId ]: {\n\t\t\t\t\t...keyBy( action.conversionActions, 'id' ),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase 'UPDATE_CONVERSION_ACTION': {\n\t\t\tconst goal = state[ action.goalId ];\n\t\t\tif ( ! goal ) {\n\t\t\t\treturn state;\n\t\t\t} //end if\n\n\t\t\tconst oldConversionAction = goal[ action.conversionActionId ];\n\t\t\tif ( ! oldConversionAction ) {\n\t\t\t\treturn state;\n\t\t\t} //end if\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.goalId ]: {\n\t\t\t\t\t...goal,\n\t\t\t\t\t[ action.conversionActionId ]: {\n\t\t\t\t\t\t...oldConversionAction,\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t...oldConversionAction.attributes,\n\t\t\t\t\t\t\t...action.attributes,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase 'REMOVE_CONVERSION_ACTIONS_FROM_GOAL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.goalId ]: omit(\n\t\t\t\t\tstate[ action.goalId ],\n\t\t\t\t\taction.conversionActionIds\n\t\t\t\t),\n\t\t\t};\n\n\t\tcase 'SETUP_EDITOR':\n\t\t\tif ( 'nab/heatmap' === action.experiment.type ) {\n\t\t\t\treturn {};\n\t\t\t} //end if\n\n\t\t\treturn action.experiment.goals.reduce( ( memo, goal ) => {\n\t\t\t\tmemo[ goal.id ] = keyBy( goal.conversionActions, 'id' );\n\t\t\t\treturn memo;\n\t\t\t}, {} );\n\t} //end switch\n} //end actualReducer()\n","/**\n * Internal dependencies\n */\nimport { INIT_STATE as IS } from '../config';\n\n/**\n * External dependencies\n */\nimport type { AnyAction } from '@nab/types';\n\nimport type { State as FullState } from '../types';\ntype State = FullState[ 'editor' ];\n\nimport type { EditorAction as Action } from '../actions/editor';\n\nconst INIT_STATE = IS.editor;\n\nexport function editor( state = INIT_STATE, action: AnyAction ): State {\n\tstate = { ...state, hasExperimentBeenRecentlySaved: false };\n\treturn actualReducer( state, action as Action ) ?? state;\n} //end editor()\n\nfunction actualReducer( state: State, action: Action ): State {\n\tswitch ( action.type ) {\n\t\tcase 'SET_ACTIVE_GOAL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactiveGoalId: action.goalId,\n\t\t\t};\n\n\t\tcase 'SET_ACTIVE_SEGMENT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactiveSegmentId: action.segmentId,\n\t\t\t};\n\n\t\tcase 'SET_EXPERIMENT_AS_BEING_SAVED':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisExperimentBeingSaved: !! action.status,\n\t\t\t};\n\n\t\tcase 'SET_EXPERIMENT_AS_RECENTLY_SAVED':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thasExperimentBeenRecentlySaved: true,\n\t\t\t};\n\n\t\tcase 'SET_DRAFT_STATUS_RATIONALE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraftStatusRationale: action.rationale,\n\t\t\t};\n\n\t\tcase 'OPEN_ALTERNATIVE_PREVIEWER':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\talternativePreviewerUrl: action.url,\n\t\t\t};\n\n\t\tcase 'CLOSE_ALTERNATIVE_PREVIEWER':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\talternativePreviewerUrl: '',\n\t\t\t};\n\n\t\tcase 'SETUP_EDITOR':\n\t\t\treturn state;\n\t} //end switch\n} //end actualReducer()\n","/**\n * External dependencies\n */\nimport { omit } from 'lodash';\nimport type { AnyAction } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { INIT_STATE as IS } from '../config';\n\nimport type { State as FullState } from '../types';\ntype State = FullState[ 'experiment' ][ 'data' ];\n\nimport type { ExperimentDataAction } from '../actions/experiment-data';\nimport type { SetupEditor } from '../actions/editor';\ntype Action = ExperimentDataAction | SetupEditor;\n\nconst INIT_STATE = IS.experiment.data;\n\nexport function data( state = INIT_STATE, action: AnyAction ): State {\n\treturn actualReducer( state, action as Action ) ?? state;\n} //end data()\n\nfunction actualReducer( state: State, action: Action ): State {\n\tswitch ( action.type ) {\n\t\tcase 'UPDATE_EXPERIMENT_DATA':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.attributes,\n\t\t\t};\n\n\t\tcase 'SET_TESTED_ELEMENT_AS_INVALID':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisTestedElementInvalid: !! action.invalid,\n\t\t\t};\n\n\t\tcase 'SETUP_EDITOR':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...omit( action.experiment, [\n\t\t\t\t\t'alternatives',\n\t\t\t\t\t'goals',\n\t\t\t\t\t'scope',\n\t\t\t\t\t'segments',\n\t\t\t\t] ),\n\t\t\t};\n\t} //end switch\n} //end actualReducer()\n","/**\n * External dependencies\n */\nimport { keyBy, omit } from 'lodash';\nimport type { AnyAction } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { INIT_STATE as IS } from '../config';\n\nimport type { State as FullState } from '../types';\ntype State = FullState[ 'experiment' ][ 'goals' ];\n\nimport type { GoalAction } from '../actions/goals';\nimport type { SetupEditor } from '../actions/editor';\ntype Action = GoalAction | SetupEditor;\n\nconst INIT_STATE = IS.experiment.goals;\n\nexport function goals( state = INIT_STATE, action: AnyAction ): State {\n\treturn actualReducer( state, action as Action ) ?? state;\n} //end goals()\n\nfunction actualReducer( state: State, action: Action ): State {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_GOALS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...keyBy( action.goals, 'id' ),\n\t\t\t};\n\n\t\tcase 'UPDATE_GOAL':\n\t\t\tif ( ! state[ action.goalId ] ) {\n\t\t\t\treturn state;\n\t\t\t} //end if\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.goalId ]: {\n\t\t\t\t\t...state[ action.goalId ],\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t...state[ action.goalId ].attributes,\n\t\t\t\t\t\t...action.attributes,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase 'REMOVE_GOALS':\n\t\t\treturn omit( state, action.ids );\n\n\t\tcase 'SETUP_EDITOR':\n\t\t\tif ( 'nab/heatmap' === action.experiment.type ) {\n\t\t\t\treturn {};\n\t\t\t} //end if\n\n\t\t\treturn keyBy(\n\t\t\t\taction.experiment.goals.map( ( g ) =>\n\t\t\t\t\tomit( g, 'conversionActions' )\n\t\t\t\t),\n\t\t\t\t'id'\n\t\t\t);\n\t} //end switch\n} //end actualReducer()\n","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { editor } from './editor';\nimport { alternatives } from './alternatives';\nimport { conversionActions } from './conversion-actions';\nimport { data } from './experiment-data';\nimport { goals } from './goals';\nimport { scope } from './scope';\nimport { segmentationRules } from './segmentation-rules';\nimport { segments } from './segments';\n\nexport default combineReducers( {\n\teditor,\n\texperiment: combineReducers( {\n\t\talternatives,\n\t\tconversionActions,\n\t\tdata,\n\t\tgoals,\n\t\tscope,\n\t\tsegmentationRules,\n\t\tsegments,\n\t} ),\n} );\n","/**\n * External dependencies\n */\nimport { keyBy, omit } from 'lodash';\nimport type { AnyAction } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { INIT_STATE as IS } from '../config';\n\nimport type { State as FullState } from '../types';\ntype State = FullState[ 'experiment' ][ 'scope' ];\n\nimport type { ScopeAction } from '../actions/scope';\nimport type { SetupEditor } from '../actions/editor';\ntype Action = ScopeAction | SetupEditor;\n\nconst INIT_STATE = IS.experiment.scope;\n\nexport function scope( state = INIT_STATE, action: AnyAction ): State {\n\treturn actualReducer( state, action as Action ) ?? state;\n} //end scope()\n\nfunction actualReducer( state: State, action: Action ): State {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_SCOPE_RULES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...keyBy( action.rules, 'id' ),\n\t\t\t};\n\n\t\tcase 'REMOVE_SCOPE_RULES':\n\t\t\treturn omit( state, action.ids );\n\n\t\tcase 'SETUP_EDITOR':\n\t\t\tif ( 'nab/heatmap' === action.experiment.type ) {\n\t\t\t\treturn {};\n\t\t\t} //end if\n\n\t\t\treturn keyBy( action.experiment.scope, 'id' );\n\t} //end switch\n} //end actualReducer()\n","/**\n * External dependencies\n */\nimport { keyBy, omit } from 'lodash';\nimport type { AnyAction } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { INIT_STATE as IS } from '../config';\n\nimport type { State as FullState } from '../types';\ntype State = FullState[ 'experiment' ][ 'segmentationRules' ];\n\nimport type { SRAction } from '../actions/segmentation-rules';\nimport type { SetupEditor } from '../actions/editor';\ntype Action = SRAction | SetupEditor;\n\nconst INIT_STATE = IS.experiment.segmentationRules;\n\nexport function segmentationRules(\n\tstate = INIT_STATE,\n\taction: AnyAction\n): State {\n\treturn actualReducer( state, action as Action ) ?? state;\n} //end segmentationRules()\n\nfunction actualReducer( state: State, action: Action ): State {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_SEGMENTATION_RULES_INTO_SEGMENT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.segmentId ]: {\n\t\t\t\t\t...state[ action.segmentId ],\n\t\t\t\t\t...keyBy( action.segmentationRules, 'id' ),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase 'REPLACE_SEGMENTATION_RULES_IN_SEGMENT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.segmentId ]: {\n\t\t\t\t\t...keyBy( action.segmentationRules, 'id' ),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase 'UPDATE_SEGMENTATION_RULE': {\n\t\t\tconst segment = state[ action.segmentId ];\n\t\t\tif ( ! segment ) {\n\t\t\t\treturn state;\n\t\t\t} //end if\n\n\t\t\tconst oldSegmentationRule = segment[ action.segmentationRuleId ];\n\t\t\tif ( ! oldSegmentationRule ) {\n\t\t\t\treturn state;\n\t\t\t} //end if\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.segmentId ]: {\n\t\t\t\t\t...segment,\n\t\t\t\t\t[ action.segmentationRuleId ]: {\n\t\t\t\t\t\t...oldSegmentationRule,\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t...oldSegmentationRule.attributes,\n\t\t\t\t\t\t\t...action.attributes,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase 'REMOVE_SEGMENTATION_RULES_FROM_SEGMENT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.segmentId ]: omit(\n\t\t\t\t\tstate[ action.segmentId ],\n\t\t\t\t\taction.segmentationRuleIds\n\t\t\t\t),\n\t\t\t};\n\n\t\tcase 'SETUP_EDITOR':\n\t\t\tif ( 'nab/heatmap' === action.experiment.type ) {\n\t\t\t\treturn {};\n\t\t\t} //end if\n\n\t\t\treturn action.experiment.segments.reduce( ( memo, segment ) => {\n\t\t\t\tmemo[ segment.id ] = keyBy( segment.segmentationRules, 'id' );\n\t\t\t\treturn memo;\n\t\t\t}, {} );\n\t} //end switch\n} //end actualReducer()\n","/**\n * External dependencies\n */\nimport { keyBy, omit } from 'lodash';\nimport type { AnyAction } from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { INIT_STATE as IS } from '../config';\n\nimport type { State as FullState } from '../types';\ntype State = FullState[ 'experiment' ][ 'segments' ];\n\nimport type { SegmentAction } from '../actions/segments';\nimport type { SetupEditor } from '../actions/editor';\ntype Action = SegmentAction | SetupEditor;\n\nconst INIT_STATE = IS.experiment.segments;\n\nexport function segments( state = INIT_STATE, action: AnyAction ): State {\n\treturn actualReducer( state, action as Action ) ?? state;\n} //end segments()\n\nfunction actualReducer( state: State, action: Action ): State {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_SEGMENTS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...keyBy( action.segments, 'id' ),\n\t\t\t};\n\n\t\tcase 'UPDATE_SEGMENT': {\n\t\t\tconst oldSegment = state[ action.segmentId ];\n\t\t\tif ( ! oldSegment ) {\n\t\t\t\treturn state;\n\t\t\t} //end if\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.segmentId ]: {\n\t\t\t\t\t...oldSegment,\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t...oldSegment.attributes,\n\t\t\t\t\t\t...action.attributes,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase 'REMOVE_SEGMENTS':\n\t\t\treturn omit( state, action.ids );\n\n\t\tcase 'SETUP_EDITOR': {\n\t\t\tif ( 'nab/heatmap' === action.experiment.type ) {\n\t\t\t\treturn {};\n\t\t\t} //end if\n\n\t\t\tconst initialSegments = action.experiment.segments.map(\n\t\t\t\t( segment ) => omit( segment, 'segmentationRules' )\n\t\t\t);\n\t\t\treturn keyBy( initialSegments, 'id' );\n\t\t}\n\t} //end switch\n} //end actualReducer()\n","/**\n * External dependencies.\n */\nimport { values } from 'lodash';\nimport createSelector from 'rememo';\nimport type { Alternative, AlternativeId, Dict, Maybe } from '@nab/types';\n\n/**\n * Internal dependencies.\n */\nimport type { State } from '../types';\n\nexport function getAlternative< A extends Dict = Dict >(\n\tstate: State,\n\tid: AlternativeId\n): Maybe< Alternative< A > > {\n\treturn state.experiment.alternatives.byId[ id ] as Alternative< A >;\n} //end getAlternative()\n\nexport const getAlternatives = createSelector(\n\t( state: State ): ReadonlyArray< Alternative > =>\n\t\tvalues( state.experiment.alternatives.byId ),\n\t( state: State ) => [ state.experiment.alternatives.byId ]\n);\n\nexport const getAlternativeIds = (\n\tstate: State\n): ReadonlyArray< AlternativeId > => state.experiment.alternatives.allIds;\n","/**\n * External dependencies\n */\nimport { values } from 'lodash';\nimport createSelector from 'rememo';\nimport type { ConversionAction, GoalId } from '@nab/types';\n\n/**\n * Internal dependencies.\n */\nimport type { State } from '../types';\n\nexport const getConversionActions = createSelector(\n\t( state: State, goalId: GoalId ): ReadonlyArray< ConversionAction > =>\n\t\tvalues( state.experiment.conversionActions[ goalId ] ),\n\t( state: State, goalId: GoalId ) => [\n\t\tstate.experiment.conversionActions,\n\t\tgoalId,\n\t]\n);\n","/**\n * External dependencies\n */\nimport { filter, map } from 'lodash';\nimport type { Goal, Maybe, Segment } from '@nab/types';\n\n/**\n * Internal dependencies.\n */\nimport type { State } from '../types';\n\nexport function isExperimentBeingSaved( state: State ): boolean {\n\treturn !! state.editor.isExperimentBeingSaved;\n} //end isExperimentBeingSaved()\n\nexport function hasExperimentBeenRecentlySaved( state: State ): boolean {\n\treturn !! state.editor.hasExperimentBeenRecentlySaved;\n} //end hasExperimentBeenRecentlySaved()\n\nexport function getActiveGoal(\n\tstate: State\n): Omit< Goal, 'conversionActions' > {\n\treturn (\n\t\tfilter( state.experiment.goals, {\n\t\t\tid: state.editor.activeGoalId,\n\t\t} )[ 0 ] || state.experiment.goals[ 0 ]\n\t);\n} //end getActiveGoal()\n\nexport function getActiveGoalIndex( state: State ): number {\n\treturn (\n\t\tmap( state.experiment.goals, 'id' ).indexOf(\n\t\t\tstate.editor.activeGoalId\n\t\t) || 0\n\t);\n} //end getActiveGoalIndex()\n\nexport function getActiveSegment(\n\tstate: State\n): Maybe< Omit< Segment, 'segmentationRules' > > {\n\treturn filter( state.experiment.segments, {\n\t\tid: state.editor.activeSegmentId,\n\t} )[ 0 ];\n} //end getActiveSegment()\n\nexport function getActiveSegmentIndex( state: State ): number {\n\treturn (\n\t\tmap( state.experiment.segments, 'id' ).indexOf(\n\t\t\tstate.editor.activeSegmentId\n\t\t) || 0\n\t);\n} //end getActiveSegmentIndex()\n\nexport function getDraftStatusRationale( state: State ): Maybe< string > {\n\tif ( ! state.experiment || ! state.experiment.data ) {\n\t\treturn;\n\t} //end if\n\n\tconst isDraft = [ 'draft', 'paused_draft' ].includes(\n\t\tstate.experiment.data.status\n\t);\n\tif ( ! isDraft ) {\n\t\treturn;\n\t} //end if\n\n\treturn state.editor.draftStatusRationale;\n} //end getDraftStatusRationale()\n\nexport function getAlternativePreviewerUrl( state: State ): string {\n\treturn state.editor.alternativePreviewerUrl;\n} //end getAlternativePreviewerUrl()\n","/**\n * External dependencies.\n */\nimport type { ExperimentId, ExperimentTypeName, Maybe } from '@nab/types';\n\n/**\n * Internal dependencies.\n */\nimport type { ExperimentAttributes, HeatmapAttributes, State } from '../types';\n\nexport function getExperimentId( state: State ): ExperimentId {\n\treturn state.experiment.data.id;\n} //end getExperimentId()\n\nexport function getExperimentType( state: State ): ExperimentTypeName {\n\treturn state.experiment.data.type;\n} //end getExperimentType()\n\nexport function getExperimentAttribute< K extends keyof ExperimentAttributes >(\n\tstate: State,\n\tattribute: K\n): ExperimentAttributes[ K ] {\n\treturn state.experiment.data[ attribute ];\n} //end getExperimentAttribute()\n\nexport function getHeatmapAttribute< K extends keyof HeatmapAttributes >(\n\tstate: State,\n\tattribute: K\n): Maybe< HeatmapAttributes[ K ] > {\n\treturn state.experiment.data[ attribute ];\n} //end getHeatmapAttribute()\n\nexport function isTestedElementInvalid( state: State ): boolean {\n\treturn !! state.experiment.data.isTestedElementInvalid;\n} //end isTestedElementInvalid()\n","/**\n * External dependencies\n */\nimport { values } from 'lodash';\nimport createSelector from 'rememo';\nimport type { Goal } from '@nab/types';\n\n/**\n * Internal dependencies.\n */\nimport type { State } from '../types';\n\nexport const getGoals = createSelector(\n\t( state: State ): ReadonlyArray< Omit< Goal, 'conversionActions' > > =>\n\t\tvalues( state.experiment.goals ),\n\t( state: State ) => [ state.experiment.goals ]\n);\n","export * from './alternatives';\nexport * from './conversion-actions';\nexport * from './editor';\nexport * from './experiment-data';\nexport * from './goals';\nexport * from './scope';\nexport * from './segmentation-rules';\nexport * from './segments';\n","/**\n * External dependencies\n */\nimport { values } from 'lodash';\nimport createSelector from 'rememo';\nimport type { ScopeRule } from '@nab/types';\n\n/**\n * Internal dependencies.\n */\nimport type { State } from '../types';\n\nexport const getScope = createSelector(\n\t( state: State ): ReadonlyArray< ScopeRule > =>\n\t\tvalues( state.experiment.scope ),\n\t( state: State ) => [ state.experiment.scope ]\n);\n","/**\n * External dependencies\n */\nimport { values } from 'lodash';\nimport createSelector from 'rememo';\nimport type { SegmentId, SegmentationRule } from '@nab/types';\n\n/**\n * Internal dependencies.\n */\nimport type { State } from '../types';\n\nexport const getSegmentationRules = createSelector(\n\t( state: State, segmentId: SegmentId ): ReadonlyArray< SegmentationRule > =>\n\t\tvalues( state.experiment.segmentationRules[ segmentId ] ),\n\t( state: State, segmentId: SegmentId ) => [\n\t\tstate.experiment.segmentationRules,\n\t\tsegmentId,\n\t]\n);\n","/**\n * External dependencies\n */\nimport { values } from 'lodash';\nimport createSelector from 'rememo';\nimport type { Segment } from '@nab/types';\n\n/**\n * Internal dependencies.\n */\nimport type { State } from '../types';\n\nexport const getSegments = createSelector(\n\t( state: State ): ReadonlyArray< Omit< Segment, 'segmentationRules' > > =>\n\t\tvalues( state.experiment.segments ),\n\t( state: State ) => [ state.experiment.segments ]\n);\n","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { dispatch, select } from '@wordpress/data';\nimport { addQueryArgs } from '@wordpress/url';\nimport { _x } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\n\nconst NOTICES = noticesStore?.name ?? 'core/notices';\n\n/**\n * External dependencies\n */\nimport { values } from 'lodash';\nimport type {\n\tAlternative,\n\tAlternativeId,\n\tDict,\n\tExperiment,\n\tGoal,\n\tHeatmap,\n\tSegment,\n} from '@nab/types';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME as NAB_EDITOR } from '../../config';\n\nexport async function saveExperiment(): Promise< void > {\n\tconst isSaving = select( NAB_EDITOR ).isExperimentBeingSaved();\n\tif ( isSaving ) {\n\t\treturn;\n\t} //end if\n\tdispatch( NAB_EDITOR ).setExperimentAsBeingSaved( true );\n\n\tconst goals: Goal[] = [];\n\tconst goalsWithoutActions = select( NAB_EDITOR ).getGoals();\n\tfor ( const goal of goalsWithoutActions ) {\n\t\tconst actions = select( NAB_EDITOR ).getConversionActions( goal.id );\n\t\tconst isWooCommerceGoal =\n\t\t\t!! actions.length || actions.every( isWcOrder );\n\t\tgoals.push( {\n\t\t\t...goal,\n\t\t\tattributes: {\n\t\t\t\t...goal.attributes,\n\t\t\t\tuseOrderRevenue: isWooCommerceGoal\n\t\t\t\t\t? goal.attributes.useOrderRevenue ?? true\n\t\t\t\t\t: undefined,\n\t\t\t\torderStatusForConversion: isWooCommerceGoal\n\t\t\t\t\t? goal.attributes.orderStatusForConversion ?? 'wc-completed'\n\t\t\t\t\t: undefined,\n\t\t\t},\n\t\t\tconversionActions: actions,\n\t\t} );\n\t} //end for\n\n\tconst segments: Segment[] = [];\n\tconst segmentsWithoutRules = select( NAB_EDITOR ).getSegments();\n\tfor ( const segment of segmentsWithoutRules ) {\n\t\tsegments.push( {\n\t\t\t...segment,\n\t\t\tsegmentationRules: select( NAB_EDITOR ).getSegmentationRules(\n\t\t\t\tsegment.id\n\t\t\t),\n\t\t} );\n\t} //end for\n\n\tconst nonControlAlternatives: Alternative[] = [];\n\tconst alternativeIds = select( NAB_EDITOR ).getAlternativeIds();\n\tconst isTestedElementInvalid = select(\n\t\tNAB_EDITOR\n\t).isTestedElementInvalid();\n\n\tconst control = select( NAB_EDITOR ).getAlternative( 'control' );\n\tfor ( const alternativeId of alternativeIds ) {\n\t\tif ( 'control' === alternativeId ) {\n\t\t\tcontinue;\n\t\t} //end if\n\t\tconst alt = select( NAB_EDITOR ).getAlternative( alternativeId );\n\t\tif ( alt ) {\n\t\t\tnonControlAlternatives.push( alt );\n\t\t} //end if\n\t} //end for\n\n\tlet experiment: Omit< Experiment, 'links' > | Omit< Heatmap, 'links' >;\n\tconst type = select( NAB_EDITOR ).getExperimentType();\n\tif ( 'nab/heatmap' === type ) {\n\t\texperiment = {\n\t\t\tid: select( NAB_EDITOR ).getExperimentId(),\n\t\t\ttype,\n\t\t\tname: select( NAB_EDITOR ).getExperimentAttribute( 'name' ),\n\t\t\tdescription: select( NAB_EDITOR ).getExperimentAttribute(\n\t\t\t\t'description'\n\t\t\t),\n\t\t\tstatus: select( NAB_EDITOR ).getExperimentAttribute( 'status' ),\n\t\t\tstartDate: select( NAB_EDITOR ).getExperimentAttribute(\n\t\t\t\t'startDate'\n\t\t\t),\n\t\t\tendDate: false,\n\t\t\tendMode: select( NAB_EDITOR ).getExperimentAttribute( 'endMode' ),\n\t\t\tendValue: select( NAB_EDITOR ).getExperimentAttribute( 'endValue' ),\n\t\t\ttrackingMode:\n\t\t\t\tselect( NAB_EDITOR ).getHeatmapAttribute( 'trackingMode' ) ??\n\t\t\t\t'post',\n\t\t\ttrackedPostId:\n\t\t\t\tselect( NAB_EDITOR ).getHeatmapAttribute( 'trackedPostId' ) ??\n\t\t\t\t0,\n\t\t\ttrackedPostType:\n\t\t\t\tselect( NAB_EDITOR ).getHeatmapAttribute( 'trackedPostType' ) ??\n\t\t\t\t'page',\n\t\t\ttrackedUrl:\n\t\t\t\tselect( NAB_EDITOR ).getHeatmapAttribute( 'trackedUrl' ) ?? '',\n\t\t};\n\t} else {\n\t\texperiment = {\n\t\t\tid: select( NAB_EDITOR ).getExperimentId(),\n\t\t\ttype,\n\t\t\tname: select( NAB_EDITOR ).getExperimentAttribute( 'name' ),\n\t\t\tdescription: select( NAB_EDITOR ).getExperimentAttribute(\n\t\t\t\t'description'\n\t\t\t),\n\t\t\tstatus: select( NAB_EDITOR ).getExperimentAttribute( 'status' ),\n\t\t\tstartDate: select( NAB_EDITOR ).getExperimentAttribute(\n\t\t\t\t'startDate'\n\t\t\t),\n\t\t\tendDate: false,\n\t\t\tendMode: select( NAB_EDITOR ).getExperimentAttribute( 'endMode' ),\n\t\t\tendValue: select( NAB_EDITOR ).getExperimentAttribute( 'endValue' ),\n\t\t\tscope: select( NAB_EDITOR ).getScope(),\n\t\t\talternatives: isTestedElementInvalid\n\t\t\t\t? [ control ]\n\t\t\t\t: [ control, ...nonControlAlternatives ],\n\t\t\tgoals,\n\t\t\tsegments,\n\t\t};\n\t} //end if\n\n\ttry {\n\t\tlet savedExperiment = await apiFetch< Experiment >( {\n\t\t\tpath: `/nab/v1/experiment/${ experiment.id }`,\n\t\t\tmethod: 'PUT',\n\t\t\tdata: experiment,\n\t\t} );\n\n\t\tif ( 'nab/heatmap' !== experiment.type && isTestedElementInvalid ) {\n\t\t\tsavedExperiment = {\n\t\t\t\t...savedExperiment,\n\t\t\t\talternatives: [\n\t\t\t\t\tsavedExperiment.alternatives[ 0 ],\n\t\t\t\t\t...nonControlAlternatives,\n\t\t\t\t],\n\t\t\t};\n\t\t} //end if\n\n\t\tdispatch( NAB_EDITOR ).setupEditor( savedExperiment );\n\t\tdispatch( NAB_EDITOR ).setExperimentAsBeingSaved( false );\n\t\tdispatch( NAB_EDITOR ).setExperimentAsRecentlySaved();\n\t} catch ( e ) {\n\t\tconst message = getErrorMessage( e );\n\t\tdispatch( NOTICES ).createErrorNotice( message );\n\t\tdispatch( NAB_EDITOR ).setExperimentAsBeingSaved( false );\n\t} //end try\n} //end saveExperiment()\n\nexport async function saveExperimentAndEditAlternative(\n\talternativeId: AlternativeId\n): Promise< void > {\n\tawait saveExperiment();\n\tif ( ! select( NAB_EDITOR ).hasExperimentBeenRecentlySaved() ) {\n\t\treturn;\n\t} //end if\n\n\tconst alternativeIds = select( NAB_EDITOR ).getAlternativeIds();\n\tif ( ! alternativeIds.includes( alternativeId ) ) {\n\t\treturn;\n\t} //end if\n\n\tconst alternative = select( NAB_EDITOR ).getAlternative( alternativeId );\n\tif ( ! alternative ) {\n\t\treturn;\n\t} //end if\n\n\tif ( ! alternative.links.edit ) {\n\t\treturn;\n\t} //end if\n\n\twindow.location.href = alternative.links.edit; // phpcs:ignore\n} //end saveExperimentAndEditAlternative()\n\nexport async function saveExperimentAndPreviewAlternative(\n\talternativeId: AlternativeId\n): Promise< void > {\n\tawait saveExperiment();\n\tif ( ! select( NAB_EDITOR ).hasExperimentBeenRecentlySaved() ) {\n\t\treturn;\n\t} //end if\n\n\tconst alternativeIds = select( NAB_EDITOR ).getAlternativeIds();\n\tif ( ! alternativeIds.includes( alternativeId ) ) {\n\t\treturn;\n\t} //end if\n\n\tconst alternative = select( NAB_EDITOR ).getAlternative( alternativeId );\n\tif ( ! alternative?.links.preview ) {\n\t\treturn;\n\t} //end if\n\n\tdispatch( NAB_EDITOR ).openAlternativePreviewer(\n\t\talternative.links.preview\n\t);\n} //end saveExperimentAndPreviewAlternative()\n\nexport async function moveToTrash(): Promise< void > {\n\tdispatch( NAB_EDITOR ).setExperimentData( { status: 'trash' } );\n\tawait saveExperiment();\n\tif ( ! select( NAB_EDITOR ).hasExperimentBeenRecentlySaved() ) {\n\t\treturn;\n\t} //end if\n\n\t// phpcs:ignore\n\twindow.location.href = addQueryArgs( 'edit.php', {\n\t\tpost_type: 'nab_experiment',\n\t} );\n} //end moveToTrash()\n\nexport async function startExperiment(): Promise< void > {\n\tawait startOrResumeExperiment(\n\t\t'start',\n\t\t_x( 'Test can’t be started', 'text', 'nelio-ab-testing' )\n\t);\n} //end startExperiment()\n\nexport async function resumeExperiment(): Promise< void > {\n\tawait startOrResumeExperiment(\n\t\t'resume',\n\t\t_x( 'Test can’t be resumed', 'text', 'nelio-ab-testing' )\n\t);\n} //end resumeExperiment()\n\n// =======\n// HELPERS\n// =======\n\nasync function startOrResumeExperiment(\n\taction: 'start' | 'resume',\n\terrorMessage?: string\n): Promise< void > {\n\tawait saveExperiment();\n\tif ( ! select( NAB_EDITOR ).hasExperimentBeenRecentlySaved() ) {\n\t\treturn;\n\t} //end if\n\n\tdispatch( NAB_EDITOR ).setExperimentAsBeingSaved( true );\n\tconst experimentId = select( NAB_EDITOR ).getExperimentId();\n\n\ttry {\n\t\tawait apiFetch( {\n\t\t\tpath: `/nab/v1/experiment/${ experimentId }/${ action }`,\n\t\t\tmethod: 'PUT',\n\t\t} );\n\t} catch ( e ) {\n\t\tconst message = getErrorMessage( e, errorMessage );\n\t\tdispatch( NOTICES ).createErrorNotice( message );\n\t\tdispatch( NAB_EDITOR ).setExperimentAsBeingSaved( false );\n\t\treturn;\n\t} //end if\n\n\t// phpcs:ignore\n\twindow.location.href = addQueryArgs( 'admin.php', {\n\t\tpage: 'nelio-ab-testing-experiment-view',\n\t\texperiment: experimentId,\n\t} );\n} //end startOrResumeExperiment()\n\nconst isWcOrder = ( { type } ) => 'nab/wc-order' === type;\n\nfunction getErrorMessage(\n\texception: { errors?: Dict< string > },\n\tdefaultMessage?: string\n): string {\n\tconst errors = exception.errors ? values( exception.errors ) : [];\n\treturn (\n\t\terrors[ 0 ] ||\n\t\tdefaultMessage ||\n\t\t_x( 'Unknown error', 'text', 'nelio-ab-testing' )\n\t);\n} //end getErrorMessage()\n","export * from './editor';\n","module.exports = window[\"React\"];","module.exports = window[\"lodash\"];","module.exports = window[\"nab\"][\"components\"];","module.exports = window[\"nab\"][\"conversionActionLibrary\"];","module.exports = window[\"nab\"][\"conversionActions\"];","module.exports = window[\"nab\"][\"data\"];","module.exports = window[\"nab\"][\"date\"];","module.exports = window[\"nab\"][\"experimentLibrary\"];","module.exports = window[\"nab\"][\"experiments\"];","module.exports = window[\"nab\"][\"i18n\"];","module.exports = window[\"nab\"][\"segmentationRuleLibrary\"];","module.exports = window[\"nab\"][\"segmentationRules\"];","module.exports = window[\"nab\"][\"utils\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"notices\"];","module.exports = window[\"wp\"][\"url\"];","'use strict';\n\n/** @typedef {(...args: any[]) => *[]} GetDependants */\n\n/** @typedef {() => void} Clear */\n\n/**\n * @typedef {{\n *   getDependants: GetDependants,\n *   clear: Clear\n * }} EnhancedSelector\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef CacheNode\n *\n * @property {?CacheNode|undefined} [prev] Previous node.\n * @property {?CacheNode|undefined} [next] Next node.\n * @property {*[]} args Function arguments for cache entry.\n * @property {*} val Function result.\n */\n\n/**\n * @typedef Cache\n *\n * @property {Clear} clear Function to clear cache.\n * @property {boolean} [isUniqueByDependants] Whether dependants are valid in\n * considering cache uniqueness. A cache is unique if dependents are all arrays\n * or objects.\n * @property {CacheNode?} [head] Cache head.\n * @property {*[]} [lastDependants] Dependants from previous invocation.\n */\n\n/**\n * Arbitrary value used as key for referencing cache object in WeakMap tree.\n *\n * @type {{}}\n */\nvar LEAF_KEY = {};\n\n/**\n * Returns the first argument as the sole entry in an array.\n *\n * @template T\n *\n * @param {T} value Value to return.\n *\n * @return {[T]} Value returned as entry in array.\n */\nfunction arrayOf(value) {\n\treturn [value];\n}\n\n/**\n * Returns true if the value passed is object-like, or false otherwise. A value\n * is object-like if it can support property assignment, e.g. object or array.\n *\n * @param {*} value Value to test.\n *\n * @return {boolean} Whether value is object-like.\n */\nfunction isObjectLike(value) {\n\treturn !!value && 'object' === typeof value;\n}\n\n/**\n * Creates and returns a new cache object.\n *\n * @return {Cache} Cache object.\n */\nfunction createCache() {\n\t/** @type {Cache} */\n\tvar cache = {\n\t\tclear: function () {\n\t\t\tcache.head = null;\n\t\t},\n\t};\n\n\treturn cache;\n}\n\n/**\n * Returns true if entries within the two arrays are strictly equal by\n * reference from a starting index.\n *\n * @param {*[]} a First array.\n * @param {*[]} b Second array.\n * @param {number} fromIndex Index from which to start comparison.\n *\n * @return {boolean} Whether arrays are shallowly equal.\n */\nfunction isShallowEqual(a, b, fromIndex) {\n\tvar i;\n\n\tif (a.length !== b.length) {\n\t\treturn false;\n\t}\n\n\tfor (i = fromIndex; i < a.length; i++) {\n\t\tif (a[i] !== b[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a memoized selector function. The getDependants function argument is\n * called before the memoized selector and is expected to return an immutable\n * reference or array of references on which the selector depends for computing\n * its own return value. The memoize cache is preserved only as long as those\n * dependant references remain the same. If getDependants returns a different\n * reference(s), the cache is cleared and the selector value regenerated.\n *\n * @template {(...args: *[]) => *} S\n *\n * @param {S} selector Selector function.\n * @param {GetDependants=} getDependants Dependant getter returning an array of\n * references used in cache bust consideration.\n */\nexport default function (selector, getDependants) {\n\t/** @type {WeakMap<*,*>} */\n\tvar rootCache;\n\n\t/** @type {GetDependants} */\n\tvar normalizedGetDependants = getDependants ? getDependants : arrayOf;\n\n\t/**\n\t * Returns the cache for a given dependants array. When possible, a WeakMap\n\t * will be used to create a unique cache for each set of dependants. This\n\t * is feasible due to the nature of WeakMap in allowing garbage collection\n\t * to occur on entries where the key object is no longer referenced. Since\n\t * WeakMap requires the key to be an object, this is only possible when the\n\t * dependant is object-like. The root cache is created as a hierarchy where\n\t * each top-level key is the first entry in a dependants set, the value a\n\t * WeakMap where each key is the next dependant, and so on. This continues\n\t * so long as the dependants are object-like. If no dependants are object-\n\t * like, then the cache is shared across all invocations.\n\t *\n\t * @see isObjectLike\n\t *\n\t * @param {*[]} dependants Selector dependants.\n\t *\n\t * @return {Cache} Cache object.\n\t */\n\tfunction getCache(dependants) {\n\t\tvar caches = rootCache,\n\t\t\tisUniqueByDependants = true,\n\t\t\ti,\n\t\t\tdependant,\n\t\t\tmap,\n\t\t\tcache;\n\n\t\tfor (i = 0; i < dependants.length; i++) {\n\t\t\tdependant = dependants[i];\n\n\t\t\t// Can only compose WeakMap from object-like key.\n\t\t\tif (!isObjectLike(dependant)) {\n\t\t\t\tisUniqueByDependants = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Does current segment of cache already have a WeakMap?\n\t\t\tif (caches.has(dependant)) {\n\t\t\t\t// Traverse into nested WeakMap.\n\t\t\t\tcaches = caches.get(dependant);\n\t\t\t} else {\n\t\t\t\t// Create, set, and traverse into a new one.\n\t\t\t\tmap = new WeakMap();\n\t\t\t\tcaches.set(dependant, map);\n\t\t\t\tcaches = map;\n\t\t\t}\n\t\t}\n\n\t\t// We use an arbitrary (but consistent) object as key for the last item\n\t\t// in the WeakMap to serve as our running cache.\n\t\tif (!caches.has(LEAF_KEY)) {\n\t\t\tcache = createCache();\n\t\t\tcache.isUniqueByDependants = isUniqueByDependants;\n\t\t\tcaches.set(LEAF_KEY, cache);\n\t\t}\n\n\t\treturn caches.get(LEAF_KEY);\n\t}\n\n\t/**\n\t * Resets root memoization cache.\n\t */\n\tfunction clear() {\n\t\trootCache = new WeakMap();\n\t}\n\n\t/* eslint-disable jsdoc/check-param-names */\n\t/**\n\t * The augmented selector call, considering first whether dependants have\n\t * changed before passing it to underlying memoize function.\n\t *\n\t * @param {*}    source    Source object for derivation.\n\t * @param {...*} extraArgs Additional arguments to pass to selector.\n\t *\n\t * @return {*} Selector result.\n\t */\n\t/* eslint-enable jsdoc/check-param-names */\n\tfunction callSelector(/* source, ...extraArgs */) {\n\t\tvar len = arguments.length,\n\t\t\tcache,\n\t\t\tnode,\n\t\t\ti,\n\t\t\targs,\n\t\t\tdependants;\n\n\t\t// Create copy of arguments (avoid leaking deoptimization).\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tdependants = normalizedGetDependants.apply(null, args);\n\t\tcache = getCache(dependants);\n\n\t\t// If not guaranteed uniqueness by dependants (primitive type), shallow\n\t\t// compare against last dependants and, if references have changed,\n\t\t// destroy cache to recalculate result.\n\t\tif (!cache.isUniqueByDependants) {\n\t\t\tif (\n\t\t\t\tcache.lastDependants &&\n\t\t\t\t!isShallowEqual(dependants, cache.lastDependants, 0)\n\t\t\t) {\n\t\t\t\tcache.clear();\n\t\t\t}\n\n\t\t\tcache.lastDependants = dependants;\n\t\t}\n\n\t\tnode = cache.head;\n\t\twhile (node) {\n\t\t\t// Check whether node arguments match arguments\n\t\t\tif (!isShallowEqual(node.args, args, 1)) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== cache.head) {\n\t\t\t\t// Adjust siblings to point to each other.\n\t\t\t\t/** @type {CacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = cache.head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {CacheNode} */ (cache.head).prev = node;\n\t\t\t\tcache.head = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\tnode = /** @type {CacheNode} */ ({\n\t\t\t// Generate the result from original function\n\t\t\tval: selector.apply(null, args),\n\t\t});\n\n\t\t// Avoid including the source object in the cache.\n\t\targs[0] = null;\n\t\tnode.args = args;\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (cache.head) {\n\t\t\tcache.head.prev = node;\n\t\t\tnode.next = cache.head;\n\t\t}\n\n\t\tcache.head = node;\n\n\t\treturn node.val;\n\t}\n\n\tcallSelector.getDependants = normalizedGetDependants;\n\tcallSelector.clear = clear;\n\tclear();\n\n\treturn /** @type {S & EnhancedSelector} */ (callSelector);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * as editor from './index';\n"],"names":[],"sourceRoot":""}